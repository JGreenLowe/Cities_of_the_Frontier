#textdomain wesnoth-Wild_Frontiers
[scenario]
	id=A_New_Beginning
	next_scenario=Summer_of_Dreams
	name=_"A New Beginning"
	turns={SEASON_LENGTH}
	victory_when_enemies_defeated=no

#ifver WESNOTH_VERSION >= 1.15.0
	do_healing=yes
#endif

	{DEFAULT_SCHEDULE}

	{DEFAULT_MUSIC_PLAYLIST}

	{GENERATE_MAP}
	{WF_GATED_MASK}

	{BEGINNING_STORY}

	[event]
		name=prestart

		# ----- Set up Campaign ------------------------------------------
		# These control enemy characteristics. See game_parameters.cfg
		{SETUP_GAME_VARIABLES}
		{SETUP_STATIC_VARIABLES}

		# ----- Season-specific initialize ----------------------------------
		# SETUP_SEASON_VARIABLES takes over in later seasons
		# What season # is it? Enemies get stronger and other effects occur
		# as the years go on. Starts at zero.
		{VARIABLE wf_vars.season -1}			# First season is 0
		{SETUP_SEASON_VARIABLES spring _"Spring"}	# season +1 done here
	[/event]

	{YOU_ARE_SIDE1 yes}
	{ANIMALS_ARE_SIDE2 0}
	{NICE_OUTLAWS_ARE_SIDE3}
	{MEAN_OUTLAWS_ARE_SIDE4}
	{ORCS_ARE_SIDE5}	# not actually present, but sides must be defined in order
	{ELVES_ARE_SIDE6}
	{UNDEAD_ARE_SIDE7}
	{CALAMITY_IS_SIDE8}
	{FRIENDS_ARE_SIDE9}

	{NEW_OUTLAWS_RAIDS $jumps.spring_outlaws LIMIT=2}
	{NEW_ORC_AND_UNDEAD_RAIDS $jumps.spring_raids LIMIT=-1} # No raids in first spring
	{NEW_ELVES_RAIDS LIMIT=0} # Raid on hard only
	{NEW_DWARVES_RAIDS LIMIT=0} # Raid on hard only

	# ----- Prestart -----------------------------------------------------
	[event]
		name=prestart


		# ----- Set up Campaign ------------------------------------------

		# Determine where signposts are on each map edge
		[set_variable]
			name=center_x
			ipart="$({MAP_WIDTH}/2)"
		[/set_variable]
		[set_variable]
			name=center_y
			ipart="$({MAP_HEIGHT}/2)"
		[/set_variable]
		# East, North, West, South in order
		{FIND_SIGN_SITE_NEAR {MAP_WIDTH} $center_y y}
		{FIND_SIGN_SITE_NEAR $center_x 1 x}
		{FIND_SIGN_SITE_NEAR 1 $center_y y}
		{FIND_SIGN_SITE_NEAR $center_x {MAP_HEIGHT} x}

		# Relics (the latter macro should be in all scenarios)
		{SELECT_RELICS}
		{SET_UP_RELICS}

		# Place the hero and his sidekicks -- can't be done in the [side] tage
		# because I need to make sure you don't get placed on top of a mountain
		# or something by playing with variables.

		# Pick a starting location and put the hero and lackeys there
		{FIND_NEAREST_HEX center_plains $center_x $center_y (
			terrain=G*
			[filter_adjacent_location]
				terrain=G*
				count=3-6
			[/filter_adjacent_location])}

		# I use the temporary leader to maintain consistency of leader id with
		# the later scenarios, thereby keeping the recall list intact. The
		# temporary leader is required in later scenarios to avoid problems
		# with the unstoring of units.
		[unit]
			canrecruit=yes
			name=_"Ã†lfric"
			unrenamable=yes
			gender=male
			id=Hero
			passable=yes
			placement=map
			random_traits=no
			side=1
			type=Sergeant
			x=$center_plains.x
			y=$center_plains.y
			[modifications]
				{TRAIT_QUICK}
				{TRAIT_STRONG}
			[/modifications]
		[/unit]
		{CLEAR_VARIABLE center_x}
		{CLEAR_VARIABLE center_y}

		[unit]
			id=loyal_swordsman
			passable=yes
			placement=leader
			random_traits=no
			role=advisor
			side=1
			type=Swordsman
			{IS_LOYAL}
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_FEARLESS}
			[/modifications]
		[/unit]
		[unit]
			id=loyal_cavalry
			passable=yes
			placement=leader
			random_traits=no
			role=cynic
			side=1
			type=Cavalryman
			{IS_LOYAL}
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_RESILIENT}
			[/modifications]
		[/unit]
		[unit]
			id=loyal_bowman
			passable=yes
			placement=leader
			random_traits=no
			role=fool
			facing=se
			side=1
			type=Bowman
			{IS_LOYAL}
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_QUICK}
			[/modifications]
		[/unit]
		# Give initial campaign gold
		[gold]
			side=1
			{STARTING_GOLD}
		[/gold]

		# Store leader's name, perhaps used in dialogue
		[store_unit]
			variable=leader_store
			[filter]
				id=Hero
			[/filter]
		[/store_unit]
		{VARIABLE wf_vars.hero_name $leader_store.name}
		{CLEAR_VARIABLE leader_store}

		# ----- Scenario-specific stuff ----------------------------------

		# Farms produce a few crops in the spring
#ifndef HARD
		[modify_side]
			side=1
			village_gold=$farm_income.spring
			village_support=$farm_support.spring
		[/modify_side]
#endif

		# Workers can build and alter terrain, can't move while working
		{WORKERS_CAN_WORK}

		# Un-recruit units to your recall list
		{ALLOW_UNRECRUIT}

		# Assign speaker roles on recruiting
		{ASSIGN_SPEAKER_ROLES}

		# Signposts
		{SET_MAP_SIGNS}

		# Fewer outlaws to start with (add more at end)
		#{VARIABLE_OP enemy.num_outlaws sub 1}

		# Place random animals in the area
		#{REPEAT $enemy.num_animals {FIRE_EVENT new_random_animal}}

		{SCATTER_UNITS $enemy.num_animals {ANIMALS_SCATTER_LIST} 1 (
			terrain=*^F*,H*,H*^E*,M*,M*^E*
			{X_AND_Y_ARE_ON_THE_MAP}
			{NOT_FILTER}
			{NOT_FILTER_ADJACENT}
		) (
			side=2
			placement=map
			passable=yes
			generate_name=yes
			random_gender=yes
			random_traits=yes
			{MOD_OBJECT_LOYAL}
		)}


		# But reduce or weaken those near the player
		[store_unit]
			variable=beast_list
			kill=yes
			[filter]
				side=2
				[filter_location]
					x,y=$center_plains.x,$center_plains.y
					radius=12
				[/filter_location]
			[/filter]
		[/store_unit]
		[if]
			{VARIABLE_CONDITIONAL beast_list.length greater_than 4}
			[then]
				{VARIABLE allowed_animals 4}
			[/then]
			[else]
				{VARIABLE allowed_animals $beast_list.length}
			[/else]
		[/if]
		{VARIABLE i 0}
		[while]
			{VARIABLE_CONDITIONAL i less_than $allowed_animals}
			[do]
				[switch]
					variable=beast_list[$i].type
					[case]
						value="Wolf,Young Ogre,WF_Tusker,Wose,Lynx"
						[unit]
							random_traits=yes
							side=2
							type="Rabbit"
							x=$beast_list[$i].x
							y=$beast_list[$i].y
							{MOD_OBJECT_LOYAL}
						[/unit]
					[/case]
					[case]
						value="Great Wolf,Direwolf,Giant Spider,Wose,Elder Wose,Ancient Wose,Ogre,WF_Gorer"
						[unit]
							random_traits=yes
							side=2
							type="WF_Tusklet"
							x=$beast_list[$i].x
							y=$beast_list[$i].y
							{MOD_OBJECT_LOYAL}
						[/unit]
					[/case]
#ifver WESNOTH_VERSION >= 1.15.0
					[case]
						value="Wose Shaman,Cave Bear"
						[unit]
							random_traits=yes
							side=2
							type="WF_Tusklet"
							x=$beast_list[$i].x
							y=$beast_list[$i].y
							{MOD_OBJECT_LOYAL}
						[/unit]
					[/case]
#endif
					[case]
						value="Giant Mudcrawler"
						[unit]
							random_traits=yes
							side=2
							type="Mudcrawler"
							x=$beast_list[$i].x
							y=$beast_list[$i].y
							{MOD_OBJECT_LOYAL}
						[/unit]
					[/case]
					[case]
						value="Water Serpent,Cuttle Fish,Sea Serpent"
						[unit]
							random_traits=yes
							side=2
							type="Tentacle of the Deep"
							x=$beast_list[$i].x
							y=$beast_list[$i].y
							{MOD_OBJECT_LOYAL}
						[/unit]
					[/case]
					# "Extra" units or other types are simply killed off
				[/switch]
				{VARIABLE_OP i add 1}
			[/do]
		[/while]
		{CLEAR_VARIABLE center_plains,beast_list,allowed_animals,i}

		# Allow the hero to build a keep
		[set_menu_item]
			id=build_keep_hero
			description=_ "Build your keep here"
			image="tent_icon.png"
			[show_if]
				[and]
					[have_location]
						terrain=Ke^Yk
						count=0
					[/have_location]
					[have_unit]
						id=Hero
						x=$x1
						y=$y1
					[/have_unit]
				[/and]
			[/show_if]
			[command]
				[if]
					[and]
						[have_location]
							terrain={BUILDABLE_TERRAIN}
							x,y=$x1,$y1
						[/have_location]
						[have_location]
							terrain={BUILDABLE_TERRAIN}
							x,y=$x1,"$($y1-1)"
						[/have_location]
					[/and]
					[then]
						{BUILD_KEEP_1}
						[message]
							{BUILD_KEEP_2}
							[text_input]
								label=_"Name:"
								variable=town_name
								text=$wf_vars.hero_name
								max_length=16
							[/text_input]
						[/message]
						[if]
							{VARIABLE_CONDITIONAL town_name equals $wf_vars.hero_name}
						[then]
							{BUILD_KEEP_3}
						[/then]
						[/if]
						[allow_recruit]
							side=1
							type=Peasant_no_Advance,Woodsman_no_Advance,Ruffian_no_Advance,Peasant Workers
						[/allow_recruit]
						{MODIFY_UNIT id=Hero moves 0}
						{MODIFY_TERRAIN "Ke^Yk" $x1 $y1}
						{MODIFY_TERRAIN "Ce" $x1 "$($y1-1)"}
						{BUILD_KEEP_4}
						{STANDARD_OBJECTIVES spring}
						{BUILD_KEEP_5}
						[if]
							{VARIABLE_CONDITIONAL town_name not_equals ""}
							[then]
								{VARIABLE wf_vars.town_name $town_name}
								{ADD_MAP_LABEL $x1 $y1 $town_name}
							[/then]
							[else]
						{VARIABLE wf_vars.town_name _"Town center"}
						{ADD_MAP_LABEL $x1 $y1 _"Town center"}
							[/else]
						[/if]
						{CLEAR_VARIABLE town_name}
						[clear_menu_item]
							id=relocate_keep_hero
						[/clear_menu_item]
						# kill "build keep" menu item for all later scenarios
						[clear_menu_item]
							id=build_keep_hero
						[/clear_menu_item]
					[/then]
					[else]
						[if]
							[and]
								{HAVE_ADVISOR}
								{HAVE_CYNIC}
							[/and]
							[then]
								{BUILD_KEEP_FAIL_1}
							[/then]
						[/if]
						{BUILD_KEEP_FAIL_2}
					[/else]
				[/if]
			[/command]
		[/set_menu_item]
		[capture_village]
			side=1
			terrain=*^V*
		[/capture_village]
	[/event]

	# Special case for starting bonus. Don't include in other scenarios
	{WF_MARKET_EVENTS}

	# ----- Start --------------------------------------------------------
	# Start: Intro dialog and tutorial
	[event]
		name=start

#ifdef HARD
		{VARIABLE_OP quota.outlaws sub 1}
#endif

		# For library report. Remove excess events.
		{VARIABLE quota.orc_raids 0}
		{VARIABLE relations.orc_raids 0}
		{REMOVE_EVENT new_orc_raid}
		{REMOVE_EVENT spawn_side_5}
		{VARIABLE quota.undead_raids 0}
		{VARIABLE relations.undead_raids 0}
		{REMOVE_EVENT new_undead_raid}
		{REMOVE_EVENT spawn_side_7}

		{GREETING_DELFADOR}
		{VARIABLE tutorial.messages yes}

		{WF_SCROLL_UNIT (id=Hero)}

		{INITIAL_DIALOGUE}

		{VARIABLE v_bonus_funds no}
		{VARIABLE v_bonus_followers no}
		{VARIABLE v_bonus_workers no}
		{VARIABLE v_bonus_guardian no}
		{VARIABLE v_bonus_mage no}
		{VARIABLE v_bonus_prisoner no}
		{VARIABLE v_bonus_artifact no}
		{VARIABLE v_bonus_termites no}
		{VARIABLE v_bonus_treatises no}
		{VARIABLE v_bonus_finance no}
		{VARIABLE v_bonus_fungi no}
		{VARIABLE v_bonus_maps no}
		{VARIABLE v_bonus_fortifications no}

		[set_variable]
			name=selected_options
			{QUANTITY value 4 2 1}
		[/set_variable]

		{ADVISOR_SAYS _"Before we get started, your father has sent you $selected_options| things that you might find very useful."}

		[while]
			{VARIABLE_CONDITIONAL selected_options greater_than 0}
		[do]
		[message]
			speaker=Hero
			message=_"Oh, didn't he mention something about..."
			[option]
				label=_"some starting funds?"
				default=yes
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_funds boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_funds}
					{VARIABLE v_bonus_funds yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
			[option]
				label=_"some loyal followers?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_followers boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_followers}
					{VARIABLE v_bonus_followers yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
			[option]
				label=_"some loyal workers?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_workers boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_workers}
					{VARIABLE v_bonus_workers yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
			[option]
				label=_"a strong guardian?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_guardian boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_guardian}
					{VARIABLE v_bonus_guardian yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
			[option]
				label=_"a powerful mage?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_mage boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_mage}
					{VARIABLE v_bonus_mage yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
			[option]
				label=_"a prisoner?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_prisoner boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_prisoner}
					{VARIABLE v_bonus_prisoner yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
			[option]
				label=_"a rare artifact?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_artifact boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_artifact}
					{VARIABLE v_bonus_artifact yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
			[option]
				label=_"a box of termites?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_termites boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_termites}
					{VARIABLE v_bonus_termites yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
#ifndef HARD
			[option]
				label=_"treatises scrolls?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_treatises boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_treatises}
					{VARIABLE v_bonus_treatises yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
#endif
#ifndef HARD
			[option]
				label=_"a book on finance?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_finance boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_finance}
					{VARIABLE v_bonus_finance yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
#endif
			[option]
				label=_"a book on fungi?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_fungi boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_fungi}
					{VARIABLE v_bonus_fungi yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
#ifndef HARD
			[option]
				label=_"some maps?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_maps boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_maps}
					{VARIABLE v_bonus_maps yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
#endif
#ifndef HARD
			[option]
				label=_"a book on castle wall fortifications?"
				[show_if]
					{VARIABLE_CONDITIONAL v_bonus_fortifications boolean_equals no}
				[/show_if]
				[command]
					{FIRE_EVENT bonus_fortifications}
					{VARIABLE v_bonus_fortifications yes}
					{VARIABLE_OP selected_options sub 1}
				[/command]
			[/option]
#endif
			[option]
				label=_"Nevermind, I don't need it. ($selected_options left)"
				[command]
					{VARIABLE selected_options 0}
				[/command]
			[/option]
		[/message]
		[/do]
		[/while]

		{CLEAR_VARIABLE selected_options}

		{CLEAR_VARIABLE v_bonus_funds}
		{CLEAR_VARIABLE v_bonus_followers}
		{CLEAR_VARIABLE v_bonus_workers}
		{CLEAR_VARIABLE v_bonus_guardian}
		{CLEAR_VARIABLE v_bonus_mage}
		{CLEAR_VARIABLE v_bonus_prisoner}
		{CLEAR_VARIABLE v_bonus_artifact}
		{CLEAR_VARIABLE v_bonus_termites}
		{CLEAR_VARIABLE v_bonus_treatises}
		{CLEAR_VARIABLE v_bonus_finance}
		{CLEAR_VARIABLE v_bonus_fungi}
		{CLEAR_VARIABLE v_bonus_maps}
		{CLEAR_VARIABLE v_bonus_fortifications}

		{REMOVE_EVENT bonus_funds}
		{REMOVE_EVENT bonus_followers}
		{REMOVE_EVENT bonus_workers}
		{REMOVE_EVENT bonus_guardian}
		{REMOVE_EVENT bonus_mage}
		{REMOVE_EVENT bonus_prisoner}
		{REMOVE_EVENT bonus_artifact}
		{REMOVE_EVENT bonus_termites}
		{REMOVE_EVENT bonus_treatises}
		{REMOVE_EVENT bonus_finance}
		{REMOVE_EVENT bonus_fungi}
		{REMOVE_EVENT bonus_maps}
		{REMOVE_EVENT bonus_fortifications}

		{REMOVE_EVENT wf_market}

		{BEGINNING_TUTORIAL}

		[objectives]
			side=1
			[objective]
				condition=win
				description=_"Build a new keep"
			[/objective]
			{OBJECTIVE_SURVIVE}
			{OBJECTIVE_DONT_DIE}
			{NOTE_GOLD_CARRYOVER}
			{NOTE_SEASON_YEAR}
		[/objectives]
		[show_objectives]
			side=1
		[/show_objectives]

		{DISPLAY_YEAR_AND _"Spring"}
	[/event]

	[event]
		name=bonus_funds
		id=bonus_funds
		first_time_only=yes

					{ADVISOR_SAYS _"Yes, indeed. Two hundred gold coins will go a long way towards securing these new lands."}
					[sound]
						name="gold.ogg"
					[/sound]
					[gold]
						side=1
						amount=200
					[/gold]
	[/event]
	[event]
		name=bonus_followers
		id=bonus_followers
		first_time_only=yes

					{CYNIC_SAYS _"Indeed, but they seem to have gotten lost."}
					# Use types that can advance without buildings
					[unit]
						animate=yes
						id=loyal_peasant
						passable=yes
						placement=leader
						random_traits=no
						side=1
						type=WF_Peasant
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_INTELLIGENT}
						[/modifications]
					[/unit]
					[unit]
						animate=yes
						id=loyal_woodsman
						passable=yes
						placement=leader
						random_traits=no
						side=1
						type=WF_Woodsman
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_RESILIENT}
						[/modifications]
					[/unit]
					[unit]
						animate=yes
						id=loyal_ruffian
						passable=yes
						placement=leader
						random_traits=no
						side=1
						type=WF_Ruffian
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_STRONG}
						[/modifications]
					[/unit]
					{SPEAKER_SAYS loyal_peasant _"<i>*huff* *puff*</i> Sorry for being late, my lord!"}
	[/event]
	[event]
		name=bonus_workers
		id=bonus_workers
		first_time_only=yes

#ifndef HARD
					{WF_WORK_FASTER}
#endif
					{CYNIC_SAYS _"Indeed, but they seem to have gotten lost."}
					[unit]
						animate=yes
						id=loyal_worker
						passable=yes
						placement=leader
						random_traits=no
						side=1
						type=Peasant Workers
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_QUICK}
						[/modifications]
					[/unit]
					{SPEAKER_SAYS loyal_worker _"<i>(panting)</i> Sorry for being late, my lord. We promise to be hardworking."}
	[/event]
	[event]
		name=bonus_guardian
		id=bonus_guardian
		first_time_only=yes

#ifndef HARD
					[set_variable]
						name=wf_vars.extra_guardian
						value=1
					[/set_variable]
#endif
					{FOOL_SAYS _"Yes, I heard about that as well. But where is he? <i>(Looks around.)</i>"}
					[store_unit]
						variable=fool_store
						mode=always_clear
						kill=no
						[filter]
							role=fool
						[/filter]
					[/store_unit]
					[unit]
						animate=yes
						id=loyal_knight
						passable=yes
						placement=map
						random_traits=no
						side=1
						type=Grand Knight
						facing=se
						x,y=$fool_store.x,$fool_store.y
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_RESILIENT}
						[/modifications]
					[/unit]
					{SPEAKER_SAYS loyal_knight _"Right behind you."}
					{FOOL_SAYS _"Eek!"}
					{SPEAKER_SAYS loyal_knight _"Your vigilance is lacking lad. Better correct that before some rogue stabs you in the back."}
					{CLEAR_VARIABLE fool_store}
	[/event]
	[event]
		name=bonus_mage
		id=bonus_mage
		first_time_only=yes

					{FOOL_SAYS _"Yes, I heard about that as well. But where is she? <i>(Looks around.)</i>"}
					[store_unit]
						variable=fool_store
						mode=always_clear
						kill=no
						[filter]
							role=fool
						[/filter]
					[/store_unit]
					[unit]
						animate=yes
						gender=female
						id=loyal_mage
						passable=yes
						placement=map
						facing=se
						random_traits=no
						side=1
						type=Silver Mage
						x,y=$fool_store.x,$fool_store.y
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_QUICK}
						[/modifications]
					[/unit]
					{SPEAKER_SAYS loyal_mage _"Right behind you."}
					{FOOL_SAYS _"Eek! Where did you come from?"}
					{CLEAR_VARIABLE fool_store}
					[modify_unit]
						[filter]
							id=Hero
							[not]
								ability=teleport
							[/not]
						[/filter]
						[object]
							[effect]
								apply_to=new_ability
								[abilities]
									{ABILITY_TELEPORT}
								[/abilities]
							[/effect]
						[/object]
					[/modify_unit]
	[/event]
	[event]
		name=bonus_prisoner
		id=bonus_prisoner
		first_time_only=yes

#ifndef HARD
					[set_variable]
						name=wf_vars.prisoner_bonus
						value=1
					[/set_variable]
#endif
					{FOOL_SAYS _"Yes, I heard about that as well. But where is she? <i>(Looks around.)</i>"}
					[unit]
						animate=yes
						id=bonus_caravan
						name=_"Turnip Cart"
						passable=yes
						placement=leader
						random_traits=no
						side=1
						type=Caravan
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
						[/modifications]
					[/unit]
					[store_unit]
						variable=caravan_store
						mode=always_clear
						kill=no
						[filter]
							id=bonus_caravan
						[/filter]
					[/store_unit]
					{SPEAKER_SAYS bonus_caravan _"Sorry, we got held up in traffic. I suspect my passenger had something to do with that."}
					{SPEAKER_SAYS bonus_caravan _"Beware milord, this one is a troublemaker. Your father was eager in kicking her out of the city."}
					[unit]
						animate=yes
						gender=female
						id=loyal_adept
						name=_"Ardonna"
						passable=yes
						placement=map
						random_traits=no
						side=1
						type=Dark Adept
						x,y=$caravan_store.x,$caravan_store.y
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_QUICK}
						[/modifications]
					[/unit]
					[kill]
						side=1
						animate=no
						id=bonus_caravan
						fire_event=no
					[/kill]
					{CLEAR_VARIABLE caravan_store}
					{HERO_SAYS _"And, what were you in for?"}
					{SPEAKER_SAYS loyal_adept _"I plead the 5th."}
	[/event]
	[event]
		name=bonus_artifact
		id=bonus_artifact
		first_time_only=yes

#ifndef HARD
					[set_variable]
						name=wf_vars.armor_caravan
						value=yes
					[/set_variable]
#endif
					{ADVISOR_SAYS _"Lo, it arrives now."}
					[unit]
						animate=yes
						id=bonus_caravan
						name=_"Peddler Wagon"
						passable=yes
						placement=leader
						random_traits=no
						side=1
						type=Caravan
						{IS_LOYAL}
						[modifications]
							{TRAIT_LOYAL}
						[/modifications]
					[/unit]
					{RANDOM_VAR rnd_item "Armor of the Thane,Bidhander,Black Cloak,Crystal Hammer,Crystal Bow,Green Cloak,Heart of the Wose,Notes of War XI,Red Cloak,Ring of Swiftness,Rusty Arrows,Poison Vial,Spear of Gobo,Staff of Freezing Death,Staff of Horror,Storm Trident,Orb of Steadfast,Orb of Teleport,Ring of Major Resistance,Sceptre of Fire,Staff of Plague,The Prince"}
					[store_unit]
						variable=caravan_store
						mode=always_clear
						kill=no
						[filter]
							id=bonus_caravan
						[/filter]
					[/store_unit]
					[fire_event]
						name=wf_market
						[primary_unit]
							x=$caravan_store.x|
							y=$caravan_store.y|
						[/primary_unit]
						#[secondary_unit]
						#	x=$x2
						#	y=$y2
						#[/secondary_unit]
						[primary_attack]
							item=$rnd_item|
							price=0
							pay=0
							x=$caravan_store.x|
							y=$caravan_store.y|
						[/primary_attack]
					[/fire_event]
					{SPEAKER_SAYS bonus_caravan _"Behold, the $rnd_item|."}
					[kill]
						side=1
						animate=no
						id=bonus_caravan
						fire_event=no
					[/kill]
					{CLEAR_VARIABLE rnd_item}
					{CLEAR_VARIABLE caravan_store}
	[/event]
	[event]
		name=bonus_termites
		id=bonus_termites
		first_time_only=yes
					{ADVISOR_SAYS _"Unleashing these hungry termites will clear the surrounding forest and hills."}
					[store_unit]
						variable=hero_store
						mode=always_clear
						kill=no
						[filter]
							id=Hero
						[/filter]
					[/store_unit]
					[terrain]
						[and]
							terrain=Hh,Hh^F*
							[and]
								x,y=$hero_store.x,$hero_store.y
								radius=9
							[/and]
						[/and]
						terrain=Gg^Es
					[/terrain]
					[sound]
						name=cave-in.ogg
					[/sound]
					{FOOL_SAYS _"Ah! Get them off me!"}
					[harm_unit]
						[filter]
							role=fool
						[/filter]
						amount=2
						kill=no
						animate=yes
					[/harm_unit]
					[terrain]
						[and]
							terrain=*^F*
							[and]
								x,y=$hero_store.x,$hero_store.y
								radius=9
							[/and]
						[/and]
						terrain=Gg^Em
					[/terrain]
					[sound]
						name="wose-die.ogg"
					[/sound]
					{CLEAR_VARIABLE hero_store}
					{HERO_SAYS _"<i>(swatting)</i> Stand still!"}
					{CYNIC_SAYS _"Haha, they couldn't tell the difference between you and a log."}
					{FOOL_SAYS _"It's not funny!"}
					[harm_unit]
						[filter]
							role=fool
						[/filter]
						amount=2
						kill=no
						animate=yes
					[/harm_unit]
					{ADVISOR_SAYS _"Eat some mushrooms, they will make you feel better."}
	[/event]
	[event]
		name=bonus_treatises
		id=bonus_treatises
		first_time_only=yes

					[set_variable]
						name=wf_vars.law_book
						value=2
					[/set_variable]
					{ADVISOR_SAYS _"Yes, here you go."}
					{HERO_SAYS _"<i>(puzzled)</i> What does my father expect me to do with these?"}
					{ADVISOR_SAYS _"I am sure he had a reason. You best read them carefully."}
	[/event]
	[event]
		name=bonus_finance
		id=bonus_finance
		first_time_only=yes

					{ADVISOR_SAYS _"Yes, here you go. This book will reduce project costs."}
					[set_variable]
						name=wf_vars.finance_book
						value=yes
					[/set_variable]
					[set_variables]
						name=proj_costs
						mode=replace
						[value]
							{COST_DISCOUNT}
						[/value]
					[/set_variables]
	[/event]
	[event]
		name=bonus_fungi
		id=bonus_fungi
		first_time_only=yes

					[set_variable]
						name=wf_vars.fungi_book
						value=4
					[/set_variable]
					{ADVISOR_SAYS _"This book will help us get the most out of mushrooms."}
					{FIRE_EVENT eat_mushrooms1}
	[/event]
	[event]
		name=bonus_maps
		id=bonus_maps
		first_time_only=yes

					{ADVISOR_SAYS _"Our scouts took good care in canvasing the landscape."}
					[set_variable]
						name=wf_vars.no_fog
						value=yes
					[/set_variable]
					[modify_side]
						side=1
						fog=no
					[/modify_side]
					[remove_shroud]
						[filter_side]
							side=1
						[/filter_side]
						#{X_AND_Y_ARE_ON_THE_MAP}
						x="$({BORDER})"-"$({MAP_WIDTH}-{BORDER})"
						y="$({BORDER})"-"$({MAP_HEIGHT}-{BORDER})"
					[/remove_shroud]
	[/event]
	[event]
		name=bonus_fortifications
		id=bonus_fortifications
		first_time_only=yes

					{ADVISOR_SAYS _"This book teaches how to build unscalable castle walls."}
					[set_variable]
						name=wf_vars.unwalkable_castle
						value=yes
					[/set_variable]
	[/event]

	# ----- In-scenario Events -------------------------------------------
	{LOW_GOLD_WARNINGS}
	{TUTORIAL_MESSAGES}
	{GENERIC_DIALOGUE}
	{LOYAL_AMLA}

	[event]
		name=new turn
		id=gradual_change
		[filter_condition]	# done this way so I can do math on the turn number
			[variable]
				name=turn_number
				numerical_equals="$({SEASON_LENGTH}-2)"
			[/variable]
		[/filter_condition]

		{END_OF_BEGINNING}

		{WF_RANDOM_PLACEMENT Mm Md}
		{WF_RANDOM_PLACEMENT Gg Gs}
	[/event]

	# ----- Defeat & Victory Conditions ----------------------------------
	# These are added to once you build your keep
	{DEFEAT_HERO_DIES}
	{DEFEAT_BANKRUPTCY}

	#{END_OF_SEASON}
	{CAMPAIGN_VICTORY}	# This needs to be here for the gold check

	# ----- Clean-up -----------------------------------------------------
	[event]
		name=time_over

		[if]
			[have_location]
				terrain=*^Yk
				count=0
			[/have_location]
		[then]
			# Haven't built a keep!
			{NARRATOR_SAYS _"Times up! You haven't built a keep."}
			[endlevel]
				result=defeat
			[/endlevel]
		[/then]
		[else]
			[fire_event]
				name=wf_victory
			[/fire_event]
			[endlevel]
				result=victory
				bonus=no
				carryover_add=no
				carryover_report=yes
				carryover_percentage=100
				save=yes
				linger_mode=no
			[/endlevel]
		[/else]
		[/if]
	[/event]

	[event]
		name=wf_victory

		[fire_event]
			name=place_recall_list
		[/fire_event]

		# Outlaw band size back to normal
		#{VARIABLE_OP enemy.num_outlaws add 1}

		{CLEAR_VARIABLE quota}
		{STORE_MAP_AND_UNITS}
		{WF_CLEANUP_MENU}
	[/event]

	{WF_DEBUG_NEXT_LEVEL}
	{WF_RAND_CHOICE_EVENT}
	{WF_DIPLOMACY}
	{WF_MISC_EVENTS}
	{WF_SEASON_DEBUG spring}
[/scenario]
