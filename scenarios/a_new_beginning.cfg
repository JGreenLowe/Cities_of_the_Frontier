#textdomain wesnoth-Wild_Frontiers
[scenario]
	id=A_New_Beginning
	next_scenario=Summer_of_Dreams
	name=_"A New Beginning"
	turns={SEASON_LENGTH}
	victory_when_enemies_defeated=no
	#do_healing=yes

	{DEFAULT_SCHEDULE}

	{DEFAULT_MUSIC_PLAYLIST}

	{GENERATE_MAP}
	{WF_GATED_MASK}

	{BEGINNING_STORY}

	[event]
		name=prestart

		# ----- Set up Campaign ------------------------------------------
		# These control enemy characteristics. See game_parameters.cfg
		{SETUP_GAME_VARIABLES}
		{SETUP_STATIC_VARIABLES}

		# ----- Season-specific initialize ----------------------------------
		# SETUP_SEASON_VARIABLES takes over in later seasons
		# What season # is it? Enemies get stronger and other effects occur
		# as the years go on. Starts at zero.
		{VARIABLE wf_vars.season -1}			# First season is 0
		{SETUP_SEASON_VARIABLES spring _"Spring"}	# season +1 done here
	[/event]

	{YOU_ARE_SIDE1 yes}
	{ANIMALS_ARE_SIDE2 0}
	{NICE_OUTLAWS_ARE_SIDE3}
	{MEAN_OUTLAWS_ARE_SIDE4}
	{ORCS_ARE_SIDE5}	# not actually present, but sides must be defined in order
	{ELVES_ARE_SIDE6}
	{UNDEAD_ARE_SIDE7}
	{CALAMITY_IS_SIDE8}
	{FRIENDS_ARE_SIDE9}

	{NEW_OUTLAWS_RAIDS $jumps.spring_outlaws LIMIT=2}
	{NEW_ORC_AND_UNDEAD_RAIDS $jumps.spring_raids LIMIT=-1} # No raids in first spring
	{NEW_ELVES_RAIDS LIMIT=0} # Raid on hard only
	{NEW_DWARVES_RAIDS LIMIT=0} # Raid on hard only

	# ----- Prestart -----------------------------------------------------
	[event]
		name=prestart


		# ----- Set up Campaign ------------------------------------------

		# Determine where signposts are on each map edge
		[set_variable]
			name=center_x
			ipart="$({MAP_WIDTH}/2)"
		[/set_variable]
		[set_variable]
			name=center_y
			ipart="$({MAP_HEIGHT}/2)"
		[/set_variable]
		# East, North, West, South in order
		{FIND_SIGN_SITE_NEAR {MAP_WIDTH} $center_y y}
		{FIND_SIGN_SITE_NEAR $center_x 1 x}
		{FIND_SIGN_SITE_NEAR 1 $center_y y}
		{FIND_SIGN_SITE_NEAR $center_x {MAP_HEIGHT} x}

		# Relics (the latter macro should be in all scenarios)
		{SELECT_RELICS}
		{SET_UP_RELICS}

		# Place the hero and his sidekicks -- can't be done in the [side] tage
		# because I need to make sure you don't get placed on top of a mountain
		# or something by playing with variables.

		# Pick a starting location and put the hero and lackeys there
		{FIND_NEAREST_HEX center_plains $center_x $center_y (
			terrain=G*
			[filter_adjacent_location]
				terrain=G*
				count=3-6
			[/filter_adjacent_location])}

		# I use the temporary leader to maintain consistency of leader id with
		# the later scenarios, thereby keeping the recall list intact. The
		# temporary leader is required in later scenarios to avoid problems
		# with the unstoring of units.
		[unit]
			id=Hero
			side=1
			canrecruit=yes
			type=Sergeant
			generate_name=yes
			gender=male
			x=$center_plains.x
			y=$center_plains.y
			placement=map
			passable=yes
		[/unit]
		{CLEAR_VARIABLE center_x}
		{CLEAR_VARIABLE center_y}

		[unit]
			id=loyal_swordsman
			side=1
			type=Swordsman
			generate_name=yes
			random_traits=no
			random_gender=yes
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_FEARLESS}
			[/modifications]
			{IS_LOYAL}
			role=advisor
			placement=leader
			passable=yes
		[/unit]
		[unit]
			id=loyal_cavalry
			side=1
			type=Cavalryman
			generate_name=yes
			random_traits=no
			random_gender=yes
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_RESILIENT}
			[/modifications]
			{IS_LOYAL}
			role=cynic
			placement=leader
			passable=yes
		[/unit]
		[unit]
			id=loyal_bowman
			side=1
			type=Bowman
			generate_name=yes
			random_traits=no
			random_gender=yes
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_QUICK}
			[/modifications]
			{IS_LOYAL}
			role=fool
			placement=leader
			passable=yes
		[/unit]
		# Give initial campaign gold
		[gold]
			side=1
			{STARTING_GOLD}
		[/gold]

		# Store leader's name, perhaps used in dialogue
		[store_unit]
			variable=leader_store
			[filter]
				id=Hero
			[/filter]
		[/store_unit]
		{VARIABLE wf_vars.hero_name $leader_store.name}
		{CLEAR_VARIABLE leader_store}

		# ----- Scenario-specific stuff ----------------------------------

		# Farms produce a few crops in the spring
		[modify_side]
			side=1
			village_gold=$farm_income.spring
			village_support=$farm_support.spring
		[/modify_side]

		# Workers can build and alter terrain, can't move while working
		{WORKERS_CAN_WORK}

		# Un-recruit units to your recall list
		{ALLOW_UNRECRUIT}

		# Assign speaker roles on recruiting
		{ASSIGN_SPEAKER_ROLES}

		# Signposts
		{SET_MAP_SIGNS}

		# Fewer outlaws to start with (add more at end)
		#{VARIABLE_OP enemy.num_outlaws sub 1}

		# Place random animals in the area
		#{REPEAT $enemy.num_animals {FIRE_EVENT new_random_animal}}

		{SCATTER_UNITS $enemy.num_animals "Vampire Bat,Giant Rat,Rabbit,Rabbit,Tusklet,Tusklet,Tusklet,Wolf,Wolf,Wolf,Lynx,Lynx,Tusker,Young Ogre,Wose" 1 (
			terrain=*^F*,H*,H*^E*,M*,M*^E*
			{X_AND_Y_ARE_ON_THE_MAP}
			{NOT_FILTER}
			{NOT_FILTER_ADJACENT}
		) (
			side=2
			placement=map
			passable=yes
			generate_name=yes
			random_gender=yes
			random_traits=yes
			{MOD_OBJECT_LOYAL}
		)}


		# But reduce or weaken those near the player
		[store_unit]
			variable=beast_list
			kill=yes
			[filter]
				side=2
				[filter_location]
					x,y=$center_plains.x,$center_plains.y
					radius=12
				[/filter_location]
			[/filter]
		[/store_unit]
		[if]
			{VARIABLE_CONDITIONAL beast_list.length greater_than 4}
			[then]
				{VARIABLE allowed_animals 4}
			[/then]
			[else]
				{VARIABLE allowed_animals $beast_list.length}
			[/else]
		[/if]
		{VARIABLE i 0}
		[while]
			{VARIABLE_CONDITIONAL i less_than $allowed_animals}
			[do]
				[switch]
					variable=beast_list[$i].type
					[case]
						value="Wolf,Young Ogre,Tusker,Wose,Lynx"
						[unit]
							side=2
							type="Rabbit"
							x=$beast_list[$i].x
							y=$beast_list[$i].y
							generate_name=yes
							random_gender=yes
							random_traits=yes
							{MOD_OBJECT_LOYAL}
						[/unit]
					[/case]
					[case]
						value="Great Wolf,Direwolf,Giant Spider,Wose,Elder Wose,Ancient Wose,Ogre,Gorer"
						[unit]
							side=2
							#type="Wolf"
							type="Tusklet"
							x=$beast_list[$i].x
							y=$beast_list[$i].y
							generate_name=yes
							random_gender=yes
							random_traits=yes
							{MOD_OBJECT_LOYAL}
						[/unit]
					[/case]
					[case]
						value="Water Serpent"
						[unit]
							side=2
							#type="Vampire Bat"
							type="Tentacle of the Deep"
							x=$beast_list[$i].x
							y=$beast_list[$i].y
							generate_name=yes
							random_gender=yes
							random_traits=yes
							{MOD_OBJECT_LOYAL}
						[/unit]
					[/case]
					# "Extra" units or other types are simply killed off
				[/switch]
				{VARIABLE_OP i add 1}
			[/do]
		[/while]
		{CLEAR_VARIABLE center_plains,beast_list,allowed_animals,i}

		# Allow the hero to build a keep
		[set_menu_item]
			id=build_keep_hero
			description=_ "Build your keep here"
			image="tent_icon.png"
			[show_if]
				[and]
					[have_location]
						terrain=Ke^Yk
						count=0
					[/have_location]
					[have_unit]
						id=Hero
						x=$x1
						y=$y1
					[/have_unit]
				[/and]
			[/show_if]
			[command]
				[if]
					[and]
						[have_location]
							terrain={BUILDABLE_TERRAIN}
							x,y=$x1,$y1
						[/have_location]
						[have_location]
							terrain={BUILDABLE_TERRAIN}
							x,y=$x1,"$($y1-1)"
						[/have_location]
					[/and]
					[then]
						{BUILD_KEEP_1}
						[message]
							{BUILD_KEEP_2}
							[text_input]
								label=_"Name:"
								variable=town_name
								text=$wf_vars.hero_name
								max_length=16
							[/text_input]
						[/message]
						[if]
							{VARIABLE_CONDITIONAL town_name equals $wf_vars.hero_name}
						[then]
							{BUILD_KEEP_3}
						[/then]
						[/if]
						[allow_recruit]
							side=1
							type=Peasant_no_Advance,Woodsman_no_Advance,Ruffian_no_Advance,Peasant Workers
						[/allow_recruit]
						{MODIFY_UNIT id=Hero moves 0}
						{MODIFY_TERRAIN "Ke^Yk" $x1 $y1}
						{MODIFY_TERRAIN "Ce" $x1 "$($y1-1)"}
						{BUILD_KEEP_4}
						{STANDARD_OBJECTIVES spring}
						[redraw]
						[/redraw]
						{BUILD_KEEP_5}
						[if]
							{VARIABLE_CONDITIONAL town_name not_equals ""}
							[then]
								{VARIABLE wf_vars.town_name $town_name}
								{ADD_MAP_LABEL $x1 $y1 $town_name}
							[/then]
							[else]
						{VARIABLE wf_vars.town_name _"Town center"}
						{ADD_MAP_LABEL $x1 $y1 _"Town center"}
							[/else]
						[/if]
						{CLEAR_VARIABLE town_name}
						[clear_menu_item]
							id=relocate_keep_hero
						[/clear_menu_item]
						# kill "build keep" menu item for all later scenarios
						[clear_menu_item]
							id=build_keep_hero
						[/clear_menu_item]
					[/then]
					[else]
						[if]
							[and]
								{HAVE_ADVISOR}
								{HAVE_CYNIC}
							[/and]
							[then]
								{BUILD_KEEP_FAIL_1}
							[/then]
						[/if]
						{BUILD_KEEP_FAIL_2}
					[/else]
				[/if]
			[/command]
		[/set_menu_item]
		[capture_village]
			side=1
			terrain=*^V*
		[/capture_village]
	[/event]

	# Special case for starting bonus. Don't include in other scenarios
	{WF_MARKET_EVENTS}

	# ----- Start --------------------------------------------------------
	# Start: Intro dialog and tutorial
	[event]
		name=start

		{GREETING_DELFADOR}
		{VARIABLE tutorial.messages yes}

		[scroll_to_unit]
			id=Hero
		[/scroll_to_unit]

		{INITIAL_DIALOGUE}

		{ADVISOR_SAYS _"Before we get started, your father has sent you something that you might find very useful."}
		[message]
			speaker=Hero
			message=_"Oh! Didn't he mention something about..."
			[option]
				label=_"some starting funds?"
				default=yes
				[command]
					{ADVISOR_SAYS _"Yes indeed. One hundred gold coins will go a long way towards securing these new lands."}
					[sound]
						name="gold.ogg"
					[/sound]
					[gold]
						side=1
						amount=100
					[/gold]
				[/command]
			[/option]
			[option]
				label=_"some loyal followers?"
				[command]
					{CYNIC_SAYS _"Indeed, but they seem to have gotten lost."}
					# Use types that can advance without buildings
					[unit]
						id=loyal_peasant
						side=1
						type=WF_Peasant
						generate_name=yes
						random_traits=no
						random_gender=yes
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_INTELLIGENT}
						[/modifications]
						{IS_LOYAL}
						placement=leader
						passable=yes
						animate=yes
					[/unit]
					[unit]
						id=loyal_woodsman
						side=1
						type=WF_Woodsman
						generate_name=yes
						random_traits=no
						random_gender=yes
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_RESILIENT}
						[/modifications]
						{IS_LOYAL}
						placement=leader
						passable=yes
						animate=yes
					[/unit]
					[unit]
						id=loyal_ruffian
						side=1
						type=WF_Ruffian
						generate_name=yes
						random_traits=no
						random_gender=yes
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_STRONG}
						[/modifications]
						{IS_LOYAL}
						placement=leader
						passable=yes
						animate=yes
					[/unit]
					{SPEAKER_SAYS loyal_peasant _"<i>*huff* *puff*</i> Sorry for being late, my lord!"}
				[/command]
			[/option]
			[option]
				label=_"a strong guardian?"
				[command]
					{FOOL_SAYS _"Yes, I heard about that as well. But where is he? <i>*Looks around.*</i>"}
					[store_unit]
						variable=fool_store
						mode=always_clear
						kill=no
						[filter]
							role=fool
						[/filter]
					[/store_unit]
					[unit]
						id=loyal_knight
						side=1
						type=Grand Knight
						generate_name=yes
						random_traits=no
						random_gender=yes
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_RESILIENT}
						[/modifications]
						{IS_LOYAL}
						placement=map
						x,y=$fool_store.x,$fool_store.y
						passable=yes
						animate=yes
					[/unit]
					{SPEAKER_SAYS loyal_knight _"Right behind you."}
					{FOOL_SAYS _"Eek!"}
					{SPEAKER_SAYS loyal_knight _"Your vigilance is lacking lad. Better correct that before some rogue stabs you in the back."}
					{CLEAR_VARIABLE fool_store}
				[/command]
			[/option]
			[option]
				label=_"a powerful mage?"
				[command]
					{FOOL_SAYS _"Yes, I heard about that as well. But where is she? <i>*Looks around.*</i>"}
					[store_unit]
						variable=fool_store
						mode=always_clear
						kill=no
						[filter]
							role=fool
						[/filter]
					[/store_unit]
					[unit]
						id=loyal_mage
						side=1
						type=Silver Mage
						generate_name=yes
						random_traits=no
						gender=female
						[modifications]
							{TRAIT_LOYAL}
							{TRAIT_QUICK}
						[/modifications]
						{IS_LOYAL}
						placement=map
						x,y=$fool_store.x,$fool_store.y
						passable=yes
						animate=yes
					[/unit]
					{SPEAKER_SAYS loyal_mage _"Right behind you."}
					{FOOL_SAYS _"Eek! Where did you come from?"}
					{CLEAR_VARIABLE fool_store}
				[/command]
			[/option]
			[option]
				label=_"a rare artifact?"
				[command]
					{ADVISOR_SAYS _"Lo, it arrives now."}
					[unit]
						id=bonus_caravan
						side=1
						type=Caravan
						generate_name=no
						random_traits=no
						[modifications]
							{TRAIT_LOYAL}
						[/modifications]
						{IS_LOYAL}
						placement=leader
						passable=yes
						animate=yes
					[/unit]
					{RANDOM_VAR rnd_item "Ring of Swiftness,Staff of Horror,Armor of the Thane,Winged Circlet,Eye of the Dragon,Green Cloak,Giant Spear,Breastplate,Spear of the Gobo,Staff of Freezing Death,Storm Trident,Crystal Bow,Elven Bow,Axe of the Centaur,Ring of Regrowth,Ring of Major Resistance,Ring of Magnetism,Potion of Feather,Potion of Animal Nature,Sword of Flame,Axe of Ice,Arcane Bow,Marksman Bow,Fire Bow,Cold Bow,Arcane Sword,Sceptre of Fire"}
					[store_unit]
						variable=caravan_store
						mode=always_clear
						kill=no
						[filter]
							id=bonus_caravan
						[/filter]
					[/store_unit]
					[fire_event]
						name=wf_market
						[primary_unit]
							x=$caravan_store.x|
							y=$caravan_store.y|
						[/primary_unit]
						[secondary_unit]
							x=$x2
							y=$y2
						[/secondary_unit]
						[primary_attack]
							item=$rnd_item|
							price=0
							pay=0
							x=$caravan_store.x|
							y=$caravan_store.y|
						[/primary_attack]
					[/fire_event]
					{SPEAKER_SAYS bonus_caravan _"Behold, the $rnd_item|."}
					[kill]
						side=1
						animate=no
						id=bonus_caravan
						fire_event=no
					[/kill]
					{CLEAR_VARIABLE rnd_item}
					{CLEAR_VARIABLE caravan_store}
				[/command]
			[/option]
			[option]
				label=_"a box of termites?"
				[command]
					{ADVISOR_SAYS _"These hungry termites will clear the surrounding forest and hills."}
					[store_unit]
						variable=hero_store
						mode=always_clear
						kill=no
						[filter]
							id=Hero
						[/filter]
					[/store_unit]
					[terrain]
						[and]
							terrain=Hh,Hh^F*
							[and]
								x,y=$hero_store.x,$hero_store.y
								radius=7
							[/and]
						[/and]
						terrain=Gg^Es
					[/terrain]
					[sound]
						name=cave-in.ogg
					[/sound]
					{FOOL_SAYS _"Ah! Get them off me!"}
					[harm_unit]
						[filter]
							role=fool
						[/filter]
						amount=2
						kill=no
						animate=yes
					[/harm_unit]
					[terrain]
						[and]
							terrain=*^F*
							[and]
								x,y=$hero_store.x,$hero_store.y
								radius=7
							[/and]
						[/and]
						terrain=Gg^Em
					[/terrain]
					[sound]
						name="wose-die.ogg"
					[/sound]
					{CLEAR_VARIABLE hero_store}
					{HERO_SAYS _"Stand still!"}
					{CYNIC_SAYS _"Haha, they couldn't tell the difference between you and a log."}
					{FOOL_SAYS _"It's not funny!"}
					[harm_unit]
						[filter]
							role=fool
						[/filter]
						amount=2
						kill=no
						animate=yes
					[/harm_unit]
					{ADVISOR_SAYS _"Eat some mushrooms, they will make you feel better."}
				[/command]
			[/option]
			[option]
				label=_"a book on treatises?"
				[command]
					[set_variable]
						name=wf_vars.law_book
						value=2
					[/set_variable]
					{ADVISOR_SAYS _"Yes, here you go."}
					{HERO_SAYS _"<i>*Puzzled*</i> What does my father expect me to do with this?"}
					{ADVISOR_SAYS _"I am sure he had a reason. You best read it carefully."}
				[/command]
			[/option]
			[option]
				label=_"a book on fungi?"
				[command]
					[set_variable]
						name=wf_vars.fungi_book
						value=4
					[/set_variable]
					{FIRE_EVENT eat_mushrooms1}
					{ADVISOR_SAYS _"This book will help us get the most out of mushrooms."}
				[/command]
			[/option]
		[/message]

		{BEGINNING_TUTORIAL}

		[objectives]
			side=1
			[objective]
				condition=win
				description=_"Build a new keep"
			[/objective]
			{OBJECTIVE_SURVIVE}
			{OBJECTIVE_DONT_DIE}
			{NOTE_GOLD_CARRYOVER}
		[/objectives]
		#[redraw]	# Hopefully this will show the objectives before the remaining tutorial messages
		#[/redraw]

		{DISPLAY_YEAR_AND _"Spring"}
	[/event]


	# ----- In-scenario Events -------------------------------------------
	{LOW_GOLD_WARNINGS}
	{TUTORIAL_MESSAGES}
	{GENERIC_DIALOGUE}
	{LOYAL_AMLA}

	[event]
		name=new turn
		id=gradual_change
		[filter_condition]	# done this way so I can do math on the turn number
			[variable]
				name=turn_number
				numerical_equals="$({SEASON_LENGTH}-2)"
			[/variable]
		[/filter_condition]

		{END_OF_BEGINNING}

		{WF_RANDOM_PLACEMENT Mm Md}
		{WF_RANDOM_PLACEMENT Gg Gs}
	[/event]

	# ----- Defeat & Victory Conditions ----------------------------------
	# These are added to once you build your keep
	{DEFEAT_HERO_DIES}
	{DEFEAT_BANKRUPTCY}

	#{END_OF_SEASON}
	{CAMPAIGN_VICTORY}	# This needs to be here for the gold check

	# ----- Clean-up -----------------------------------------------------
	[event]
		name=time_over

		[if]
			[have_location]
				terrain=Ke^Yk
				count=0
			[/have_location]
		[then]
			[endlevel]
				result=defeat
			[/endlevel]
		[/then]
		[else]
			[fire_event]
				name=wf_victory
			[/fire_event]
			[endlevel]
				result=victory
				bonus=no
				carryover_add=no
				carryover_report=yes
				carryover_percentage=100
				save=yes
				linger_mode=no
			[/endlevel]
		[/else]
		[/if]
	[/event]

	[event]
		name=wf_victory

		# Outlaw band size back to normal
		#{VARIABLE_OP enemy.num_outlaws add 1}

		{CLEAR_VARIABLE quota}
		{STORE_MAP_AND_UNITS}
		{WF_CLEANUP_MENU}
	[/event]

	{WF_RAND_CHOICE_EVENT}
	{WF_DIPLOMACY}
	{WF_MISC_EVENTS}
	{WF_SEASON_DEBUG spring}
[/scenario]
