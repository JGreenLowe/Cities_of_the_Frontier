#textdomain wesnoth-Wild_Frontiers

#define FIEF_GOLD_REWARD
    [set_variable]
        name=random_gold
        rand=150..200
    [/set_variable]
    [gold]
        side=1
        amount=$random_gold
    [/gold]
    [sound]
        name="gold.ogg"
    [/sound]
    {CLEAR_VARIABLE random_gold}
#enddef

#define KILL_LEADERS_OBJECTIVES
    [store_unit]
        [filter]
            canrecruit=yes
            [filter_side]
                [enemy_of]
                    side=1
                [/enemy_of]
            [/filter_side]
        [/filter]
        variable=store_enemies
    [/store_unit]

    [foreach]
        array=store_enemies
        [do]
            [if]
                {VARIABLE_CONDITIONAL this_item.name equals ""}
                [then]
                    {VARIABLE this_item.name "Nameless"}
                [/then]
            [/if]
            [set_variables]
                name=objective_arr
                mode=append
                [value]
                    condition=win
                    description= _ "Defeat enemy leader: $this_item.name|."
                    [show_if]
                        [have_unit]
                            id=$this_item.id
                        [/have_unit]
                    [/show_if]
                [/value]
            [/set_variables]
        [/do]
    [/foreach]

    [objectives]
        side=1
        [insert_tag]
            name=objective
            variable=objective_arr
        [/insert_tag]
        [objective]
            description= _ "Death of Hero"
            condition=lose
        [/objective]

        {TURNS_RUN_OUT}

        [gold_carryover]
            bonus=yes
            carryover_percentage=100
        [/gold_carryover]
    [/objectives]
    {CLEAR_VARIABLE store_enemies}
    {CLEAR_VARIABLE objective_arr}
#enddef

#define SHARED_GUARDIAN_EVENTS
    [event]
        name=prestart

        {VARIABLE quota.outlaws 1} # Needed for victory

        # Side 1 stuff
        [modify_side]
            side=1
            income=0
        [/modify_side]

        # Side gold
        [store_gold]
            side=1
            variable=stash_gold
        [/store_gold]
        {VARIABLE_OP stash_gold multiply -1}
        [gold]
            side=1
            amount=$stash_gold
        [/gold]
        {VARIABLE_OP stash_gold multiply -1}

        # Unstore the hero
        [store_starting_location]
            side=1
            variable=starting_one
        [/store_starting_location]

        [unstore_unit]
            variable=old_hero_store
            x,y=$starting_one.x,$starting_one.y
        [/unstore_unit]

        {CAPTURE_VILLAGES 1 $starting_one.x $starting_one.y 5}
        {CLEAR_VARIABLE starting_one}

        [gold]
            side=1
            amount={ON_DIFFICULTY 150 188 219} # *2 *1.5 *1.25
        [/gold]

        # Enemy sides stuff

        # Side 2
        [gold]
            side=2
            amount={ON_DIFFICULTY 75 125 175}
        [/gold]

        {SELECT_FIEF_FACTION}

        [modify_side]
            side=2
            hidden=no
            recruit=$recruit_type
            user_team_name=$rnd_outlaw
        [/modify_side]

        [store_starting_location]
            side=1
            variable=side1_location
        [/store_starting_location]
        [store_starting_location]
            side=2
            variable=side2_location
        [/store_starting_location]

        {DIRECTION_CONE $side1_location.x $side1_location.y $side2_location.x $side2_location.y side2_locations}
        {SPAWN_CONE 2 $recruit_type {ON_DIFFICULTY 5 6 7} side2_locations}
        {CLEAR_VARIABLE side2_locations}
        {SPAWN_CIRCLE 2 $leader_type $side2_location.x $side2_location.y}
        {CLEAR_VARIABLE leader_type}
        {CLEAR_VARIABLE recruit_type}
        {CLEAR_VARIABLE rnd_outlaw}

        {PLACE_HOSTAGE {ANIMALS_HOSTAGE_LIST} $side2_location.x $side2_location.y}
        [store_locations]
            terrain=!,W*^*,M*^*
            [and]
                [not]
                    x,y=$side2_location.x,$side2_location.y
                [/not]
            [/and]
            [and]
                x,y=$side2_location.x,$side2_location.y
                radius=8
            [/and]
            [and]
                [not]
                    [filter]
                    [/filter]
                [/not]
            [/and]
            include_borders=no
            variable=side2_locations
        [/store_locations]
        {RANDOM_VAR rnd_i 0.."$($side2_locations.length-1)"}
        [if]
            {VARIABLE_CONDITIONAL rnd_i less_than 0}
            [then]
                [store_locations]
                    terrain=!,W*^*,M*^*
                    [and]
                        [not]
                            x,y=$side2_location.x,$side2_location.y
                        [/not]
                    [/and]
                    [and]
                        [not]
                            [filter]
                            [/filter]
                        [/not]
                    [/and]
                    include_borders=no
                    variable=side2_locations
                [/store_locations]
                {RANDOM_VAR rnd_i 0.."$($side2_locations.length-1)"}
            [/then]
        [/if]

        {PLACE_GOLD_CHEST $side2_locations[$rnd_i].x $side2_locations[$rnd_i].y}
        {CLEAR_VARIABLE rnd_i}
        {CLEAR_VARIABLE side1_location}
        {CLEAR_VARIABLE side2_location}
    [/event]

    [event]
        name=time over
        [message]
            speaker=Hero
            message= _ "Aaah! They have unleashed the wild beast upon us!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    [event]
        name=die,check_objectives,turn end,enemies defeated
        first_time_only=no

        [if]
            [not]
                [have_unit]
                    [filter_side]
                        [enemy_of]
                            side=1
                        [/enemy_of]
                    [/filter_side]
                [/have_unit]
            [/not]
            [and]
                {VARIABLE_CONDITIONAL objective_goal numerical_equals 0}
            [/and]
            [then]
                {CLEAR_VARIABLE objective_goal}
                [message]
                    speaker=Hero
                    message= _ "We are done here. Let's go back."
                [/message]
                [fire_event]
                    name=wf_victory
                [/fire_event]

                [endlevel]
                    result=victory
                    bonus=yes
                    carryover_percentage=100
                    linger_mode=no
                    next_scenario=$wf_vars.next_scenario
                [/endlevel]
            [/then]
        [/if]
    [/event]

    [event]
        name=start

        [store_starting_location]
            side=2
            variable=side2_location
        [/store_starting_location]

        # Remove the enemy keep
        [terrain]
            terrain=Rb
            [and]
                x,y=$side2_location.x,$side2_location.y
                radius=1
            [/and]
        [/terrain]
        {CLEAR_VARIABLE side2_location}

        [unit]
            passable=yes
            placement=leader
            random_traits=yes
            side=1
            type=Elvish Archer
        [/unit]
        [unit]
            passable=yes
            placement=leader
            random_traits=yes
            side=1
            type=Elvish Scout
        [/unit]
        [unit]
            passable=yes
            placement=leader
            random_traits=yes
            side=1
            type=Elvish Fighter
        [/unit]
        [unit]
            passable=yes
            placement=leader
            random_traits=yes
            side=1
            type=Elvish Fighter
        [/unit]

        [unhide_unit]
        [/unhide_unit]

        [message]
            side=1
            type=Elvish Archer
            message=_"These criminals want to unleash some wild beast on us."
        [/message]

        [message]
            id=Hero
            message=_"Lay down your arms and hand over the beast."
        [/message]

        [message]
            side=2
            message=_"Never!"
        [/message]

        [objectives]
            side=1
            [objective]
                description= _ "Kill all enemy units"
                condition=win
            [/objective]
            [objective]
                description= _ "Free the wild beast"
                condition=win
            [/objective]
            [objective]
                description= _ "Loot the chest"
                condition=win
            [/objective]
            [objective]
                description= _ "Death of Hero"
                condition=lose
            [/objective]

            {TURNS_RUN_OUT}

            [gold_carryover]
                bonus=yes
                carryover_percentage=100
            [/gold_carryover]
        [/objectives]
        {CLEAR_VARIABLE store_enemies}
        {CLEAR_VARIABLE objective_arr}
    [/event]
#enddef

#define SHARED_FIEF_EVENTS
    [event]
        name=recruit
        first_time_only=no
        [filter]
            [not]
                side=1
            [/not]
        [/filter]
#ifdef EASY
        {VARIABLE autoadv no}
#endif
#ifdef NORMAL
        {RANDOM_VAR autoadv (no,no,no,no,no,no,no,no,no,yes)}
#endif
#ifdef HARD
        {RANDOM_VAR autoadv (no,no,no,no,yes)}
#endif
        [if]
            [and]
                {VARIABLE_CONDITIONAL autoadv boolean_equals yes}
                {VARIABLE_CONDITIONAL unit.level less_than 2}
                {VARIABLE_CONDITIONAL wf_vars.season greater_than_equal_to 4}
            [/and]
            [then]
                [modify_unit]
                    [filter]
                        id=$unit.id
                    [/filter]
                    experience = "$($this_unit.max_experience)"
                [/modify_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE autoadv}
    [/event]
#enddef

#define SHARED_SUB_EVENTS
    [event]
        name=last breath
        [filter]
            id=Hero
        [/filter]
        [message]
            speaker=Hero
            message= _ "Oh, crap..."
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    [event]
        name=wf_victory

        # restore gold
        [gold]
            side=1
            amount=$stash_gold
        [/gold]
        {CLEAR_VARIABLE stash_gold}

        # heal/unpoison Hero
        [heal_unit]
            [filter]
                id=Hero
            [/filter]
            amount=full
            moves=full
            restore_attacks=yes
            restore_statuses=yes
            animate=no
        [/heal_unit]
        [clear_variable]
            name=heal_amount
        [/clear_variable]

        # Save the upgraded hero
        [store_unit]
            variable=new_hero_store
            mode=always_clear
            kill=yes # otherwise they will also appear on recall list
            [filter]
                id=Hero
            [/filter]
        [/store_unit]
        {VARIABLE new_hero_store.x $old_hero_store.x}
        {VARIABLE new_hero_store.y $old_hero_store.y}
        #{CLEAR_VARIABLE new_hero_store.status.poisoned}
        #{CLEAR_VARIABLE new_hero_store.status.slowed}
        #{CLEAR_VARIABLE new_hero_store.status.uncovered}

        #Append new hero to original map units
        [set_variables]
            name=unit_store
            mode=append
            to_variable=new_hero_store
        [/set_variables]

        {CLEAR_VARIABLE old_hero_store}
        {CLEAR_VARIABLE new_hero_store}

        # Save the recruited units
        [store_unit]
            variable=crew_store
            mode=always_clear
            kill=yes # otherwise they will also appear on recall list
            [filter]
                side=1
            [/filter]
        [/store_unit]
        [for]
            array=crew_store
            reverse=yes
            [do]
                {VARIABLE crew_store[$i].x recall}
                {VARIABLE crew_store[$i].y recall}
                #{CLEAR_VARIABLE crew_store[$i].status.poisoned}
                #{CLEAR_VARIABLE crew_store[$i].status.slowed}
                #{CLEAR_VARIABLE crew_store[$i].status.uncovered}
                [set_variables]
                    name=unit_store
                    mode=append
                    to_variable=crew_store[$i]
                [/set_variables]
            [/do]
        [/for]

        {CLEAR_VARIABLE crew_store}
        {CLEAR_VARIABLE quota}
        [clear_menu_item]
            id=eat_mushrooms
        [/clear_menu_item]
    [/event]

    [event]
        # Event added just in case of :n in debug mode.
        name=victory

        # This variable gets cleared in wf_victory.
        # This way we know if this victory was fired because of :n
        [if]
            {VARIABLE_CONDITIONAL quota.outlaws not_equals $null}
            [then]
                {NARRATOR_SAYS _"Debug mode :n"}
                [fire_event]
                    name=wf_victory
                [/fire_event]
                [endlevel]
                    result=victory
                    bonus=no
                    carryover_percentage=100
                    linger_mode=no
                    next_scenario=$wf_vars.next_scenario
                [/endlevel]
            [/then]
        [/if]
    [/event]

    [event]
        name=last breath
        id=enemy_cost
        first_time_only=no

        [gold]
            side=$second_unit.side
            amount="$(floor($unit.cost * 13 / 100.0))"
        [/gold]
    [/event]

    {AMLA_EXTRA}
    {HEAL_RECALL}
    [event]
        name=prestart
        {EAT_MUSHROOMS}
    [/event]
    [event]
        name=side 1 turn refresh
        first_time_only=no

        {FIRE_EVENT heal_recall_list}
    [/event]
#enddef

#define WF_SPAWN_SIDE SIDE KEEPS
    [gold]
        side=1
        amount={ON_DIFFICULTY 150 188 219} # *2 *1.5 *1.25
    [/gold]
    [gold]
        side={SIDE}
        amount={ON_DIFFICULTY 75 125 175}
    [/gold]
    # keep_locs defined elsewhere
    {RANDOM_VAR rnd_i 0.."$(${KEEPS}.length-1)"}

    {RANDOM_VAR rnd_leader_type $leader_type}

    [unit]
        canrecruit=yes
        passable=yes
        placement=map
        random_traits=no
        side={SIDE}
        type=$rnd_leader_type
        x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
        [modifications]
            # Dragon can't fly over chasms
            [object]
                #silent=yes
                #duration=forever
                #[filter]
                #    side={SIDE}
                #    canrecruit=yes
                #[/filter]
                [effect]
                    apply_to=movement_costs
                    replace=yes
                    [movement_costs]
                        unwalkable={UNREACHABLE}
                    [/movement_costs]
                [/effect]
            [/object]
        [/modifications]
    [/unit]
    {CLEAR_VARIABLE rnd_leader_type}

    [modify_side]
        side={SIDE}
        hidden=no
        recruit=$recruit_type
        user_team_name=$rnd_outlaw
    [/modify_side]

    {CAPTURE_VILLAGES {SIDE} ${KEEPS}[$rnd_i].x ${KEEPS}[$rnd_i].y 8}

    # Prepare keeps for next side
    [store_locations]
        find_in={KEEPS}
        [not]
            x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
        [/not]
        variable={KEEPS}
    [/store_locations]
    {CLEAR_VARIABLE rnd_i}
#enddef

#define SELECT_FIEF_FACTION
    [if]
        {VARIABLE_CONDITIONAL relations.fief_factions equals $null}
        [or]
            {VARIABLE_CONDITIONAL relations.fief_factions equals ""}
        [/or]
        [then]
            {VARIABLE relations.fief_factions "Drakes,Knalgans,Loyalists,Rebels,Northerners,Undead,custom_drakes,custom_dwarves,custom_elves,custom_orcs,custom_trolls,custom_undead"}
        [/then]
    [/if]
    {WF_RAND_CHOICE $relations.fief_factions}
    {VARIABLE rnd_outlaw $random_choice}
    {CLEAR_VARIABLE random_choice}
    {WF_RAND_JOIN relations.fief_factions}
    {CLEAR_VARIABLE random_choice_arr}
    [switch]
        variable=rnd_outlaw
        [case]
            value=Drakes
            [sound]
                name="drake-hit-1.ogg"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_DRAKES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_DRAKES}}
        [/case]
        [case]
            value=Knalgans
            [sound]
                name="thunderstick.ogg"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_KNALGANS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_KNALGANS}}
        [/case]
        [case]
            value=Loyalists
            [sound]
                name="horse-canter.wav"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_LOYALISTS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_LOYALISTS}}
        [/case]
        [case]
            value=Northerners
            [sound]
                name="troll-die-2.ogg"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_NORTHERNERS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_NORTHERNERS}}
        [/case]
        [case]
            value=Rebels
            [sound]
                name="horse-elf-canter.wav"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_REBELS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_REBELS}}
        [/case]
        [case]
            value=Undead
            [sound]
                name="wail-sml.wav"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_UNDEAD}}
            {VARIABLE recruit_type {FACTION_RECRUIT_UNDEAD}}
        [/case]
        [case]
            value=custom_drakes
            [sound]
                name="drake-hit-1.ogg"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_DRAKES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_DRAKES}}
        [/case]
        [case]
            value=custom_dwarves
            [sound]
                name="thunderstick.ogg"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_DWARVES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_DWARVES}}
        [/case]
        [case]
            value=custom_orcs
            [sound]
                name="troll-die-2.ogg"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_ORCS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_ORCS}}
        [/case]
        [case]
            value=custom_trolls
            [sound]
                name="troll-die-2.ogg"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_TROLLS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_TROLLS}}
        [/case]
        [case]
            value=custom_elves
            [sound]
                name="horse-elf-canter.wav"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_ELVES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_ELVES}}
        [/case]
        [case]
            value=custom_undead
            [sound]
                name="wail-sml.wav"
            [/sound]
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_UNDEAD}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_UNDEAD}}
        [/case]
    [/switch]
#enddef

#define DIRECTION_CONE X1 Y1 X2 Y2 VAR
    [store_relative_direction]
        [source]
            x,y={X1},{Y1}
        [/source]
        [destination]
            x,y={X2},{Y2}
        [/destination]
        mode=1
        variable=direction
    [/store_relative_direction]
    #{VARIABLE direction "n"}
    [if]
        {VARIABLE_CONDITIONAL direction equals "n"}
        [or]
            {VARIABLE_CONDITIONAL direction equals "s"}
        [/or]
        [then]
            [store_nearest_locations]
                x,y={X1},{Y1}
                radius=9999
                [filter_location]
                    x,y={X2},{Y2}
                [/filter_location]
                variable=nearest_location
            [/store_nearest_locations]

            {VARIABLE farthest_radius 9}
            {VARIABLE_OP nearest_radius sub 2}
            [store_locations]
                [and]
                    x,y={X1},{Y1}
                    radius=$nearest_radius
                [/and]
                include_borders=no
                variable=src_locations
            [/store_locations]
            [store_locations]
                [and]
                    x,y={X2},{Y2}
                    radius=$farthest_radius
                [/and]
                [and]
                    find_in=src_locations
                [/and]
                variable={VAR}
            [/store_locations]
            {CLEAR_VARIABLE src_locations}
            {CLEAR_VARIABLE nearest_location}
            {CLEAR_VARIABLE nearest_radius}
            {CLEAR_VARIABLE farthest_radius}
        [/then]
        [else]
            [store_nearest_locations]
                x,y={X1},{Y1}
                radius=9999
                [filter_location]
                    x,y={X2},{Y2}
                [/filter_location]
                variable=nearest_location
            [/store_nearest_locations]

            {VARIABLE farthest_radius 9}
            {VARIABLE_OP nearest_radius sub $farthest_radius}
            [store_locations]
                [and]
                    x,y={X1},{Y1}
                    radius=$nearest_radius
                [/and]
                include_borders=no
                variable=src_locations
            [/store_locations]
            [store_locations]
                [and]
                    x,y={X2},{Y2}
                    radius=$farthest_radius
                [/and]
                [and]
                    find_in=src_locations
                [/and]
                variable={VAR}
            [/store_locations]

            [while]
                {VARIABLE_CONDITIONAL farthest_radius greater_than 2}
                [do]
                    {VARIABLE_OP farthest_radius sub 1}
                    {VARIABLE_OP nearest_radius add 1}
                    [store_locations]
                        [and]
                            x,y={X1},{Y1}
                            radius=$nearest_radius
                        [/and]
                        include_borders=no
                        variable=src_locations
                    [/store_locations]
                    [store_locations]
                        [and]
                            [and]
                                x,y={X2},{Y2}
                                radius=$farthest_radius
                            [/and]
                            [and]
                                find_in=src_locations
                            [/and]
                        [/and]
                        [or]
                            find_in={VAR}
                        [/or]
                        variable={VAR}
                    [/store_locations]
                [/do]
            [/while]
            {CLEAR_VARIABLE src_locations}
            {CLEAR_VARIABLE nearest_location}
            {CLEAR_VARIABLE nearest_radius}
            {CLEAR_VARIABLE farthest_radius}
        [/else]
    [/if]
    {CLEAR_VARIABLE direction}
    #[foreach]
    #    array={VAR}
    #    [do]
    #        [terrain]
    #            terrain=Rr
    #            [and]
    #                x,y=$this_item.x,$this_item.y
    #            [/and]
    #        [/terrain]
    #    [/do]
    #[/foreach]
#enddef

#define SPAWN_CONE SIDE TYPES NUM VAR
    [random_placement]
        num_items={NUM}
        variable=random_placement_location
        allow_less=yes
        min_distance=1
        [filter_location]
            find_in={VAR}
            include_borders=no
        [/filter_location]
        [command]
            [set_variable]
                name=random_types
                rand={TYPES}
            [/set_variable]
            [unit]
                side={SIDE}
                type=$random_types
                x=$random_placement_location.x
                y=$random_placement_location.y
                generate_name=yes
                random_traits=yes
                random_gender=yes
                upkeep=full
                passable=yes
                placement=map
                ai_special=guardian
                #[status]
                #    guardian=yes
                #[/status]
            [/unit]
            {CLEAR_VARIABLE random_types}
        [/command]
    [/random_placement]
    {CLEAR_VARIABLE random_placement_location}
#enddef

#define SPAWN_LOCATION SIDE TYPES VAR
    [foreach]
        array={VAR}
        [do]
            [set_variable]
                name=random_types
                rand={TYPES}
            [/set_variable]
            [unit]
                side={SIDE}
                type=$random_types
                x=$this_item.x
                y=$this_item.y
                generate_name=yes
                random_traits=yes
                random_gender=yes
                upkeep=full
                passable=yes
                placement=map
                ai_special=guardian
                #[status]
                #    guardian=yes
                #[/status]
            [/unit]
            {CLEAR_VARIABLE random_types}
        [/do]
    [/foreach]
#enddef

#define SPAWN_CIRCLE SIDE TYPES X Y
    [store_locations]
        [not]
            x,y={X},{Y}
        [/not]
        [and]
            x,y={X},{Y}
            radius=1
        [/and]
        variable=circle_locations
    [/store_locations]
    {REPEAT {ON_DIFFICULTY 3 2 1} (
        {VARIABLE clen $circle_locations.length}
        {VARIABLE_OP clen sub 1}
        {CLEAR_VARIABLE circle_locations[$clen]}
        {CLEAR_VARIABLE clen}
    )}
    {SPAWN_LOCATION {SIDE} {TYPES} circle_locations}
    {CLEAR_VARIABLE circle_locations}
#enddef

#define PLACE_HOSTAGE TYPES X Y
    {VARIABLE_OP objective_goal add 1}
    [set_variable]
        name=random_types
        rand={TYPES}
    [/set_variable]
    [store_unit_type]
        type=$random_types
    [/store_unit_type]
    {CLEAR_VARIABLE random_types}
    {PLACE_IMAGE "$unit_type.image|~RC(magenta>red)" {X} {Y}}
    {PLACE_IMAGE items/cage.png {X} {Y}}
    [event]
        name=moveto
        first_time_only=yes
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [remove_item]
            x,y={X},{Y}
            image="$unit_type.image|~RC(magenta>red)"
        [/remove_item]
        [unit]
            side=1
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            type=$unit_type.id
            role=friend
            x,y={X},{Y}
        [/unit]
        [fire_event]
            name=amla_extra_event
            [primary_unit]
                role=friend
            [/primary_unit]
        [/fire_event]
        [unhide_unit]
        [/unhide_unit]
        [message]
            role=friend
            message=_"About time."
        [/message]
        [message]
            speaker=unit
            message=_"YOU CAN TALK?!"
        [/message]
        [modify_unit]
            [filter]
                role=friend
            [/filter]
            role=""
        [/modify_unit]
        [remove_item]
            x,y={X},{Y}
            image=items/cage.png
        [/remove_item]
        {VARIABLE_OP objective_goal sub 1}
        [fire_event]
            name=check_objectives
        [/fire_event]
    [/event]
    {CLEAR_VARIABLE unit_type}
#enddef

#define PLACE_GOLD_CHEST X Y
    {VARIABLE_OP objective_goal add 1}
    [set_variable]
        name=random_gold
        rand=150..200
    [/set_variable]
    {PLACE_IMAGE (items/chest.png) {X} {Y}}
    [event]
        name=moveto
        first_time_only=yes
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [sound]
            name=open-chest.wav
        [/sound]
        [remove_item]
            x,y={X},{Y}
            image=items/chest.png
        [/remove_item]
        {PLACE_IMAGE (items/chest-open.png) {X} {Y}}
        [gold]
            side=1
            amount=$random_gold
        [/gold]
        [sound]
            name=gold.ogg
        [/sound]
        {VARIABLE_OP objective_goal sub 1}
        [fire_event]
            name=check_objectives
        [/fire_event]
    [/event]
    {CLEAR_VARIABLE random_gold}
#enddef
