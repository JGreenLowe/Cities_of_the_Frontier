# Relic (item) macros for Cities of the Frontier

#define SET_UP_RELICS
# Called at the beginning of each scenario to (re)-create the events needed
# Also contains details about the types of relics and the conversation
# prior to/after picking them up.  Almost all of the relic details are in 
# this event.  Also contain effect events that need to be re-generated at the 
# start of each new scenario for item persistence.
	{FOREACH relics i}
		[if]	# for some reason wesnoth changes my "false" to "no"
			{VARIABLE_CONDITIONAL relics[$i].found boolean_equals false}
			[then]
				[switch]
					variable=relics[$i].type
					[case]	# Ring of regeneration
						value="ring_of_regeneration"
						{PLACE_RELIC $i _"ring of regeneration" 
							{RING_DIALOGUE}
							{RING_OPTION}
							(_"This ring heals the wearer a little each turn") (
							[effect]
								apply_to=new_ability
								[abilities]
									{ABILITY_REGENERATES}
								[/abilities] 
							[/effect] ) ( ) }
					[/case]
					[case]	# Ring of regeneration (cursed)
						value="ring_of_regeneration_cursed"
						{PLACE_RELIC $i _"ring of regeneration" 
							{RING_DIALOGUE}
							{RING_OPTION}
							(_"This ring heals the wearer a little each turn") (
							[effect]
								apply_to=new_ability
								[abilities]
									{ABILITY_REGENERATES}
								[/abilities] 
							[/effect] ) (
							{ASSIGN_UNIT_VARIABLE $relics[$i].x $relics[$i].y curse "undead_generator"}
							{CALL_FUNCTION curse i=$i}
							 )}
					[/case]
					[case]	# Ring of resistance (all)
						value="ring_of_resistance"
						{PLACE_RELIC $i _"ring of resistance" 
							{RING_DIALOGUE}
							{RING_OPTION}
							(_"This ring increases all of the wearer's resistances by 10%") (
							[effect]
								apply_to=new ability
								[abilities]
									[dummy]
										id=high_resistance
										name=_"high resistance"
										female_name= _ "female^high resistance"
										description=_"High Resistance:
This unit's resistances are all increased by 10% from their base values."
									[/dummy]
								[/abilities]
							[/effect]
							[effect]
								apply_to=resistance
								replace=false
								[resistance]
									blade=-10
									pierce=-10
									impact=-10
									fire=-10
									cold=-10
									arcane=-10
								[/resistance]
							[/effect] ) ( ) }
					[/case]
					[case]	# Ring of magnetism
						value="ring_of_magnetism"
						{PLACE_RELIC $i _"ring of magnetism" 
							{RING_DIALOGUE}
							{RING_OPTION}
							(_"This ring greatly increases the wearer's accuracy") (
							[effect]
								apply_to=new_ability
								[abilities]
									[dummy]
										id=magnetic
										name=_"magnetic"
										female_name=_"female^magnetic"
										description=_"Magnetic:
All of this unit's attacks have an extremely high chance to hit."
									[/dummy]
								[/abilities]
							[/effect]
							[effect]
								apply_to=attack
								# no filter keys -- I want to modify all attacks
								[set_specials]
									mode=add	# not sure what happens with mages
									[chance_to_hit]
										value=90
									[/chance_to_hit]
								[/set_specials]
							[/effect] ) (
							{ASSIGN_UNIT_VARIABLE $relics[$i].x $relics[$i].y curse "magnetic"}
							{CALL_FUNCTION curse i=$i} )}
					[/case]
					[case]	# Potion of strength
						value="potion_of_strength"
						{PLACE_RELIC $i _"potion of strength" 
							{POTION_DIALOGUE}
							{POTION_OPTION}
							(_"This potion grants the drinker additional strength") (
							[effect]
								apply_to=attack
								range=melee
								increase_damage=1
							[/effect]
							[effect]
								apply_to=hitpoints
								increase_total=2
								heal_full=yes
							[/effect] ) (
							{UNIT_SAYS _"I feel incredibly powerful! Where is the nearest orc? I shall disembowel him!"} )}
					[/case]
					[case]	# Potion of stoneskin
						value="potion_of_stoneskin"
						{PLACE_RELIC $i _"potion of stoneskin" 
							{POTION_DIALOGUE}
							{POTION_OPTION}
							(_"This potion hardens the drinker's skin, but greatly reduces movement") (
							[effect]
								apply_to=new_ability
								[abilities]
									[dummy]
										id=stoneskin
										name=_"stoneskin"
										female_name= _ "female^stoneskin"
										description=_"Stoneskin:
This unit is highly resistant to all forms of attack, but its hardened skin makes movement difficult."
									[/dummy]
								[/abilities]
							[/effect]
							[effect]
								apply_to=resistance
								replace=true
								[resistance]
									blade=20
									pierce=20
									impact=20
									fire=20
									cold=20
									arcane=80
								[/resistance]
							[/effect]
							[effect]
								apply_to=movement
								set=2
							[/effect] 
							[effect]
								apply_to=movement_costs
								replace=yes
								[movement_costs]
									shallow_water=2
									reef=2
									swamp_water=2
									flat=1
									sand=2
									forest=2
									hills=2
									mountains=1
									village=1
									castle=1
									cave=2
									frozen=2
									fungus=2
								[/movement_costs]
							[/effect]
							[effect]
								apply_to=defense
								replace=yes
								[defense]
									shallow_water=90
									reef=90
									swamp_water=90
									flat=80
									sand=80
									forest=70
									hills=70
									mountains=70
									village=60
									castle=60
									cave=70
									frozen=90
									fungus=80
								[/defense]
							[/effect] ) ( )}
					[/case]
					[case]	# Potion of flight
						value="potion_of_flight"
						{PLACE_RELIC $i _"potion of flight" 
							{POTION_DIALOGUE}
							{POTION_OPTION}
							(_"This potion causes the drinker to levitate a cubit or so above the ground") (
							[effect]
								apply_to=new_ability
								[abilities]
									[dummy]
										id=levitates
										name=_"levitates"
										female_name=_"female^levitates"
										description=_"Levitates:
This unit can levitate, greatly reducing its movement costs over rough terrain."
									[/dummy]
								[/abilities]
							[/effect]
							[effect]
								apply_to=movement_costs
								replace=yes
								[movement_costs]
									shallow_water=1
									reef=1
									swamp_water=1
									flat=1
									sand=1
									forest=1
									hills=1
									mountains=1
									village=1
									castle=1
									cave=1
									frozen=1
									fungus=1
								[/movement_costs]
							[/effect] ) (
							[store_unit]
								variable=unit_to_levitate
								[filter]
									x,y=$relics[$i].x,$relics[$i].y
								[/filter]
							[/store_unit]
							{VARIABLE unit_to_levitate.flying true}
							[unstore_unit]
								variable=unit_to_levitate
							[/unstore_unit]	
							{CLEAR_VARIABLE unit_to_levitate} )}
					[/case]
					[case]	# Sword of flame
						value="sword_of_flame"
						{PLACE_RELIC $i _"sword of flame" 
							({UNIT_SAYS _"There is a beautifully-crafted blade here.  It must be magical - I can feel heat radiating from it."} )
							(_"Take the sword?") 
							(_"A blade constructed from pure fire") (
							[effect]
								apply_to=new_attack
								description=_"sword of flame"
								type=fire
								range=melee
								damage=9
								number=4
								icon="attacks/longsword.png"
							[/effect] ) ( ) }
					[/case]
					[case]	# Axe of ice
						value="axe_of_ice"
						{PLACE_RELIC $i _"axe of ice" 
							({UNIT_SAYS _"There is a beautifully-crafted axe here.  It must be magical - it seems to suck all the heat out of this place."} )
							(_"Take the axe?") 
							(_"A short-handled axe crafted from enchanted ice") (
							[effect]
								apply_to=new_attack
								description=_"axe of ice"
								type=cold
								range=melee
								damage=12
								number=3
								icon="attacks/battleaxe.png"
							[/effect] ) ( ) }
					[/case]
					[case]	# Arcane bow
						value="arcane_bow"
						{PLACE_RELIC $i "arcane bow" 
							({UNIT_SAYS _"There is a fine bow here, in perfect condition, but no arrows or quivers to be found.  I cannot identify its origin, but it does not look to be of elven make."} )
							(_"Take the bow?") 
							(_"A bow that fires bolts of magical energy") (
							[effect]
								apply_to=new_attack
								description=_"arcane bow"
								type=arcane
								range=ranged
								damage=9
								number=3
								[specials]
									{WEAPON_SPECIAL_MAGICAL}
								[/specials]
								icon="attacks/bow-elven-magic.png"
							[/effect] ) ( ) }
					[/case]					
					[else]
						{DEBUG_MSG _"Unrecognized relic. Please report this error in the forums."}
					[/else]
				[/switch]
			[/then]
			# ----- Now the effect events for particular items -----
			# These are required for item/curse continuity into new seasons
			[else]
				[switch]
					variable=relics[$i].type
					[case]	# Ring of regeneration (cursed)
						value="ring_of_regeneration_cursed"
							{CURSE_OF_UNDEAD}
					[/case]
				[/switch]
			[/else]
		[/if]
	{NEXT i}
	
	# An event to fire other events.  Events fail oddly inside the [object]
	# tag -- I think something to do with non-delayed variable substitution
	[event]
		name=curse
		first_time_only=no
		[switch]
			variable=relics[$param.i].type
			[case]
				value="ring_of_regeneration_cursed"
				{VARIABLE count_down_undead 4}
				[event]
					name=new turn
					first_time_only=no
					id=undead_curse_countdown
					{VARIABLE_OP count_down_undead sub 1}
					[if]
						{VARIABLE_CONDITIONAL count_down_undead less_than 1}
						[then]
							{CURSE_OF_UNDEAD}
							{CLEAR_VARIABLE count_down_undead}
							[event]
								id=undead_curse_countdown
								remove=yes
							[/event]
						[/then]
					[/if]
				[/event]
			[/case]
			[case]
				value="ring_of_magnetism"
				{CURSE_OF_MAGNETISM}
			[/case]
		[/switch]
	[/event]
#enddef

# ----- Specific (but repeated) item events ------------------------------
#define CURSE_OF_UNDEAD
	# Undead / regeneration curse:
	[event]
		name=side 2 turn end
		first_time_only=no
		[if]
			[have_unit]
				{FILTER_FOR_CURSE "undead_generator"}
			[/have_unit]
			[then]
				{VARIABLE turn_test "$($turn_number%2)"}
				[if]
					{VARIABLE_CONDITIONAL turn_test equals 1}
					[then]
						[store_unit]
							variable=curse_store
							[filter]
								{FILTER_FOR_CURSE "undead_generator"}
							[/filter]
						[/store_unit]
						{RANDOM_VAR curse_type ("Walking Corpse","Walking Corpse","Ghost","Skeleton","Skeleton Archer","Soulless")}
						[unit]
							type=$curse_type
							side=2
							x,y=$curse_store.x,$curse_store.y # actually will just place near here, as this is occupied
							animate=yes
						[/unit]
						[fire_event]
							name=undead_curse_commentary
							[primary_unit]
								x,y=$curse_store.x,$curse_store.y
							[/primary_unit]
						[/fire_event]
						{CLEAR_VARIABLE curse_type}
						{CLEAR_VARIABLE curse_store}
					[/then]
				[/if]
				{CLEAR_VARIABLE turn_test}
			[/then]
		[/if]
	[/event]
	
	[event]
		name=undead_curse_commentary
		first_time_only=yes	# this gets re-instated each season, so need to check the history
		{DIALOGUE undead_curse (
			{UNIT_SAYS _"Aaah!  Where did that thing come from?"}
			# the second sentence here might be untrue in very specific instances, but I don't care
			{ADVISOR_SAYS _"It looked as if it 'twas pulled from the earth itself, but I see no sign of a necromancer nearby."}
			{UNIT_SAYS _"I would not decline some help making sure it is put back in the earth, where it belongs!"} )}
	[/event]
#enddef

#define CURSE_OF_MAGNETISM
	{FORCE_CHANCE_TO_HIT (side=2,3,4,5,6,7,8) ({FILTER_FOR_CURSE "magnetic"}) 90 ()}
#enddef



# ----- Dialogue for different item types --------------------------------
# Dialogue macros should have two parts: discussion and option
#define RING_DIALOGUE
	{UNIT_SAYS _"I have found a small glowing ring.  What should I do with it, milord?"}
	{HERO_SAYS _"Well, put it on and see if it does anything!"}
#enddef

#define RING_OPTION
	_"Put on the ring?"
#enddef

#define POTION_DIALOGUE
	{UNIT_SAYS _"There are a few broken bottles here, but one small vial remains intact and has some sort of liquid inside."} 
	{HERO_SAYS _"Well, aren't you going to drink it?"}
#enddef

#define POTION_OPTION
	_"Drink the potion?"
#enddef

# ----- Initial selection of relics --------------------------------------
#define SELECT_RELICS
# Used to choose and place the relics at the beginning of the first scenario
# Placed in this file at least temporarily so I don't have to hunt it down
# to work on it.  Should be placed in a prestart event
	[set_variables]
		name=relics
		mode=replace
	[/set_variables]
	[set_variables]		# Note that frequency of appearance in this list determines
		name=relic_list	# the likelihood of appearance in the game
		{VALUE1 type "ring_of_regeneration"}
		{VALUE1 type "ring_of_regeneration_cursed"}
		{VALUE1 type "ring_of_magnetism"}
		{VALUE1 type "potion_of_strength"}
		{VALUE1 type "potion_of_stoneskin"}
		{VALUE1 type "potion_of_flight"}
		{VALUE1 type "sword_of_flame"}
		{VALUE1 type "axe_of_ice"}
		{VALUE1 type "arcane_bow"}		
		
		# maybe some other bows - a marksman one?
		# {VALUE1 type "potion_of_resistance_one"}
		# {VALUE1 type "speed"}
		# {VALUE1 type "marksman"}
		# {VALUE1 type "holy water"}
		# -give steadfast

		# Mixed / cursed:
		# increase blade resistance a lot, decrease impact (or vice versa)
		# -feral - give strong bite attack, but attracts animals (give AI goal)
		# -minus 1 or 2 health per turn, possibly with flame/ice sword (wait a few turns first), or injure on attack
		# -teleport (ability), with random teleporting occurring every 15-20 turns or so
		# chameleon - resistances or maybe defense is set randomly every turn or two
		# books? or maybe magic balls
	[/set_variables]
	
	{RANDOM_VAR i_max "$({NUM_RELICS}-1)".."$({NUM_RELICS}+1)"}
	{VARIABLE i 0}
	[while]
		{VARIABLE_CONDITIONAL i less_than $i_max}
		[do]
			# Find a suitable location and change the map as needed. 
			# The cave terrain requires some handling to place walls and 
			# ensure it's accessible
			# Terrain checking always occurs in the spring
			# No swamp castles, as swamp terrain is rare and I don't want
			# two relics next to each other
			# I'm also avoiding the map edges, as this seems to lead to odd behavior
			{RANDOM_VAR terrain_new ("Chr","Chr","Chr","Gg","Gg","Gg","Chw")}
			# Maybe add hills and/or mountains at some point
			[switch]
				variable=terrain_new
				[case]
					value="Uu"
					# TODO: deal with cave stuff here
					[store_locations]
						variable=loc_store
						x=2-"$({MAP_WIDTH}-1)"
						y=2-"$({MAP_HEIGHT}-1)"
					[/store_locations]
				[/case]
				[case]	# Ruined castles go pretty much anywhere
					value="Chr"
					[store_locations]
						variable=loc_store
						terrain=Gg,*^F*,H*,M*
						x=2-"$({MAP_WIDTH}-1)"
						y=2-"$({MAP_HEIGHT}-1)"
					[/store_locations]
				[/case]
				[case]	# Water castles go in the water, near shore
					value="Chw"
					[store_locations]
						variable=loc_store
						terrain=Ww,Ss
						x=2-"$({MAP_WIDTH}-1)"
						y=2-"$({MAP_HEIGHT}-1)"
						[filter_adjacent_location]
							terrain=W*,Ss
							count=1-3
						[/filter_adjacent_location]
					[/store_locations]
				[/case]
				[case]	# Plains cannot be placed on hills or mountains
					value="Gg"
					[store_locations]
						variable=loc_store
						terrain=Gg,G*^F*
						x=2-"$({MAP_WIDTH}-1)"
						y=2-"$({MAP_HEIGHT}-1)"
					[/store_locations]
				[/case]
			[/switch]
			{RANDOM_VAR i_loc 1..$loc_store.length}
			{VARIABLE_OP i_loc sub 1}
			{VARIABLE x1 $loc_store[$i_loc].x}
			{VARIABLE y1 $loc_store[$i_loc].y}
			{MODIFY_TERRAIN $terrain_new $x1 $y1}
			
			# Choose relic types and set variables
			{RANDOM_VAR i_relic 1..$relic_list.length}
			{VARIABLE_OP i_relic sub 1}
			# Each [case] block should Set the relics variable so moveto events
			# can be created: set values .name, .description, .image1 (ground),
			# image2 (item)
			[switch]
				variable=relic_list[$i_relic].type
				[case]
					value="ring_of_regeneration","ring_of_regeneration_cursed","ring_of_resistance","ring_of_magnetism"
					{PICK_RANDOM_IMAGES ("items/ring-brown.png","items/ring-gold.png","items/ring-red.png","items/ring-silver.png","items/ring-white.png") "ring"}
					{ASSIGN_RELIC $image1 $image2}
				[/case]
				[case]
					value="potion_of_strength","potion_of_stoneskin","potion_of_flight"
					{PICK_RANDOM_IMAGES ("items/potion-blue.png","items/potion-green.png","items/potion-grey.png","items/potion-poison.png","items/potion-red.png","items/potion-yellow.png") "potion"}
					[if] # Potions just laying around don't make much sense
						{VARIABLE_CONDITIONAL terrain_new equals "Gg"}
						[then]	
							{VARIABLE image1 "items/leather-pack.png"}
						[/then]
						[else]
							[if] # Potions on skeletons don't make much sense
								{VARIABLE_CONDITIONAL image1 equals "items/bones.png"}
								[then]	
									{VARIABLE image1 $image2}
								[/then]
							[/if]
						[/else]
					[/if]
					{ASSIGN_RELIC $image1 $image2}
				[/case]
				[case]
					value="sword_of_flame"
					{PICK_RANDOM_IMAGES ("items/flame-sword.png","items/sword.png") "sword"}
					{VARIABLE image2 "items/flame-sword.png"}	# always use this one
					{ASSIGN_RELIC $image1 $image2}
				[/case]
				[case]
					value="axe_of_ice"
					{PICK_RANDOM_IMAGES ("items/axe.png") "axe"}
					{ASSIGN_RELIC $image1 $image2}
				[/case]
				[case]
					value="arcane_bow"
					{PICK_RANDOM_IMAGES ("items/bow.png","items/bow-crystal.png","items/bow-elven.png") "axe"}
					{ASSIGN_RELIC $image1 $image2}
				[/case]
			[/switch]

			# Ensure no duplicates by deleting the chosen relic type
			{CLEAR_VARIABLE relic_list[$i_relic]}
			{VARIABLE_OP i add 1}
		[/do]
	[/while]
	{CLEAR_VARIABLE relic_list}
	{CLEAR_VARIABLE i_relic}
	{CLEAR_VARIABLE loc_store}
	{CLEAR_VARIABLE i_loc}
	{CLEAR_VARIABLE image1}
	{CLEAR_VARIABLE image2}
	{CLEAR_VARIABLE terrain_orig}
	{CLEAR_VARIABLE terrain_new}
	{CLEAR_VARIABLE i}
	{CLEAR_VARIABLE i_max}
#enddef

#define ASSIGN_RELIC IMAGE_GND IMAGE_ITEM
	# This should ONLY be called from inside a [case] in the SELECT_RELIC
	# macro.  It will fail hard elsewhere.
	{RANDOM_VAR str_i 0..2}		# pick between description strings
	[set_variables]
		name=relics
		mode=append
		[value]
			found=false
			type=$relic_list[$i_relic].type
			x,y=$x1,$y1
			image_gnd={IMAGE_GND}
			image_item={IMAGE_ITEM}
			str_i=$str_i
		[/value]
	[/set_variables]
	{CLEAR_VARIABLE str_i}
#enddef


# ----- Random image picking -----------------------------------------
#define PICK_RANDOM_IMAGES LIST KEYWORD
	[if]
		{VARIABLE_CONDITIONAL terrain_new equals "Gg"}	
		[then] # on the plains or in the forest
			[set_variable]
				name=image1
				rand="items/bones.png,items/leather-pack.png"
			[/set_variable]
			{RANDOM_VAR image2 {LIST}}
		[/then]
		[else] # in a run-down castle or cave
			[set_variable]
				name=image1
				rand="items/chest.png","items/bones.png",{LIST}
			[/set_variable]
			[if]
				{VARIABLE_CONDITIONAL image1 contains {KEYWORD}}
				[then]
					{VARIABLE image2 $image1}
				[/then]
				[else]
					{RANDOM_VAR image2 {LIST}}
				[/else]
			[/if]
		[/else]
	[/if]
#enddef


# ----- Utility macros ---------------------------------------------------
#define FILTER_FOR_CURSE CURSE
	[filter_wml]
		[variables]
			curse={CURSE}
		[/variables]
	[/filter_wml]
#enddef

#define PLACE_RELIC INDEX NAME TALK_WML OPTION_STRING DESCRIPTION EFFECT_WML POST_WML
# I've modified the "pickuppable_item" macro  here to make to use the existing
# variable and allow multiple lines of dialog.  Additional dialog can be added
# after the effect has been applied
# INDEX = index # of relics where info is stored
# TALK_WML = all pre-pickup messages between various units
# OPTION_STRING = question unit asks, e.g. "Should I put on the ring, milord?"
# EFFECT_WML = effects of the item on the unit
	[item]
		x,y=$relics[{INDEX}].x,$relics[{INDEX}].y
		image=$relics[{INDEX}].image_gnd
	[/item]	
	[event]
		name=moveto
		first_time_only=no
		delayed_variable_substitution=no	# this is necessary to get event to fire at all
		[filter]
			side=1
			x,y=$relics[{INDEX}].x,$relics[{INDEX}].y
		[/filter]
		[if]
			{VARIABLE_CONDITIONAL relics[{INDEX}].found boolean_equals false}
			[then]
				# 0 => wizard 
				# 1 => adventurer / battle
				# 2 => animal nest
				# ----- First the narrator describes the terrain -----
				[store_locations]
					variable=relic_terrain
					x,y=$relics[{INDEX}].x,$relics[{INDEX}].y
				[/store_locations]
				[switch]	# Hopefully this switches correctly -- not sure about timing of variable read
					variable=relic_terrain.terrain
					[case]	# Ruined castle/tower
						value=Chr
						[switch]
							variable=relics[{INDEX}].str_i
							[case]
								value=0
								{NARRATOR_SAYS _"A weather-worn tower of slowly crumbling stonework still stand high above the surrouding landscape.  Your soldier enters and cautiously ascends the spiraling staircase inside.  Removing the remains of a rotted door on the top floor reveals what appears to have been a wizard's workshop.  Tables are filled with both intact and shattered bottles of crudely-blown glass.  A few papers with cryptic symbols been incorporated into a bird's nest in a corner."}
							[/case]
							[case]
								value=1
								{NARRATOR_SAYS _"A few strongly-listing walls of large grey stones are all that remain of what must once have been a small but imposing fortress.  Some brush partially hides a stone staircase decending into dank storerooms beneath the outpost."}
							[/case]
							[case]
								value=2
								{NARRATOR_SAYS _"Only the base of this stone watchtower remains intact; what must have been the roof lies in a pile of weathered grey stone just outside the south wall.  The second floor appears to be a popular nesting place for the local crows."}
							[/case]
						[/switch]
					[/case]
					[case]	# Sunken ruined castle
						value=Chw
						[switch]
							variable=relics[{INDEX}].str_i
							[case]
								value=0
								{NARRATOR_SAYS _"Although water now laps at the walls of this crumbling fortress, the upper rooms of the corner towers remain dry.  In one, the stone shelves bear an odd assortment of rusting daggers, rotted books, and colorful but valueless gemstones."}
							[/case]
							[case]
								value=1
								{NARRATOR_SAYS _"Once surely on the shore, generations of gentle pushing by rising waters have felled two of the six walls of this outpost.  Rusting shields, axe heads, and the occasional humanoid bone testify to the ferocity of the final battle fought here."}
							[/case]
							[case]
								value=2
								{NARRATOR_SAYS _"Surprisingly intact given how much of them are below the water line, these walls likely once guarded a tiny village.  Now they guard schools of small fish and a nest of dangerous-looking eels."}
							[/case]
						[/switch]
					[/case]
					[case]	# Snow (these are all kind of similar)
						value=Aa
						[switch]
							variable=relics[{INDEX}].str_i
							[case]
								value=0
								{NARRATOR_SAYS _"Trudging through the endless drifts, your soldier happens to kick an object beneath the snow."}
							[/case]
							[case]
								value=1
								{NARRATOR_SAYS _"Following an unnaturally-strong hunch, your soldier walks to a particular snow drift and begins to dig."}
							[/case]
							[case]
								value=2
								{NARRATOR_SAYS _"After nearly tripping over something buried in the snow, your soldier digs away some snow to investigate."}
							[/case]
						[/switch]
					[/case]
					[else]	# Plains, done as [else] in case you build a structure over a relic or something
						[switch]
							variable=relics[{INDEX}].str_i
							[case]
								value=0
								{NARRATOR_SAYS _"The faint remains of a dirt path through the grasslands are the only evidence of habitation."}
							[/case]
							[case]
								value=1
								{NARRATOR_SAYS _"Rusting spear tips, arrowheads, and armor buckles indicate that this was once the site of a large battle.  The few intact skulls suggest that none of the participants were humans.  Given the disarray of the skeletons, it is not clear that whether either side won."}
							[/case]
							[case]
								value=2
								{NARRATOR_SAYS _"Enormous spiderwebs and animal skeletons fill a secluded hollow near a small stream.  Carefully, to avoid being caught in the webs or suprised by a returning beast, your soldier investigates."}
							[/case]
						[/switch]
					[/else]
				[/switch]
				
				# ----- Next unit or narrator describes the relic "container" -----
				# These [if]s are mutually exclusive -- no need to nest them
				# Images that don't match these keywords just won't have a 
				# message here, which should be fine.
				[if]	# leather pack
					{VARIABLE_CONDITIONAL relics[{INDEX}].image_gnd contains "pack"}
					[then]
						[switch]
							variable=relics[{INDEX}].str_i
							[case]
								value=0
								{UNIT_SAYS _"There's a large leather pack here, and in perfect condition!  It is not particularly heavy, but there seem to be a number of things inside."}
							[/case]
							[case]
								value=1
								{UNIT_SAYS _"There is somthing strange about this tiny bag.  It feels important, somehow.  And not only is it glowing a faint blue, but it seems to be larger on the inside!"}
							[/case]
							[case]
								value=2
								{UNIT_SAYS _"Tucked away under a small bush is a leather satchel, cracked with age.  The strap pulls away from bag as the soldier tries to pick it up."}
							[/case]
						[/switch]
					[/then]
				[/if]
				[if]	# Bones - these appear in both castles and plains. It's not really possible to write for both
					{VARIABLE_CONDITIONAL relics[{INDEX}].image_gnd contains "bones"}
					[then]
						[switch]	# Done as a switch in case I feel masochistic later and want to write more dialogue
							variable=relic_terrain.terrain
							[case]
								value=Chr,Chw,Uu
								[switch]
									variable=relics[{INDEX}].str_i
									[case]
										value=0
										{NARRATOR_SAYS _"A mostly-intact skeleton lies on the floor.  While its lack of burial is certainly curious, nothing in its position or in the room hints of a violent end.  The finger bones of the left hand clench tightly about an object."}
									[/case]
									[case]
										value=1
										{UNIT_SAYS _"There was a pile of bones in a corner, but something about the way it was stacked didn't look quite right.  Turns out, the pile was sitting on something interesting."}
									[/case]
									[case]
										value=2
										{NARRATOR_SAYS _"A glint of light from the nest catches the soldier's eye.  Looking closer clearly reveals a man-made object."}
									[/case]
								[/switch]
							[/case]
							[else]	# bones in the grass or snow or farm
								[switch]
									variable=relics[{INDEX}].str_i
									[case]
										value=0
										{NARRATOR_SAYS _"A diminuitive skeleton, bones bleached a stark white by the sun, lies on the ground.  What caused the man or elf to die here in the desolate emptiness of the plains, with few predators and no way for outlaws to stage an ambush, is a mystery.  A object glows weakly under its ribcage, apparently the dead traveler's only possession to withstand the ravages of time and weather."}
									[/case]
									[case]
										value=1
										{UNIT_SAYS _"Without a doubt, the owner of this skeleton was once a warrior.  Huge shoulders, remnants of some fancy armor, and the bones of a lot of smaller fighters all around him.  Of course, there's also a battle-axe through the back of his skull.  He still seems to be holding something in his hand, though."}
									[/case]
									[case]
										value=2
										{UNIT_SAYS _"This corpse was probably a man, although it has been picked clean by animals.  Looks like his leg bones have been carried away too, probably by an enterprising wolf.  There's something interesting by his side, though."}
									[/case]
								[/switch]
							[/else]
						[/switch]
					[/then]
				[/if]
				[if]	# Chest - only appears in castle/cave
					{VARIABLE_CONDITIONAL relics[{INDEX}].image_gnd contains "chest"}
					[then]
						[switch]
							variable=relics[{INDEX}].str_i
							[case]
								value=0
								{NARRATOR_SAYS _"On a shelf sits an ornate lacquered box with gold inlay, somehow missed by generations of looters.  Opening it displaces an thick film of dust and sends at least one rat scurrying away."}
							[/case]
							[case]
								value=1
								{NARRATOR_SAYS _"In a hidden alcove now revealed by a crumbling wall lies a large box made of rotting wood.  Once locked, the latch has fallen off and now lies on the ground."}
							[/case]
							[case]
								value=2
								{UNIT_SAYS _"Looks like just about the only thing the animals haven't gotten into here is this iron-bound chest.  If the hinges haven't completely rusted together, I should be able to open it."}
								{UNIT_SAYS _"Ooofff."}
							[/case]
						[/switch]
					[/then]
				[/if]
				{CLEAR_VARIABLE relic_terrain}
				
				# ----- Thirdly the unit describes the relic itself, text from setup macro -----
				{TALK_WML}
				{TUTORIAL first_relic_found _"You have found a magical artifact, perhaps left behind by a reclusive mage or a fallen adventurer.  There will be several such items scattered about the map.  While all artifacts you find in Cities of the Frontier have benefits for the units that pick them up, some will also have significant negative effects.  These negative effects may not be immediately apparent.

You are advised to only pick up magical items with units you deem to be 'expendable'."}
				[message]
					speaker=unit
					message={OPTION_STRING}
					[option]
						message=_"Yes"
						[command]
							# ----- And finally we get to the actual relic -----
							[object]
								duration=forever
								image=$relics[{INDEX}].image_item
								name={NAME}
								description={DESCRIPTION}
								{EFFECT_WML}
								[then]
									[remove_item]
										x,y=$relics[{INDEX}].x,$relics[{INDEX}].y
									[/remove_item]
									{VARIABLE relics[{INDEX}].found true}
									{POST_WML}
								[/then]
							[/object]
						[/command]
					[/option]
					[option]
						message=_"No"
						[command]
							[allow_undo]
							[/allow_undo]
							{UNIT_SAYS _"I am wary of magical items, milord.  Perhaps another might be better-suited to examine this."}
							{HERO_SAYS _"Bah!  Perhaps another might be braver."}
						[/command]
					[/option]
				[/message]
			[/then]
			[else]
				[allow_undo]
				[/allow_undo]
			[/else]
		[/if]
	[/event]
#enddef


