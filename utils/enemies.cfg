#textdomain wesnoth-Wild_Frontiers
# This file includes macros related to the appearance of various enemy groups

# The rates at which the probability of outlaw/orc occurrences rise
# Higher = more predictable
# Setting this to 1 affects the 1..100 random chance.
# They will take longer to spawn
#define ENEMY_STEP
2#enddef

#define ENEMY_INCOME
0#enddef

# default aspect values /usr/share/games/wesnoth/1.14/data/ai/utils/default_config.cfg
# https://wiki.wesnoth.org/RCA_AI
# https://wiki.wesnoth.org/AiWML
# https://wiki.wesnoth.org/Modifying_AI_Components
# AI_CONTROLLER values Aggressive: (aggression=0.9, caution=0.1) Defensive: (aggression=0.1, caution=1.0) Goal (value=20) protect_radius=6
# All scenarios have the same enemy sides, so I've defined them as macros
# for convenience. Each side macro also calls the events that
# place new enemies

#define OBJECT_LOYAL
	[modifications]
		[object]
			[effect]
				apply_to=loyal
			[/effect]
		[/object]
	[/modifications]
#enddef

#define ENEMY_GOLD_REWARD SIDE WML_MSG
	#[filter_second]
	#	side=1
	#[/filter_second]
	[store_gold]
		side={SIDE}
		variable=gold_store
	[/store_gold]
	[if]
		{VARIABLE_CONDITIONAL gold_store greater_than 0}
	[then]
		[if]
			{VARIABLE_CONDITIONAL second_unit.side numerical_equals 1}
		[then]
			{WML_MSG}
			{NARRATOR_SAYS _"You receive $gold_store gold pieces"}
			[sound]
				name="gold.ogg"
			[/sound]
		[/then]
		[/if]
		[gold]
			side=$second_unit.side
			amount=$gold_store
		[/gold]
	[/then]
	[/if]
	#reset to zero
	{VARIABLE_OP gold_store multiply -1}
	[gold]
		side={SIDE}
		amount=$gold_store
	[/gold]
	{CLEAR_VARIABLE gold_store}
#enddef

# ----- Animals ----------------------------------------------------------
#define ANIMALS_ARE_SIDE2 LEADER_VALUE
	[side]
	# Creates the animals as side 2. Leader value must be supplied -- animals
	# will be more aggressive during the winter. New animals spawn semi-randomly.
		side=2
		controller=ai
		team_name=wild_animals,elves,undead
		user_team_name=_"Wild animals"
		no_leader=yes
		#hidden=yes
		shroud=no
		fog=no
		gold=0
		income={ENEMY_INCOME}
		[ai]	# make the AI treat each unit as independently as possible
			#caution=0.25
			#aggression=0.9
			attack_depth=1	# IGNORED, IS THERE AN EQUIVALENT?
			grouping=no
			leader_value={LEADER_VALUE}	# allows me to make animals attack your town only in the winter
			simple_targeting=yes
			village_value=0.5

			# Make all enemies aggressive
			aggression=0.9
			caution=0.1
		[/ai]
		#{MICRO_AI_LURKERS} # HACK FOR 1.11.6, REMOVE IN FUTURE
	[/side]

	# Micro-AI tag has to be applied in an event tag
	[event]
		name=prestart
		[modify_ai]
			side=2
			action=add
			path=goal[]
			[goal]	# not sure if this works with simple targeting
				id=curse2
				name=target
				[criteria]
					{FILTER_FOR_CURSE "feral"}
				[/criteria]
				value=20
			[/goal]
		[/modify_ai]
		[micro_ai]
			action=add
			side=2
			ai_type=lurkers
			[filter]
				type=Wolf
				[or]
					type=Great Wolf
				[/or]
				[or]
					type=Direwolf
				[/or]
				[or]
					type=Wose
				[/or]
				[or]
					type=Elder Wose
				[/or]
				[or]
					type=Ancient Wose
				[/or]
			[/filter]
			[filter_location]
				terrain=*^F*
			[/filter_location]
			stationary=yes
		[/micro_ai]
	[/event]


	[event]
	# A semi-random chance for a new animal to spawn on each turn. Animals spawn
	# at the end of their side turn to prevent an animal appearing out of nowhere
	# and attacking. Animals tend toward equilibrium -- if you've killed a bunch,
	# it's more likely that more will spawn.
		name=side 2 turn end
		first_time_only=no
		[store_unit]
			variable=animal_list
			[filter]
				side=2
			[/filter]
		[/store_unit]
		{RANDOM_VAR chance 1..100}
		{VARIABLE threshold "$($animal_list.length*75.0/$enemy.num_animals)"}
		[if]
			{VARIABLE_CONDITIONAL chance greater_than $threshold}
			[then]
				#{WF_DEBUG "Spawning 3 new random animals t: $turn_number r: $chance > $threshold"}
				{REPEAT 3 {NEW_RANDOM_ANIMAL}}
			[/then]
		[/if]
		{CLEAR_VARIABLE chance}
		{CLEAR_VARIABLE threshold}
		{CLEAR_VARIABLE animal_list}
	[/event]
#enddef

#define NEW_RANDOM_ANIMAL
# Creates a new animal of (weighted) random type and places it at a
# random location on the map.
	# boars at all levels (copy from Borstep)
	# level0: vamp bat, giant rat, falcon
	# level1: blood bat, wolf, elder falcon, young ogre
	# level2: great wolf, ogre, dread bat, bear (need to make), gryphon
	# level3: direwolf, grizzly bear? (need to make)
	{RANDOM_VAR rnd_level 1..100}
	{DIFFICULTY_VAR multiplier 0.9 1.0 1.1}
	{VARIABLE_OP rnd_level multiply $multiplier|}

	[if]
		{VARIABLE_CONDITIONAL rnd_level less_than_equal_to 40}
		[then]	# generate a level 0 animal
			{RANDOM_VAR rnd_type "Vampire Bat,Giant Rat"}
		[/then]
	[/if]
	[if]
		[and]
			{VARIABLE_CONDITIONAL rnd_level greater_than 40}
			{VARIABLE_CONDITIONAL rnd_level less_than_equal_to 85}
		[/and]
		[then]	# generate a level 1 animal, prefer wolves
			{RANDOM_VAR rnd_type "Wolf,Wolf,Wolf,Wolf,Young Ogre,Wose"}
			# taking out blood bats because they suck
		[/then]
	[/if]
	[if]
		[and]
			{VARIABLE_CONDITIONAL rnd_level greater_than 85}
			{VARIABLE_CONDITIONAL rnd_level less_than_equal_to 95}
		[/and]
		[then]	# generate a level 2 animal, prefer wolves
			{RANDOM_VAR rnd_type "Great Wolf,Great Wolf,Great Wolf,Great Wolf,Water Serpent,Elder Wose,Ogre"}
			# Removed Gryphons and Dread Bats -- they are %^#@!&* annoying
		[/then]
	[/if]
	[if]
		{VARIABLE_CONDITIONAL rnd_level greater_than 95}
		[then]	# generate a level 3 animal, rare
			{RANDOM_VAR rnd_type "Direwolf,Direwolf,Direwolf,Direwolf,Giant Spider,Ancient Wose"}
		[/then]
	[/if]

	[if]
		{VARIABLE_CONDITIONAL rnd_type equals "Water Serpent"}
		[then]
			{VARIABLE allowed_terrains "W*,S*"}
		[/then]
		[else]
			{VARIABLE allowed_terrains "*^F*,H*,M*,S*"}
		[/else]
	[/if]
	[store_locations]
		variable=wild_places
		{X_AND_Y_ARE_ON_THE_MAP}
		terrain=$allowed_terrains
		{NOT_FILTER}
		[not]
			[filter_adjacent_location]
				[filter]
				[/filter]
			[/filter_adjacent_location]
		[/not]
	[/store_locations]
	{RANDOM_VAR rnd_i 0.."$($wild_places.length-1)"}

	[unit]
		side=2
		type=$rnd_type
		x=$wild_places[$rnd_i].x
		y=$wild_places[$rnd_i].y
		placement=map
		passable=yes
		random_traits=yes
		{OBJECT_LOYAL}
	[/unit]

	{CLEAR_VARIABLE rnd_level,multiplier,rnd_type,rnd_i,allowed_terrains,wild_places}
#enddef

# ----- Outlaws ----------------------------------------------------------
#define NICE_OUTLAWS_ARE_SIDE3
	[side]
	# Creates outlaws as side 3, with a supplied JUMP (smaller means more
	# frequent appearances of these outlaws).
	# This side is "nice", in that they will not burn down your villages,
	# just your blacksmiths etc. and your encampments.
		side=3
		controller=ai
		team_name=nice_outlaws
		user_team_name=_"Outlaws"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#aggression=0.9
			#caution=0.25			# If caution is high, they never attack at all
			#grouping=defensive
			#leader_aggression=-0.5
			#leader_ignores_keep=yes	# Can't recruit, so no point
			leader_value=1.0
			village_value=0.5

			# Make all enemies aggressive
			aggression=0.9
			caution=0.1
			grouping=no
			simple_targeting=yes
		[/ai]
		{FLAG_VARIANT6 "ragged"}
	[/side]

	[event]
		name=prestart
		[modify_ai]
			side=3
			action=add
			path=goal[]
			[goal]				# focus on the player
				id=target3
				name=target
				[criteria]
					side=1
				[/criteria]
				value=20
			[/goal]
			#[goal]				# not the animals or orcs
			#	name=target
			#	[criteria]
			#		side=2
			#	[/criteria]
			#	value=0.1
			#[/goal]
			#[goal]				# not the animals or orcs
			#	name=target
			#	[criteria]
			#		side=4,5,7,8,9	# I am 3 and allied with 6
			#	[/criteria]
			#	value=1
			#[/goal]
			#[goal]				# Aim at the town -- villages and castles
			#	name=target_location
			#	[criteria]
			#		[and]
			#			[filter_owner]
			#				side=1
			#			[/filter_owner]
			#			terrain=*^V*
			#		[/and]
			#		[or]
			#			terrain=Ke^Yk
			#		[/or]
			#	[/criteria]
			#	value=3
			#[/goal]
			#[goal]				# Don't leave the "leader" out to dry
			#	name=protect_unit
			#	[criteria]
			#		role=outlaw_leader
			#		side=3
			#	[/criteria]
			#	protect_radius=6
			#	value=3
			#[/goal]
		[/modify_ai]
	[/event]

	#{WILL_BURN_BUILDINGS 3}
	#{WILL_BURN_FARMS 3 25}		# burn some farms, but not all

	[event]
		name=die
		first_time_only=no
		[filter]
			side=3
			role=outlaw_leader
		[/filter]
		{ENEMY_GOLD_REWARD 3 (
{SECOND_UNIT_SAYS _"These scum must have ransacked a lot of villages to have this much gold."}
{SECOND_UNIT_SAYS _"Still, I do not think the rightful owners have much use for it anymore."}
)}
	[/event]
#enddef

#define MEAN_OUTLAWS_ARE_SIDE4
	# Creates outlaws as side 4.
	# This side is "mean", in that they will burn down your villages as well as
	# your blacksmiths etc. and your encampments.
	[side]
		side=4
		controller=ai
		team_name=mean_outlaws
		user_team_name=_"Outlaws"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#aggression=0.9
			#caution=0.25
			#grouping=defensive
			#leader_aggression=-0.5
			#leader_ignores_keep=yes	# Can't recruit, so no point
			#village_value=1
			leader_value=1.0

			# Make all enemies aggressive
			aggression=0.9
			caution=0.1
			grouping=no
			simple_targeting=yes
		[/ai]
		{FLAG_VARIANT "undead"}	# helps to distinguish them as not nice, arguably
	[/side]

	[event]
		name=prestart
		[modify_ai]
			side=4
			action=add
			path=goal[]
			[goal]				# focus on the player
				id=target4
				name=target
				[criteria]
					side=1
				[/criteria]
				value=20
			[/goal]
			#[goal]				# not the animals or orcs
			#	name=target
			#	[criteria]
			#		side=2
			#	[/criteria]
			#	value=0.1
			#[/goal]
			#[goal]				# not the animals or orcs
			#	name=target
			#	[criteria]
			#		side=3,5,6,7,8,9	# I am 4
			#	[/criteria]
			#	value=1
			#[/goal]
			[goal]				# Mean outlaws also aim at blacksmiths, etc. MWAHAHAHAHAHA
				id=target_location4
				name=target_location
				[criteria]
					[and]
						[filter_owner]
							side=1
						[/filter_owner]
						terrain=*^V*
					[/and]
					[or]
						terrain=*^Wm,*^Yf,*^Yfo,*^Yb,*^Ybo,*^Ys,*^Yso,*^Yu,*^Yuo,*^Ya,*^Yao,Ke^Yk,Ce
					[/or]
				[/criteria]
				value=20
			[/goal]
			#[goal]				# Don't leave the "leader" out to dry
			#	name=protect_unit
			#	[criteria]
			#		role=outlaw_leader
			#		side=4
			#	[/criteria]
			#	protect_radius=6
			#	value=3
			#[/goal]
		[/modify_ai]
	[/event]

	{WILL_BURN_BUILDINGS 4}
	{WILL_BURN_FARMS 4 75}		# burn most farms

	[event]
		name=die
		first_time_only=no
		[filter]
			side=4
			role=outlaw_leader
		[/filter]
		{ENEMY_GOLD_REWARD 4 (
{SECOND_UNIT_SAYS _"How many farms did they burn for this gold?"}
{SECOND_UNIT_SAYS _"Still, I do not think the rightful owners have much use for it anymore."}
)}
	[/event]

	# ----- Outlaw sighting (first time) -----
	[event]
		name=sighted
		first_time_only=yes
		[filter]
			side=3,4
		[/filter]
		[filter_second]
			side=1
		[/filter_second]
		{DIALOGUE first_outlaw_sighting (
		[scroll_to]
			x,y=$x1,$y1
		[/scroll_to]
		[if]	# The hero sees the outlaws
			[have_unit]
				x,y=$x2,$y2
				canrecruit=yes
				side=1
			[/have_unit]
			[then]
				{HERO_SAYS _"Outlaws!"}
			[/then]
			[else] # Somebody else sees the outlaws
				[message]
					speaker=second_unit
					message=_"Milord, outlaws are advancing on our position!"
				[/message]
			[/else]
		[/if]
		{HERO_SAYS _"They won't be happy about King's men settling in their midst. To arms, men!"}
		{TUTORIAL sight_outlaws _"Early on, roaming bands of outlaws will be the biggest threat to your town. Depending on the strength of the outlaw band, you may want to recruit additional units at this point and move your existing units to counter the threat.

Some outlaws will occupy your villages, while others will sometimes burn them to the ground. Mean outlaws will burn down your encampments, blacksmiths, and other buildings including your keep. Losing your buildings represent a huge loss of investment, so make sure you defend them well."}
		{TUTORIAL sight_outlaws1 _"Note: You can press shift during an enemy turn to speed up their movements and attacks."}
		{INCIDENTAL_MUSIC "battle.ogg"}
		)}
	[/event]
#enddef


#define NEW_OUTLAW_LEADER SIDE
	# Leader is a level-3 unit starting in the first winter
	[if]
		{VARIABLE_CONDITIONAL wf_vars.season less_than 4}
		[then]
			# Level 2
			{RANDOM_VAR rnd_type ("Outlaw,Bandit,Trapper,Rogue")}
		[/then]
		[else]
			# Skipping fugitive, as I want the outlaws to go on the offense
			# Level 3
			{RANDOM_VAR rnd_type ("Highwayman,Ranger,Huntsman,Fugitive,Assassin")}
		[/else]
	[/if]
	[store_locations]
		variable=outlaw_places
		{X_AND_Y_ARE_ON_THE_MAP}
		terrain=!,W*,*^Y*,*^V*,K*,C*
		{NOT_FILTER}
		[and]	# appears somewhere near the map edges, not near buildings
			[not]
				x="$({BORDER})"-"$({MAP_WIDTH}-{BORDER})"
				y="$({BORDER})"-"$({MAP_HEIGHT}-{BORDER})"
			[/not]
		[/and]
	[/store_locations]
	{RANDOM_VAR rnd_i 0.."$($outlaw_places.length-1)"}

	[sound]	# warn the player who is paying attention (and has the sound on)
		name="ambient/birds2.ogg"
	[/sound]
	[unit]
		side={SIDE}
		type=$rnd_type
		x=$outlaw_places[$rnd_i].x
		y=$outlaw_places[$rnd_i].y
		canrecruit=no
		placement=map
		passable=yes
		animate=yes
		role=outlaw_leader
		random_traits=yes
		{OBJECT_LOYAL}
		{IS_HERO}
	[/unit]
	{CLEAR_VARIABLE rnd_type}
#enddef

#define NEW_RANDOM_OUTLAW SIDE
	# In the few seasons outlaws are weak (level 0-1), later they can have level 2 units as well
	[if]
		{VARIABLE_CONDITIONAL wf_vars.season less_than 4}
		[then]
			# Level 0,1
			{RANDOM_VAR rnd_type "Woodsman,Poacher,Thief,Ruffian,Thug,Footpad"}
		[/then]
		[else]
			# Level 1,2
			{RANDOM_VAR rnd_type "Poacher,Trapper,Thief,Rogue,Thug,Bandit,Footpad,Outlaw"}
		[/else]
	[/if]
	[unit]
		side={SIDE}
		type=$rnd_type
		canrecruit=no
		random_traits=yes
		{OBJECT_LOYAL}
		generate_name=yes
		x=$outlaw_places[$rnd_i].x
		y=$outlaw_places[$rnd_i].y
		placement=map
		passable=yes
		animate=yes
	[/unit]

	{CLEAR_VARIABLE rnd_type}
#enddef


# ----- ORCS (and trolls) ------------------------------------------------
#define ORCS_ARE_SIDE5
	# Creates orcs as side 5. Orc leaders from the east and north are given
	# those roles to identify them.
	# Orcs will happily will burn down basically everything, all the time.
	# No wolf riders right now as there are already wolves around, but I may change
	# my mind later
	[side]
		side=5
		controller=ai
		team_name=orcs
		user_team_name=_"Orcs"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0			# no initial gold -- given when a leader shows up
		income={ENEMY_INCOME}		# income set later, -2 to counteract default income
		[ai]
			#aggression=0.9
			#caution=0.01
			#village_value=3
			leader_value=1.0

			# Make all enemies aggressive
			aggression=0.9
			caution=0.1
			grouping=no
			simple_targeting=yes
		[/ai]
		{FLAG_VARIANT "long"}	# not that this ever gets used, since they burn stuff down
	[/side]

	[event]
		name=prestart
		[modify_ai]
			side=5
			action=add
			path=goal[]
			[goal]				# focus on the player
				id=target5
				name=target
				[criteria]
					side=1
				[/criteria]
				value=20
			[/goal]
			#[goal]				# not the animals or orcs
			#	name=target
			#	[criteria]
			#		side=2
			#	[/criteria]
			#	value=0.1
			#[/goal]
			#[goal]				# focus on the player
			#	name=target
			#	[criteria]
			#		side=3,4,6,7,8,9	# I am 5
			#	[/criteria]
			#	value=1
			#[/goal]
			[goal]		# Orcs aim at castles, blacksmiths, etc. MWAHAHAHAHAHA
				id=target_location5
				name=target_location
				[criteria]
					[and]
						[filter_owner]
							side=1
						[/filter_owner]
						terrain=*^V*
					[/and]
					[or]
						terrain=*^Wm,*^Yf,*^Yfo,*^Yb,*^Ybo,*^Ys,*^Yso,*^Yu,*^Yuo,*^Ya,*^Yao,Ke^Yk,Ce
					[/or]
				[/criteria]
				value=20
			[/goal]
			#[goal]		# Don't leave the leader out to dry
			#	name=protect_unit
			#	[criteria]
			#		side=5
			#		canrecruit=yes
			#	[/criteria]
			#	protect_radius=6
			#	value=3
			#[/goal]
		[/modify_ai]
	[/event]

	[event]
		name=die
		first_time_only=no # Who wants to go orc-hunting?!
		[filter]
			side=5
			[and]
				role=orc_leader
				[or]
					role=east_orc_leader
				[/or]
				[or]
					role=north_orc_leader
				[/or]
			[/and]
		[/filter]

		{ENEMY_GOLD_REWARD 5 (
{SECOND_UNIT_SAYS _"Let's see what the orcish war chest holds."}
{SECOND_UNIT_SAYS _"Still, I do not think the rightful owners have much use for it anymore."}
)}
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=5
			canrecruit=yes
		[/filter]
		[filter_second]
			side=1
		[/filter_second]

		#{RANDOM_VAR rnd_type "Blood Bat,Drake Burner,Drake Clasher,Drake Fighter,Drake Glider,Dune Burner,Dune Herbalist,Dune Piercer,Dune Rider,Dune Rover,Dune Soldier,Dwarvish Fighter,Dwarvish Guardsman,Dwarvish Scout,Dwarvish Thunderer,Dwarvish Ulfserker,Elder Falcon,Elvish Archer,Elvish Fighter,Elvish Scout,Elvish Shaman,Fire Guardian,Footpad,Ghost,Ghoul,Giant Mudcrawler,Giant Scorpion,Goblin Impaler,Goblin Rouser,Gryphon Rider,Mermaid Initiate,Merman Fighter,Merman Hunter,Naga Fighter,Orcish Archer,Orcish Assassin,Orcish Grunt,Orcish Leader,Poacher,Saurian Augur,Saurian Skirmisher,Skeleton Archer,Skeleton,Soulless,Thief,Thug,Troll Whelp,Wolf Rider,Wolf,Wose,Young Ogre"}
		{RANDOM_VAR rnd_type "Dwarvish Fighter,Dwarvish Guardsman,Dwarvish Scout,Dwarvish Thunderer,Elvish Archer,Elvish Fighter,Elvish Scout,Elvish Shaman,Footpad,Poacher,Thief,Thug"}
		[message]
			speaker=second_unit
			message=_"The scum was holding a $rnd_type as a hostage, milord."
		[/message]
		[unit]
			side=1
			type=$rnd_type
			canrecruit=no
			x=$x1
			y=$y1
			placement=map
			passable=yes
			animate=yes
			random_traits=yes
			moves=0
			attacks_left=0
			to_variable=hostage_unit
		[/unit]
		[unstore_unit]
			variable=hostage_unit
			find_vacant=yes
			check_passability=yes
			animate=yes
			text=_"Hostage"
			# fire_event=yes
		[/unstore_unit]
		[message]
			speaker=$hostage_unit.id
			message=_"Thank you for freeing me. Allow me to join your ranks in return."
		[/message]

		{CLEAR_VARIABLE hostage_unit}
		{CLEAR_VARIABLE rnd_type}
	[/event]

	# All orc units don't have upkeep -- this makes sure that the
	# leaders can defend themselves when attacked by outlaws, animals, or you
	# by recruiting new units since they should always have positive gold.
	[event]
		name=recruit
		first_time_only=no
		[filter]
			side=5
		[/filter]
		[object]
			#filter is implicit
			[effect]
				apply_to=loyal
			[/effect]
		[/object]
	[/event]

	{WILL_BURN_BUILDINGS 5}
	{WILL_BURN_FARMS 5 100}

	[event]
		name=moveto
		first_time_only=no
		[filter]
			side=1,9
			[filter_location]
				terrain=Ko,Koa
			[/filter_location]
		[/filter]
		{MODIFY_2X2_SPACE Rb $x1 $y1}
		{FIRE_ANIMATION $x1 $y1}	# This places the "burning building" terrain at x,y
		{PLACE_IMAGE "scenery/rubble.png" $x1 $y1}
	[/event]

	[event]
		name=attack end
		first_time_only=no
		[filter]
			side=5,8
			type=Troll Shaman
			[filter_location]
				terrain=Sm
			[/filter_location]
		[/filter]
		[filter_attack]
			name=flame blast
			range=ranged
			type=fire
		[/filter_attack]
		[terrain]
			terrain=Rb
			x,y=$x1,$y1
		[/terrain]
	[/event]

	[event]
		name=attack end
		first_time_only=no
		[filter_second]
			side=5,8
			type=Troll Shaman
			[filter_location]
				terrain=Sm
			[/filter_location]
		[/filter_second]
		[filter_second_attack]
			name=flame blast
			range=ranged
			type=fire
		[/filter_second_attack]
		[terrain]
			terrain=Rb
			x,y=$x2,$y2
		[/terrain]
	[/event]

	# This event is fired for the appearance of new orc leaders
	# It could have been included in the new_raid macro(s), but for
	# consistency with necros, it's made a fire-able event
	[event]
		name=new_orc_raid
		first_time_only=no

		# Pick a direction
		{RANDOM_VAR rnd_dir 0,1}	# 0=east, 1=north, used in map_signs
		[switch]	# I know if/else would work, but I like switch statements better
			variable=rnd_dir
			[case]
				value=0
				{VARIABLE orc_role "east_orc_leader"}
			[/case]
			[case]
				value=1
				{VARIABLE orc_role "north_orc_leader"}
			[/case]
		[/switch]

		# If there's already a leader, spawn a new one and release current leader
		[if]
			[have_unit]
				side=5
				canrecruit=yes
				role=$orc_role
			[/have_unit]
			[then]
				{WF_DEBUG "Tried to add a new $orc_role , but there's already one there -- Abandon keep. Create a new one"}
				[modify_unit]
					[filter]
						side=5
						role=$orc_role
						canrecruit=yes
					[/filter]
					role=orc_leader
					canrecruit=no
					{IS_HERO}
					[object]
						[effect]
							apply_to=loyal
						[/effect]
					[/object]
					goto_x=0
					goto_y=0
				[/modify_unit]
				[event]
					id=guide_orc_leader
					remove=yes
				[/event]
			[/then]
		[/if]

		{COUNT_VILLAGES num_villages}
		{VARIABLE orc_gold "$(ceil($enemy.raid_mult * ($enemy.raid_base_gold+$enemy.raid_gold_mult*$num_villages)))"}
		[gold]
			side=5
			amount=$orc_gold
		[/gold]
		{WF_DEBUG "Giving orcs $orc_gold gold"}
		{CLEAR_VARIABLE orc_gold}
		{CLEAR_VARIABLE num_villages}

		[if]
			{VARIABLE_CONDITIONAL wf_vars.season less_than 4}
			[then]
				# Level 2
				{RANDOM_VAR rnd_type ("Orcish Ruler,Orcish Slayer,Orcish Crossbowman,Orcish Warrior,Troll,Troll Rocklobber,Troll Shaman,Troll Hero,Goblin Pillager,Goblin Knight")}
			[/then]
			[else]
				# Level 3
				{RANDOM_VAR rnd_type ("Orcish Slurbow,Orcish Warlord,Great Troll,Troll Warrior,Orcish Sovereign,Orcish Nightblade,Direwolf Rider")}
			[/else]
		[/if]

		# This *should* always succeed as the signpost is on plains, although a
		# really devious player could divert a stream here or something. I should
		# fix this eventually, although it's rather low priority.
		[store_locations]
			variable=orc_places
			terrain=!,W*,*^Y*,*^V*,K*,C*
			{X_AND_Y_ARE_ON_THE_MAP}
			{NOT_FILTER}
			[and]	# appears near the signpost
				x=$map_signs[$rnd_dir].x
				y=$map_signs[$rnd_dir].y
				radius={BORDER}
			[/and]
		[/store_locations]
		{RANDOM_VAR rnd_o 0.."$($orc_places.length-1)"}

		# If not, find the nearest place to set up a keep
		{FIND_NEAREST_HEX orc_keep_spot $orc_places[$rnd_o].x $orc_places[$rnd_o].y (
			{NOT_FILTER}
			terrain={BUILDABLE_TERRAIN},Ko
				[filter_adjacent_location]
					terrain={BUILDABLE_TERRAIN},Co
					adjacent=sw,s,se
					count=3
				[/filter_adjacent_location]
				{NOT_MAP_SIGNS}
		)}
		{WF_DEBUG "$orc_keep_spot.x,$orc_keep_spot.y looks like a good place for an orc castle"}
		{WF_DEBUG "Placing an orc leader at $orc_places[$rnd_o].x $orc_places[$rnd_o].y"}
		[sound]	# warn the player who is paying attention (and has the sound on)
			name="ambient/wardrums.ogg"
		[/sound]
		# And place the leader himself
		[unit]
			side=5
			type=$rnd_type
			x=$orc_places[$rnd_o].x
			y=$orc_places[$rnd_o].y
			canrecruit=yes
			extra_recruit=Orcish Archer,Orcish Assassin,Orcish Grunt,Orcish Leader,Troll Whelp,Goblin Spearman,Goblin Impaler,Goblin Rouser,Wolf Rider
			role=$orc_role
			placement=map
			passable=yes
			animate=yes
			goto_x=$orc_keep_spot.x
			goto_y=$orc_keep_spot.y
		[/unit]
		{CLEAR_VARIABLE rnd_type}

		# Now supply his hench-orcs
		{REPEAT $enemy.num_outlaws {NEW_RANDOM_ORC}}

		[micro_ai]
			side=5
			ai_type=messenger_escort
			action=add
			[filter]
				side=5
				canrecruit=yes
				role=$orc_role
			[/filter]
			waypoint_x=$orc_keep_spot.x
			waypoint_y=$orc_keep_spot.y
		[/micro_ai]

		# This event makes sure the orc leader can't get distracted on his way to the keep
		[event]
			name=side 5 turn
			first_time_only=no
			delayed_variable_substitution=no
			id=guide_orc_leader
			[modify_unit]
				[filter]
					side=5
					canrecruit=yes
					role=$orc_role
				[/filter]
				goto_x=$orc_keep_spot.x
				goto_y=$orc_keep_spot.y
			[/modify_unit]
		[/event]
		# Build a castle when he gets there, or next turn if he's already there
		[event]
			name=moveto
			id=moveto_build_orc_keep
			first_time_only=yes
			delayed_variable_substitution=no	# so I can clear variables
			[filter]
				side=5
				role=$orc_role
				canrecruit=yes
				x=$orc_keep_spot.x
				y=$orc_keep_spot.y
			[/filter]
			{BUILD_ORC_KEEP $orc_keep_spot.x $orc_keep_spot.y}
		[/event]
		[if]
			[and]
				{VARIABLE_CONDITIONAL orc_places[$rnd_o].x equals $orc_keep_spot.x}
				{VARIABLE_CONDITIONAL orc_places[$rnd_o].y equals $orc_keep_spot.y}
			[/and]
			[then]
				[event]
					name=side 5 turn
					id=turn_build_orc_keep
					first_time_only=yes
					delayed_variable_substitution=no
					[filter_condition]
						[have_unit]
							side=5
							role=$orc_role
							canrecruit=yes
							x=$orc_keep_spot.x
							y=$orc_keep_spot.y
						[/have_unit]
					[/filter_condition]
					{BUILD_ORC_KEEP $orc_keep_spot.x $orc_keep_spot.y}
				[/event]
			[/then]
		[/if]
		{CLEAR_VARIABLE rnd_o}
		{CLEAR_VARIABLE orc_keep_spot}
		{CLEAR_VARIABLE orc_places}
		{CLEAR_VARIABLE rnd_dir,orc_role}

		# Suggest taking the fight to the orcs
		[event]
			name=die
			[filter]
				side=5
				[not]
					[and]
						role=east_orc_leader
						[or]
							role=north_orc_leader
						[/or]
					[/and]
				[/not]
			[/filter]
			[filter_second]
				side=1
			[/filter_second]
			{DIALOGUE first_orc_kill (
			{ADVISOR_SAYS _"Milord, once we have fended off these raiders, perhaps we should send some soldiers to seek out their chieftain."}
			{HERO_SAYS _"That seems like it could come at a high cost in men."}
			{ADVISOR_SAYS _"True, milord, but the chieftain is bound to be holding onto the bounty he has acquired in other raids."}
			{TUTORIAL suggest_fighting_orc_leaders1 _"If you seek out and kill one of the orc leaders, you will receive gold. Keep in mind that this needs to be balanced against the upkeep costs of the units you send on this mission, the losses you might suffer on your way, and of course your ability to maintain a strong defense against other enemies in the meantime."}
			{TUTORIAL suggest_fighting_orc_leaders2 _"Unless you have been a bit lucky, you may not have the strength to mount such a raid during your first year. A successful attack, however, can greatly increase your gold reserves. Keep it in mind for next year, particularly in the autumn when orcs do not get reinforcements."}
			)}
		[/event]

		# ----- Orc sighting (first time) -----
		[event]
			name=sighted
			#id=orc_sighting
			first_time_only=yes
			[filter]
				side=5
			[/filter]
			[filter_second]
				side=1
			[/filter_second]
		#{ON_SIGHTING orc_sighting 1 side=5 (
			{DIALOGUE first_orc_sighting (
				[if]
					[have_unit]
						x,y=$x1,$y1
						canrecruit=yes
					[/have_unit]
					[then]
						{HERO_SAYS _"Orcs, and it looks like they have come in force!"}
					[/then]
					[else]
						{ADVISOR_SAYS _"Orcs, milord, and it looks like they have come in force!"}
					[/else]
				[/if]
				{HERO_SAYS _"We knew from the first that this day was coming. It is time to demonstrate our courage and our valor in combat. For glory! For Wesnoth!"}
				{CYNIC_SAYS _"I am not so sure about glory, but someone must protect the townsfolk from these beasts."}
				{TUTORIAL orc_sighting _"Orcs attack in much larger groups than do the outlaws, and may severely test your defenses. Now is likely a good time to recruit a few more units.

If the orcs are still far from your town, you may want to have your Peasant Workers hastily build some fortifications in their path. Orc raids will always come from either the north or east, so in general these sides of your town should be the most heavily fortified."}
				{INCIDENTAL_MUSIC "northerners.ogg"}
			)}
		#)}
		[/event]
	[/event]
#enddef

#define BUILD_ORC_KEEP X Y
	{MODIFY_TERRAIN Ko {X} {Y}}
	# It's possible this might screw things up if you build a structure
	# after the orcs are spawned, but it's a low-probability problem
	[terrain]
		terrain=Co
		[filter_adjacent_location]
			x,y={X},{Y}
			adjacent=ne,n,nw
		[/filter_adjacent_location]
	[/terrain]
	# orc leader no longer needs to be guided to castle
	[modify_unit]
		[filter]
			side=5
			canrecruit=yes
			role=$orc_role
		[/filter]
		goto_x=0
		goto_y=0
	[/modify_unit]
	[micro_ai]
		side=5
		ai_type=messenger_escort
		action=delete
	[/micro_ai]
	[event]
		id=guide_orc_leader
		remove=yes
	[/event]
	[event]
		id=turn_build_orc_keep
		remove=yes
	[/event]
	[event]
		id=moveto_build_orc_keep
		remove=yes
	[/event]
#enddef

#define NEW_RANDOM_ORC
	# Orc sidekicks are always level 2 -- it's the gold their side has that
	# varies from season to season
		[if]
			{VARIABLE_CONDITIONAL wf_vars.season less_than 4}
			[then]
	# Level 1
	{RANDOM_VAR rnd_type ("Orcish Assassin,Orcish Leader,Orcish Grunt,Orcish Archer,Troll Whelp,Goblin Impaler,Wolf Rider,Goblin Rouser")}
			[/then]
			[else]
	# Level 2
	{RANDOM_VAR rnd_type "Orcish Crossbowman,Orcish Ruler,Orcish Slayer,Orcish Warrior,Goblin Knight,Goblin Pillager,Troll,Troll Rocklobber,Troll Hero,Troll Shaman"}
			[/else]
		[/if]
	[unit]
		side=5
		type=$rnd_type
		canrecruit=no
		x=$orc_places[$rnd_o].x
		y=$orc_places[$rnd_o].y
		placement=map
		passable=yes
		animate=yes
		random_traits=yes
		{OBJECT_LOYAL}
		overlays="misc/loyal-icon.png"
	[/unit]

	{CLEAR_VARIABLE rnd_type}
#enddef


# ----- Elves ------------------------------------------------------------
#define ELVES_ARE_SIDE6
#arg LIMIT
2#endarg
	[event]
		name=prestart
		{VARIABLE quota.elves {LIMIT}}
#ifdef EASY
		{VARIABLE_OP quota.elves sub 1}
#endif
#ifdef HARD
		{VARIABLE_OP quota.elves add 1}
#endif
	[/event]

	# Elves appear if you cut down too many forests
	[side]
		side=6
		controller=ai
		team_name=elves,nice_outlaws	# Elves like animals, tolerate outlaws
		user_team_name=_"Elves"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#aggression=0.9
			#caution=0.01			# no retreat
			#grouping=defensive
			leader_value=1.0
			village_value=0.5

			# Make all enemies aggressive
			aggression=0.9
			caution=0.1
			grouping=no
			simple_targeting=yes
		[/ai]
		{FLAG_VARIANT "wood-elvish"}
	[/side]

	[event]
		name=prestart
		[modify_ai]
			side=6
			action=add
			path=goal[]
			[goal]				# Aim at hero, because he ordered the forest-chopping
				id=target6
				name=target
				[criteria]
					side=1
					#id=Hero
				[/criteria]
				value=20
			[/goal]
		[/modify_ai]
	[/event]


	# Elves don't burn buildings, because they worry the fire would spread to the forest

	[event]
		name=side 6 turn end
		first_time_only=no
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.trees}
			{VARIABLE_CONDITIONAL quota.elves greater_than 0}
			[then]
				{WF_DEBUG "Spawning Elves q: $quota.elves n: $enemy.num_outlaws t: $turn_number r: $random < $relations.trees"}
				{RANDOM_VAR rnd_type ("Elvish Ranger","Elvish Marksman","Elvish Captain", "Elvish Hero", "Elvish Rider","Elvish Druid", "Elvish Sorceress", "Elvish Lord")}
				# Find a forest near the western signpost
				{FIND_NEAREST_HEX elf_start $map_signs[2].x $map_signs[2].y (
					{NOT_FILTER}
					terrain=*^F*
				)}
				{WF_DEBUG "Placing some elves near $elf_start.x,$elf_start.y"}
				[sound]	# warn the player who is paying attention (and has the sound on)
					name="horn-signals/horn-1.ogg"
				[/sound]
				[unit]
					side=6
					type=$rnd_type
					role=elf_leader
					x=$elf_start.x
					y=$elf_start.y
					canrecruit=no
					placement=map
					passable=yes
					animate=yes
					random_traits=yes
					{OBJECT_LOYAL}
					{IS_HERO}
				[/unit]
				{CLEAR_VARIABLE rnd_type}
				{REPEAT $enemy.num_outlaws {NEW_RANDOM_ELF}}
				#{VARIABLE_OP relations.trees multiply $enemy.raid_mult}
				#{VARIABLE_OP relations.trees round ceil}
				#{VARIABLE_OP relations.trees ipart $relations.trees}

				{VARIABLE elves_gold "$(ceil($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$relations.trees)))"}
				#{VARIABLE_OP elves_gold multiply 2}
				{WF_DEBUG "Elves fake recruit gold set to $elves_gold"}
				[set_variables]
					name=elves_list
					mode=replace
					{VALUE2 type "Elvish Captain" cost 32}
					{VALUE2 type "Elvish Ranger" cost 38}
					{VALUE2 type "Elvish Rider" cost 31}
					{VALUE2 type "Elvish Druid" cost 34}
					{VALUE2 type "Elvish Lord" cost 36}
					{VALUE2 type "Elvish Sorceress" cost 34}
					{VALUE2 type "Elvish Marksman" cost 37}
					{VALUE2 type "Elvish Hero" cost 30}
				[/set_variables]
				[while]
					{VARIABLE_CONDITIONAL elves_gold greater_than 0}	# will go *roughly* to zero
					[do]
						{RANDOM_VAR rnd_i2 0.."$($elves_list.length-1)"}
						[unit]
							side=6
							type=$elves_list[$rnd_i2].type
							canrecruit=no
							generate_name=yes
							random_traits=yes
							random_gender=yes
							x,y=$elf_start.x,$elf_start.y
							placement=map
							passable=yes
							animate=yes
							{OBJECT_LOYAL}
							overlays="misc/loyal-icon.png"
						[/unit]
						{VARIABLE_OP elves_gold sub $elves_list[$rnd_i2].cost}
					[/do]
				[/while]
				{CLEAR_VARIABLE rnd_i2,elves_list,elves_gold}
				{VARIABLE relations.trees 0}	# reset relations
				{VARIABLE_OP quota.elves sub 1}
				[event]
					name=sighted
					first_time_only=yes
					[filter]
						side=6
					[/filter]
					[filter_second]
						side=1
					[/filter_second]
					{DIALOGUE first_elves_sighting (
					[message]
						role=elf_leader
						message=_"Human! We have heard the cries of the trees, and we will not stand idle while you wantonly destroy the forests. You shall soon feel the wrath of the elves!"
					[/message]
					{HERO_SAYS _"We are well within lands given to humans by the Treaty, elf! You have no cause to wish us harm."}
					[message]
						role=elf_leader
						message=_"The Treaty does not give you the right to make war upon trunks and branches. Leave now or you shall find yourself full of arrows."
					[/message]
					{ADVISOR_SAYS _"This is likely a splinter group, milord, not any part of the elvish army. That will not make their blades any less sharp, however."}
					{INCIDENTAL_MUSIC "elvish-theme.ogg"}
					)}
				[/event]
				{WF_SIDE_COUNT Elves 6 $relations.trees $quota.elves}
			[/then]
		[/if]
		{CLEAR_VARIABLE elf_start,random}
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=6
			role=elf_leader
		[/filter]
		{ENEMY_GOLD_REWARD 6 (
{SECOND_UNIT_SAYS _"These elves were loaded."}
{SECOND_UNIT_SAYS _"Still, I do not think the rightful owners have much use for it anymore."}
)}
	[/event]
#enddef

#define NEW_RANDOM_ELF
	# Elves spawn at level 1, stronger has too much potential for randomized doom
	{RANDOM_VAR rnd_type "Elvish Fighter,Elvish Archer,Elvish Shaman,Elvish Scout"}
	[unit]
		side=6
		type=$rnd_type
		canrecruit=no
		x=$elf_start.x
		y=$elf_start.y
		placement=map
		passable=yes
		animate=yes
		random_traits=yes
		{OBJECT_LOYAL}
	[/unit]
	{CLEAR_VARIABLE rnd_type}
#enddef


# ----- Undead -----------------------------------------------------------
#define UNDEAD_ARE_SIDE7
	# Undead, including random/curse units, necromancers, and lich calamities, are all side 7
	[side]
		side=7
		controller=ai
		team_name=undead # Undead want souls, not creatures
		user_team_name=_"Undead"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#aggression=0.9
			#caution=0.01			# no retreat
			leader_value=1.0
			village_value=0.5

			# Make all enemies aggressive
			aggression=0.9
			caution=0.1
			grouping=no
			simple_targeting=yes
		[/ai]
		{FLAG_VARIANT "undead"}
	[/side]

	[event]
		name=prestart
		[modify_ai]
			side=7
			action=add
			path=goal[]
			[goal]
				id=curse7
				name=target
				[criteria]
					{FILTER_FOR_CURSE "undead_generator"}
				[/criteria]
				value=20
			[/goal]
			#[goal]
			#	name=target_location
			#	[criteria]
			#		[and]
			#			[filter_owner]
			#				side=1
			#			[/filter_owner]
			#			terrain=*^V*
			#		[/and]
			#	[/criteria]
			#	value=1
			#[/goal]
		[/modify_ai]
	[/event]
	# Undead are scared of fire -- won't burn anything

	[event]
		name=new_undead_raid
		first_time_only=no
		{RANDOM_VAR rnd_dir 2,3}	# west or south edge
		[store_locations]
			variable=undead_places
			{X_AND_Y_ARE_ON_THE_MAP}
			terrain=!,W*,*^Y*,*^V*,K*,C*
			{NOT_FILTER}
			[and]	# appears near the signpost
				x=$map_signs[$rnd_dir].x
				y=$map_signs[$rnd_dir].y
				radius={BORDER}
			[/and]
		[/store_locations]
		{RANDOM_VAR rnd_i 0.."$($undead_places.length-1)"}
		[if]
			{VARIABLE_CONDITIONAL wf_vars.season less_than 4}
			[then]
				# Level 2
				{VARIABLE necro_type ("Dark Sorcerer")}
			[/then]
			[else]
				# Level 3
				{VARIABLE necro_type ("Necromancer")}
			[/else]
		[/if]
		{WF_DEBUG "Spawning a $necro_type at $undead_places[$rnd_i].x, $undead_places[$rnd_i].y"}
		[sound]	# warn the player who is paying attention (and has the sound on)
			name="wail-long.wav"
		[/sound]
		[unit]
			side=7
			type=$necro_type
			x=$undead_places[$rnd_i].x
			y=$undead_places[$rnd_i].y
			generate_name=yes
			random_traits=yes
			canrecruit=no
			placement=map
			passable=yes
			animate=yes
			role=undead_leader
			{OBJECT_LOYAL}
			{IS_HERO}
		[/unit]
		# Add a few "assistants"
		{REPEAT $enemy.num_outlaws (
		[if]
			{VARIABLE_CONDITIONAL wf_vars.season less_than 4}
			[then]
				# Level 1
			{RANDOM_VAR rnd_type "Dark Adept","Ghost","Ghoul","Skeleton","Skeleton Archer","Soulless"}
			[/then]
			[else]
				# Level 2
			{RANDOM_VAR rnd_type "Shadow","Wraith","Necrophage","Deathblade","Revenant","Bone Shooter"}
			[/else]
		[/if]
			[unit]
				side=7
				type=$rnd_type
				canrecruit=no
				x,y=$undead_places[$rnd_i].x,$undead_places[$rnd_i].y
				placement=map
				passable=yes
				animate=yes
				random_traits=yes
				{OBJECT_LOYAL}
				overlays="misc/loyal-icon.png"
			[/unit] )}
		{CLEAR_VARIABLE rnd_type}
		# Now he "recruits" his army
		{COUNT_VILLAGES num_villages}
		{VARIABLE undead_gold "$(ceil($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages)))"}
		#{VARIABLE_OP undead_gold multiply 2}
		{WF_DEBUG "Undead fake recruit gold set to $undead_gold"}
		# Level 1
		[set_variables]
			name=undead_list
			mode=replace
			{VALUE2 type "Dark Adept" cost 16}
			{VALUE2 type "Ghost" cost 20}
			{VALUE2 type "Ghoul" cost 16}
			{VALUE2 type "Skeleton" cost 15}
			{VALUE2 type "Skeleton Archer" cost 14}
			{VALUE2 type "Walking Corpse" cost 8}	# walking corpses should appear slightly more often
			{VALUE2 type "Walking Corpse" cost 8}
			{VALUE2 type "Soulless" cost 13}
		[/set_variables]
		[while]
			{VARIABLE_CONDITIONAL undead_gold greater_than 0}	# will go *roughly* to zero
			[do]
				{RANDOM_VAR rnd_i2 0.."$($undead_list.length-1)"}
				[unit]
					side=7
					type=$undead_list[$rnd_i2].type
					x,y=$undead_places[$rnd_i].x,$undead_places[$rnd_i].y
					placement=map
					passable=yes
					generate_name=yes
					random_traits=yes
					{OBJECT_LOYAL}
					random_gender=yes
					animate=yes
				[/unit]
				{VARIABLE_OP undead_gold sub $undead_list[$rnd_i2].cost}
			[/do]
		[/while]
		{CLEAR_VARIABLE undead_places,rnd_i,rnd_i2,necro_type,num_villages,rnd_dir,undead_list,undead_gold}

		# Dialogue event put here to (almost, but not quite certainly) avoid
		# triggering on an undead-cursed relic
		[event]
			name=sighted
			#id=undead_sighting
			first_time_only=yes
			[filter]
				side=7
			[/filter]
			[filter_second]
				side=1
			[/filter_second]
		#{ON_SIGHTING undead_sighting 1 side=7 (
			{DIALOGUE first_undead_sighting (
				[if]
					[have_unit]	# the hero sights
						x,y=$x1,$y1
						id=Hero
					[/have_unit]
					[then]
						{HERO_SAYS _"Undead! What are they doing here?"}
					[/then]
					[else]
						{ADVISOR_SAYS _"Undead, milord!"}
						{HERO_SAYS _"What are they doing here?"}
					[/else]
				[/if]
				{ADVISOR_SAYS _"Any mage caught practicing necromancy is exiled from Wesnoth, milord. Some must wander the northlands, likely with their undead spawn."}
				{HERO_SAYS _"I have no wish to serve in some criminal's war host. Raise your blades, men, and send these unnatural creatures back to their graves!"}
				{CYNIC_SAYS {ASIDE _"Maces might be of more use, here."}}
				{TUTORIAL undead_sighting _"Groups of undead, lead by a necromancer, attack in groups typically larger than outlaws but a bit smaller than orcs. If you have built the appropriate buildings to recruit mages or heavy infantry, you should likely recruit a few of those units. If you only have spearmen, sticking to good defensive terrain and fighting only during the day become even more important than usual."}
				{INCIDENTAL_MUSIC "the_dangerous_symphony.ogg"}
			)}
		#)}
		[/event]
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=7
			role=undead_leader
		[/filter]
		{ENEMY_GOLD_REWARD 7 (
{SECOND_UNIT_SAYS _"I wonder what use is gold to the undead?"}
{SECOND_UNIT_SAYS _"Still, I do not think the rightful owners have much use for it anymore."}
)}
	[/event]
#enddef

# ----- Calamity ---------------------------------------------------------
#define CALAMITY_IS_SIDE8
	# Calamity armies other than animals or undead are side 8
	[side]
		side=8
		controller=ai
		team_name=calamity
		user_team_name=_"Calamity"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#aggression=0.9
			#caution=0.01			# no retreat
			leader_value=1.0
			village_value=0.5

			# Make all enemies aggressive
			aggression=0.9
			caution=0.1
			grouping=no
			simple_targeting=yes
		[/ai]
		{FLAG_VARIANT6 "ragged"}
	[/side]

	[event]
		name=prestart
		[modify_ai]
			side=8
			action=add
			path=goal[]
			[goal]				# focus on the player
				id=target8
				name=target
				[criteria]
					side=1
				[/criteria]
				value=20
			[/goal]
		[/modify_ai]
	[/event]

	[event]
		name=recruit
		first_time_only=no
		[filter]
			side=8
		[/filter]
		[object]
			#filter is implicit
			[effect]
				apply_to=loyal
			[/effect]
		[/object]
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=8
			[and]
				role=lich
				[or]
					role=gryphon_king
				[/or]
				[or]
					role=evil_loyalist
				[/or]
				[or]
					role=saurian_leader
				[/or]
				[or]
					role=yeti_leader
				[/or]
				[or]
					role=drake_leader
				[/or]
				[or]
					role=dwarf_leader
				[/or]
				[or]
					role=orc_calamity_leader
				[/or]
			[/and]
		[/filter]
		{ENEMY_GOLD_REWARD 8 (
{SECOND_UNIT_SAYS _"These scum must have ransacked a lot of villages to have this much gold."}
{SECOND_UNIT_SAYS _"Still, I do not think the rightful owners have much use for it anymore."}
)}
	[/event]

	{WILL_BURN_BUILDINGS 8}
	{WILL_BURN_FARMS 8 100}

	[event]
		name=moveto
		first_time_only=no
		[filter]
			side=1,9
			[filter_location]
				terrain=Ker
			[/filter_location]
		[/filter]
		{MODIFY_TERRAIN Rb $x1 $y1}
		[terrain]
			terrain=Rb
			[filter_adjacent_location]
				adjacent=se,s,sw,nw
				x=$x1
				y=$y1
			[/filter_adjacent_location]
		[/terrain]
		{FIRE_ANIMATION $x1 $y1}	# This places the "burning building" terrain at x,y
		{PLACE_IMAGE "scenery/rubble.png" $x1 $y1}
	[/event]

	[event]
		name=moveto
		first_time_only=no
		[filter]
			side=1,9
			[filter_location]
				terrain=Khw
			[/filter_location]
		[/filter]
		{MODIFY_TERRAIN Ss $x1 $y1}
		[terrain]
			terrain=Ss
			[filter_adjacent_location]
				x=$x1
				y=$y1
				adjacent=n,nw,se
			[/filter_adjacent_location]
		[/terrain]
		{PLACE_IMAGE "scenery/rubble.png" $x1 $y1}
	[/event]
#enddef


# ----- Friends ----------------------------------------------------------
#define FRIENDS_ARE_SIDE9
	# Friendly units, mostly merchants and possibly mercenaries
	[side]
		side=9
		controller=ai
		team_name=settlers,wild_animals
		user_team_name=_"Friends"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#aggression=0.1
			#caution=0.5
			#grouping=defensive
			#support_villages=no
			leader_value=1.0
			village_value=0.5
			grouping=no
			simple_targeting=no

			# aggression=1.0
			# caution=0.0
			# village_value=0.0
			# grouping=no
			# simple_targeting=yes
			# {AI_SIMPLE_ALWAYS_ASPECT combat_ignore_bad_movements yes}
			# {AI_SIMPLE_ALWAYS_ASPECT combat_ignore_bad_combat yes}
			# {AI_SIMPLE_ALWAYS_ASPECT aggression 1.0}
			# {AI_SIMPLE_ALWAYS_ASPECT caution 0}
		[/ai]
		{FLAG_VARIANT "loyalist"}
	[/side]

	#{AI_CONTROLLER (WF) 1 9 ()}
	# Micro-AI tag has to be applied in an event tag
	[event]
		name=side 9 turn
		first_time_only=no

		[micro_ai]
			side=9
			ai_type=zone_guardian
			action=delete
		[/micro_ai]

		[if]
			[have_location]
				terrain=*^Wm
				[not]
					[filter]
						side=1
					[/filter]
				[/not]
			[/have_location]
			{VARIABLE_CONDITIONAL wf_vars.disperse_troops boolean_not_equals yes}
		[then]
		[store_locations]
			variable=windmill_loc
			terrain=*^Wm
		[/store_locations]
		[micro_ai]
			side=9
			ai_type=zone_guardian
			action=add

			[filter]
				side=9
			[/filter]
			[filter_location]
				#x="$({BORDER})"-"$({MAP_WIDTH}-{BORDER})"
				#y="$({BORDER})"-"$({MAP_HEIGHT}-{BORDER})"
				[and]
				[filter]
					side=1
					[or]
						side=9
					[/or]
				[/filter]
				radius=6
				[/and]
			[/filter_location]
			station_x,station_y=$windmill_loc.x,$windmill_loc.y
		[/micro_ai]
		{CLEAR_VARIABLE windmill_loc}
		[/then]
		[else]
		[micro_ai]
			side=9
			ai_type=zone_guardian
			action=add

			[filter]
				side=9
			[/filter]
			[filter_location]
				#x="$({BORDER})"-"$({MAP_WIDTH}-{BORDER})"
				#y="$({BORDER})"-"$({MAP_HEIGHT}-{BORDER})"
				[and]
				[filter]
					side=1
					[or]
						side=9
					[/or]
				[/filter]
				radius=6
				[/and]
			[/filter_location]
			#station_x,station_y="$(floor({MAP_WIDTH}/2))","$(floor({MAP_HEIGHT}/2))"
		[/micro_ai]
		[/else]
		[/if]
	[/event]

	[event]
		name=side 9 turn end
		first_time_only=no

		{VARIABLE_OP relations.king add {ENEMY_STEP}}

		[if]
			[have_unit]
				side=9
				role=king_leader
			[/have_unit]
		[then]
			{VARIABLE relations.king "$(ceil(-1*{ENEMY_STEP} * ({SEASON_LENGTH}/2)))"}	# reset relations
			{WF_JITTER relations.king}
		[/then]
		[/if]

		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.king}
			[or]
				{VARIABLE_CONDITIONAL wf_vars.king_troops boolean_equals yes}
			[/or]
			[then]
				{VARIABLE king_role "king_leader"}
				{WF_DEBUG "Spawning Allies $diplomacy.ally n: $enemy.num_outlaws t: $turn_number r: $random < $relations.king"}
				# 0=east, 1=north, 2=west, 3=south
				{VARIABLE rnd_dir 3}
				#Level 2
				{RANDOM_VAR rnd_type (Javelineer,Lieutenant,Red Mage,White Mage,Lancer,Shock Trooper,Knight,Duelist,Longbowman,Swordsman,Pikeman,Dragoon,Horseman Commander,Infantry Lieutenant)}
				[if]
					{VARIABLE_CONDITIONAL wf_vars.king_troops boolean_equals yes}
				[then]
					{VARIABLE king_role "ally_leader"}
					[switch]
						variable=diplomacy.ally
						[case]
							value="loyalists"
							#Level 3
							{RANDOM_VAR rnd_type (General,Arch Mage,Silver Mage,Mage of Light,Iron Mauler,Paladin,Grand Knight,Master at Arms,Master Bowman,Royal Guard,Halberdier,Cavalier,Mounted General,Infantry Commander,Royal Warrior)}
							{VARIABLE rnd_dir 3}
						[/case]
						[case]
							#Level 3
							value="outlaws"
							{RANDOM_VAR rnd_type (Huntsman,Ranger,Assassin,Highwayman,Fugitive)}
							{VARIABLE rnd_dir 2}
						[/case]
						[case]
							#Level 3
							value="dwarves"
							{RANDOM_VAR rnd_type (Dwarvish Dragonguard,Dwarvish Lord,Dwarvish Sentinel,Dwarvish Explorer,Dwarvish Runemaster)}
							{VARIABLE rnd_dir 0}
						[/case]
						[case]
							#Level 3
							value="drakes"
							{RANDOM_VAR rnd_type (Inferno Drake,Drake Flameheart,Hurricane Drake,Drake Enforcer,Drake Blademaster,Drake Warden,Saurian Flanker)}
							{VARIABLE rnd_dir 0}
						[/case]
						[case]
							#Level 3
							value="undead"
							{RANDOM_VAR rnd_type (Banebow,Death Knight,Spectre,Necromancer,Lich,Nightgaunt,Ghast,Draug,Dread Bat)}
							{VARIABLE rnd_dir 1}
						[/case]
						[case]
							#Level 3
							value="elves"
							{RANDOM_VAR rnd_type (Elvish Outrider,Elvish Champion,Elvish Marshal,Elvish Enchantress,Elvish Sharpshooter,Elvish Shyde,Elvish High Lord,Elvish Avenger)}
							{VARIABLE rnd_dir 2}
						[/case]
						[case]
							#Level 3
							value="orcs"
							{RANDOM_VAR rnd_type (Orcish Slurbow,Orcish Sovereign,Orcish Warlord,Orcish Nightblade,Great Troll,Troll Warrior,Direwolf Rider)}
							{VARIABLE rnd_dir 1}
						[/case]
						[else]
							{VARIABLE diplomacy.ally "loyalists"}
							#Level 2
							{RANDOM_VAR rnd_type (Javelineer,Lieutenant,Red Mage,White Mage,Lancer,Shock Trooper,Knight,Duelist,Longbowman,Swordsman,Pikeman,Dragoon,Horseman Commander,Infantry Lieutenant)}
							{VARIABLE rnd_dir 3}
						[/else]
					[/switch]
				[/then]
				[/if]

				{FIND_NEAREST_HEX king_start $map_signs[$rnd_dir].x $map_signs[$rnd_dir].y (
					{NOT_FILTER}
					terrain=!,W*,*^Y*,*^V*,K*,C*
				) }
				{WF_DEBUG "Placing some allies $diplomacy.ally near $king_start.x,$king_start.y"}
				[sound]	# warn the player who is paying attention (and has the sound on)
					name="fanfare-short.wav"
				[/sound]
				[unit]
					side=9
					type=$rnd_type
					role=$king_role
					x=$king_start.x
					y=$king_start.y
					canrecruit=no
					placement=map
					passable=yes
					animate=yes
					{OBJECT_LOYAL}
					{IS_HERO}
				[/unit]
				{CLEAR_VARIABLE rnd_type}
				{REPEAT $enemy.num_outlaws {NEW_RANDOM_KING}}

				[if]
					{VARIABLE_CONDITIONAL wf_vars.king_troops boolean_equals yes}
				[then]
					{REPEAT 3 {NEW_RANDOM_KING}}
				[/then]
				[/if]

				{VARIABLE relations.king "$(ceil(-1*{ENEMY_STEP} * ({SEASON_LENGTH}/2)))"}	# reset relations
				{WF_JITTER relations.king}
				[event]
					name=sighted
					first_time_only=yes
					[filter]
						side=9
						role=king_leader
					[/filter]
					[filter_second]
						side=1
					[/filter_second]

					{DIALOGUE first_king_sighting (
					[scroll_to]
						x,y=$x1,$y1
					[/scroll_to]
					[message]
						#role=king_leader
						speaker=unit
						message=_"By the grace of the King, we were ordered to protect his Majesty's subjects and keep his peace."
					[/message]
					)}
				[/event]
			{WF_SIDE_COUNT Ally 9 $relations.king 0}
			[/then]
		[/if]
		{VARIABLE wf_vars.king_troops no}
		{CLEAR_VARIABLE king_start,king_role,random,rnd_dir}
		{CLEAR_VARIABLE wf_vars.disperse_troops}
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=9
			role=king_leader
		[/filter]
		{ENEMY_GOLD_REWARD 9 ()}
	[/event]
#enddef

#define NEW_RANDOM_KING
	#Level 1
	{RANDOM_VAR rnd_type (Spearman,Cavalryman,Mage,Horseman,Fencer,Heavy Infantryman,Sergeant,Bowman,Junior Commander)}
	[if]
		{VARIABLE_CONDITIONAL wf_vars.king_troops boolean_equals yes}
	[then]
		#Level 2
		{RANDOM_VAR rnd_type (Javelineer,Lieutenant,Red Mage,White Mage,Lancer,Shock Trooper,Knight,Duelist,Longbowman,Swordsman,Pikeman,Dragoon,Horseman Commander,Infantry Lieutenant)}
		[switch]
			variable=diplomacy.ally
			[case]
				value="loyalists"
				#Level 2
				{RANDOM_VAR rnd_type (Javelineer,Lieutenant,Red Mage,White Mage,Lancer,Shock Trooper,Knight,Duelist,Longbowman,Swordsman,Pikeman,Dragoon,Horseman Commander,Infantry Lieutenant)}
			[/case]
			[case]
				value="outlaws"
				#Level 2
				{RANDOM_VAR rnd_type (Trapper,Rogue,Bandit,Outlaw)}
			[/case]
			[case]
				value="dwarves"
				#Level 2
				{RANDOM_VAR rnd_type (Dwarvish Pathfinder,Dwarvish Steelclad,Dwarvish Runesmith,Dwarvish Stalwart,Dwarvish Thunderguard,Dwarvish Berserker,Gryphon Master)}
			[/case]
			[case]
				value="drakes"
				#Level 2
				{RANDOM_VAR rnd_type (Drake Thrasher,Fire Drake,Sky Drake,Drake Flare,Drake Arbiter,Drake Warrior,Saurian Soothsayer,Saurian Ambusher,Saurian Oracle)}
			[/case]
			[case]
				value="undead"
				#Level 2
				{RANDOM_VAR rnd_type (Shadow,Chocobone,Necrophage,Bone Shooter,Revenant,Wraith,Dark Sorcerer,Deathblade)}
			[/case]
			[case]
				value="elves"
				#Level 2
				{RANDOM_VAR rnd_type (Elvish Captain,Elvish Ranger,Elvish Rider,Elvish Druid,Elvish Lord,Elvish Sorceress,Elvish Marksman,Elvish Hero)}
			[/case]
			[case]
				value="orcs"
				#Level 2
				{RANDOM_VAR rnd_type (Orcish Ruler,Orcish Slayer,Orcish Crossbowman,Orcish Warrior,Troll,Troll Rocklobber,Troll Shaman,Troll Hero,Goblin Pillager,Goblin Knight)}
			[/case]
			[else]
				#Level 1
				{RANDOM_VAR rnd_type (Spearman,Cavalryman,Mage,Horseman,Fencer,Heavy Infantryman,Sergeant,Bowman,Junior Commander)}
			[/else]
		[/switch]
	[/then]
	[/if]
	[unit]
		side=9
		type=$rnd_type
		canrecruit=no
		x=$king_start.x
		y=$king_start.y
		placement=map
		passable=yes
		animate=yes
		random_traits=yes
		{OBJECT_LOYAL}
	[/unit]
	{CLEAR_VARIABLE rnd_type}
#enddef


# ----- Outlaws Raiding ----------------------------------------------------------
#define NEW_OUTLAWS_RAIDS JUMP
#arg LIMIT
4#endarg
	[event]
		name=prestart
		{VARIABLE quota.outlaws {LIMIT}}
#ifdef EASY
		{VARIABLE_OP quota.outlaws sub 1}
#endif
#ifdef HARD
		{VARIABLE_OP quota.outlaws add 1}
#endif
	[/event]

	[event]
		name=side 3 turn end
		first_time_only=no
		{VARIABLE_OP relations.outlaws_nice add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.outlaws_nice}
			[then]

			[if]
			{VARIABLE_CONDITIONAL quota.outlaws greater_than 0}
			[then]
				{WF_DEBUG "Spawning new *nice* outlaws q: $quota.outlaws n: $enemy.num_outlaws t: $turn_number r: $random < $relations.outlaws_nice"}
				{NEW_OUTLAW_LEADER 3}
				{REPEAT $enemy.num_outlaws {NEW_RANDOM_OUTLAW 3}}
			[/then]
			[/if]

				{VARIABLE_OP relations.outlaws_nice sub {JUMP}}
				{WF_JITTER relations.outlaws_nice}
				{VARIABLE_OP quota.outlaws sub 1}
				{WF_SIDE_COUNT Nice 3 $relations.outlaws_nice $quota.outlaws}
			[/then]
		[/if]
		{CLEAR_VARIABLE random}
	[/event]

	[event]
		name=side 4 turn end
		first_time_only=no
		{VARIABLE_OP relations.outlaws_mean add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.outlaws_mean}
			[then]

			[if]
			{VARIABLE_CONDITIONAL quota.outlaws greater_than 0}
			[then]
				{WF_DEBUG "Spawning new *mean* outlaws q: $quota.outlaws n: $enemy.num_outlaws t: $turn_number r: $random < $relations.outlaws_mean"}
				{NEW_OUTLAW_LEADER 4}
				{REPEAT $enemy.num_outlaws {NEW_RANDOM_OUTLAW 4}}
			[/then]
			[/if]
				{VARIABLE_OP relations.outlaws_mean sub {JUMP}}
				{WF_JITTER relations.outlaws_mean}
				{VARIABLE_OP quota.outlaws sub 1}
				{WF_SIDE_COUNT Mean 4 $relations.outlaws_mean $quota.outlaws}
			[/then]
		[/if]
		{CLEAR_VARIABLE random,rnd_i,outlaw_places}
	[/event]
#enddef

# ----- Raiding ----------------------------------------------------------
#define NEW_ORC_AND_UNDEAD_RAIDS JUMP
#arg LIMIT
2#endarg
	[event]
		name=prestart
		{VARIABLE quota.orc_raids {LIMIT}}
		{VARIABLE quota.undead_raids {LIMIT}}
#ifdef EASY
		{VARIABLE_OP quota.orc_raids sub 1}
		{VARIABLE_OP quota.undead_raids sub 1}
#endif
#ifdef HARD
		{VARIABLE_OP quota.orc_raids add 1}
		{VARIABLE_OP quota.undead_raids add 1}
#endif

		{VARIABLE quota.orc_enemy_choice "skip"}
		{VARIABLE quota.undead_enemy_choice "skip"}
		[if]
			{VARIABLE_CONDITIONAL wf_vars.season_str equals "spring"}
			[then]
				#Spring
				{VARIABLE quota.orc_enemy_choice "orc,skip,skip"}
				{VARIABLE quota.undead_enemy_choice "undead,skip,skip"}
			[/then]
		[/if]

		[if]
			{VARIABLE_CONDITIONAL wf_vars.season_str equals "summer"}
			[then]
				#Summer
				{VARIABLE quota.orc_enemy_choice "orc,orc,orc,skip"}
				{VARIABLE quota.undead_enemy_choice "skip,skip,skip,undead"}
				[if]
					{VARIABLE_CONDITIONAL wf_vars.season less_than 4}
				[then]
					{VARIABLE quota.orc_enemy_choice "orc,skip"}
					{VARIABLE quota.undead_enemy_choice "skip"}
				[/then]
				[/if]
			[/then]
		[/if]

		[if]
			{VARIABLE_CONDITIONAL wf_vars.season_str equals "autumn"}
			[then]
				#Autumn
				{VARIABLE quota.orc_enemy_choice "orc,skip,skip,skip"}
				{VARIABLE quota.undead_enemy_choice "undead,undead,undead,skip"}
				[if]
					{VARIABLE_CONDITIONAL wf_vars.season less_than 4}
				[then]
					{VARIABLE quota.orc_enemy_choice "skip"}
					{VARIABLE quota.undead_enemy_choice "undead,skip"}
				[/then]
				[/if]
			[/then]
		[/if]
	[/event]

	[event]
		name=side 5 turn end
		first_time_only=no
		{VARIABLE_OP relations.orc_raids add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.orc_raids}
			[then]

			[if]
			{VARIABLE_CONDITIONAL quota.orc_raids greater_than 0}
			[then]
				# relative quantities of orc/undead set frequencies
				{RANDOM_VAR enemy_choice $quota.orc_enemy_choice}
				[switch]	# switch so I can add other options easily
					variable=enemy_choice
					[case]
						value="orc"
						{WF_DEBUG "Spawning orc raid q: $quota.orc_raids n: $enemy.num_outlaws t: $turn_number r: $random < $relations.orc_raids"}
						# Raids for the season locked on orc or undead
						{VARIABLE quota.orc_enemy_choice "orc,skip"}
						{VARIABLE quota.undead_enemy_choice "skip"}
						{FIRE_EVENT new_orc_raid}
					[/case]
					[case]
						value="skip"
						{WF_DEBUG "Skipping orc raid q: $quota.orc_raids n: $enemy.num_outlaws t: $turn_number r: $random < $relations.orc_raids"}
					[/case]
				[/switch]
			[/then]
			[/if]
				{VARIABLE_OP relations.orc_raids sub {JUMP}}
				{WF_JITTER relations.orc_raids}
				{VARIABLE_OP quota.orc_raids sub 1}
				#{WF_DEBUG "orc raid new relation q: $quota.orc_raids r: $relations.orc_raids"}
				{WF_SIDE_COUNT Orcs 5 $relations.orc_raids $quota.orc_raids}
			[/then]
		[/if]
		{CLEAR_VARIABLE enemy_choice}
		{CLEAR_VARIABLE random}
	[/event]

	[event]
		name=side 8 turn end
		first_time_only=no
		{VARIABLE_OP relations.undead_raids add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.undead_raids}
			[then]

			[if]
			{VARIABLE_CONDITIONAL quota.undead_raids greater_than 0}
			[then]
				# relative quantities of orc/undead set frequencies
				{RANDOM_VAR enemy_choice $quota.undead_enemy_choice}
				[switch]	# switch so I can add other options easily
					variable=enemy_choice
					[case]
						value="undead"
						{WF_DEBUG "Spawning undead raid q: $quota.undead_raids n: $enemy.num_outlaws t: $turn_number r: $random < $relations.undead_raids"}
						# Raids for the season locked on orc or undead
						{VARIABLE quota.undead_enemy_choice "undead,skip"}
						{VARIABLE quota.orc_enemy_choice "skip"}
						{FIRE_EVENT new_undead_raid}
					[/case]
					[case]
						value="skip"
						{WF_DEBUG "Skipping undead raid q: $quota.undead_raids n: $enemy.num_outlaws t: $turn_number r: $random < $relations.undead_raids"}
					[/case]
				[/switch]
			[/then]
			[/if]
				{VARIABLE_OP relations.undead_raids sub {JUMP}}
				{WF_JITTER relations.undead_raids}
				{VARIABLE_OP quota.undead_raids sub 1}
				#{WF_DEBUG "undead raid new relation q: $quota.undead_raids r: $relations.undead_raids"}
				{WF_SIDE_COUNT Undead 7 $relations.undead_raids $quota.undead_raids}
			[/then]
		[/if]
		{CLEAR_VARIABLE enemy_choice}
		{CLEAR_VARIABLE random}
	[/event]
#enddef

# ----- Burnination ------------------------------------------------------
#define WILL_BURN_BUILDINGS SIDE
	[event]
		name=moveto
		first_time_only=no
		[filter]
			side={SIDE}
			[and]
				race=human
				[or]
					race=orc
				[/or]
				[or]
					race=troll
				[/or]
				[or]
					race=goblin
				[/or]
				[or]
					race=drake
				[/or]
				[or]
					race=dwarf
				[/or]
				[or]
					race=lizard
				[/or]
			[/and]
			# Not sure how to switch on village terrain, so I'll handle
			# that event separately
			[filter_location]
				# Do not raise winter castle Cea
				terrain=*^Wm,*^Yf,*^Yfo,*^Yb,*^Ybo,*^Ys,*^Yso,*^Yu,*^Yuo,*^Ya,*^Yao,*^Yk,Ce
			[/filter_location]
		[/filter]
		[store_locations]	# This has base and overlay in it
			variable=burn_location_full
			x,y=$x1,$y1
		[/store_locations]
		# This is kind of an ugly hack, but I'm not sure how to make it cleaner
		[set_variables]
			name=burn_location
			mode=replace
			[split]
				list=$burn_location_full.terrain
				key=layer
				separator="^"
			[/split]
		[/set_variables]
		[switch]	# switch on base terrain
			variable=burn_location[0].layer
			[case]	# Wooden encampments
				value=Ce
				{CALL_FUNCTION "fort" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Wooden keep
				value=Ke,Kea
				{CALL_FUNCTION "fort" do,x,y="burn",$x1,$y1}
				{NARRATOR_SAYS _"As the flames lick through gaps in your keep walls, anxious villagers rush into the streets. The sight of the town center being reduced to ashes and the clang of swords sends them to their homes to grab food and supplies before rushing as far from the battle as possible.

Once in the wilderness, they become easy prey for the wolves..."}
				[endlevel]
					result=defeat
				[/endlevel]
			[/case]
		[/switch]
		[switch]	# switch on overlay terrain
			# I'd like to make this more building type-agnostic, but that's difficult
			variable=burn_location[1].layer
			[case]	# Armorer
				value=Ya,Yao
				{CALL_FUNCTION "armorer" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Blacksmith
				value=Yf,Yfo
				{CALL_FUNCTION "blacksmith" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Bowyer
				value=Yb,Ybo
				{CALL_FUNCTION "bowyer" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Library
				value=Yu,Yuo
				{CALL_FUNCTION "library" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Stables
				value=Ys,Yso
				{CALL_FUNCTION "stables" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Windmill
				value=Wm
				{CALL_FUNCTION "windmill" do,x,y="burn",$x1,$y1}
			[/case]
		[/switch]
		{CLEAR_VARIABLE burn_location_full}
		{CLEAR_VARIABLE burn_location}
	[/event]
#enddef

#define WILL_BURN_FARMS SIDE PROBABILITY
	[event]
		name=moveto
		first_time_only=no
		[filter]
			side={SIDE}
			[and]
				race=human
				[or]
					race=orc
				[/or]
				[or]
					race=troll
				[/or]
				[or]
					race=goblin
				[/or]
				[or]
					race=drake
				[/or]
				[or]
					race=dwarf
				[/or]
				[or]
					race=lizard
				[/or]
			[/and]
			[filter_location]
				#Do not burn winter farm Vha
				terrain=*^Vh
				[not]
					# Will not burn if side has a leader and captures village
					[filter_owner]
						[allied_with]
							side={SIDE}
						[/allied_with]
					[/filter_owner]
				[/not]
			[/filter_location]
		[/filter]
		{RANDOM_VAR burn_chance 1..100}
		{WF_DEBUG "Burn farm side {SIDE} if $burn_chance <= {PROBABILITY}"}
		[if]
			{VARIABLE_CONDITIONAL burn_chance less_than_equal_to {PROBABILITY}}
			[then]
				{CALL_FUNCTION "farm" do,x,y="burn",$x1,$y1}
			[/then]
		[/if]
		{CLEAR_VARIABLE burn_chance}
	[/event]
#enddef

#define QUOTA_YEAR
	[event]
		name=prestart
		{VARIABLE year $wf_vars.year}

		{VARIABLE_OP quota.outlaws add $year}
		{VARIABLE_OP quota.orc_raids add $year}
		{VARIABLE_OP quota.undead_raids add $year}
		{VARIABLE_OP quota.elves add $year}

		{VARIABLE_OP enemy.num_outlaws add $year}

		#{VARIABLE_OP year multiply {ENEMY_STEP}}
		#{VARIABLE_OP relations.outlaws_nice add $year}
		#{VARIABLE_OP relations.outlaws_mean add $year}
		#{VARIABLE_OP relations.orc_raids add $year}
		#{VARIABLE_OP relations.undead_raids add $year}

		#{VARIABLE_OP jumps.spring_outlaws sub $year}
		#{VARIABLE_OP jumps.spring_raids sub $year}
		#{VARIABLE_OP jumps.summer_outlaws sub $year}
		#{VARIABLE_OP jumps.summer_raids sub $year}
		#{VARIABLE_OP jumps.autumn_outlaws sub $year}
		#{VARIABLE_OP jumps.autumn_raids sub $year}
		#{VARIABLE_OP jumps.winter_outlaws sub $year}
		#{VARIABLE_OP jumps.winter_raids sub $year}
		{CLEAR_VARIABLE year}
	[/event]
#enddef

#define WINTER_RELATIONS
		# Outlaws are desparate -- more of them, starting soon to give them
		# time to plod through the snow
		#{VARIABLE_OP enemy.num_outlaws add 2}
		[if]
			{VARIABLE_CONDITIONAL relations.outlaws_nice less_than "$(1*{ENEMY_STEP}*{SEASON_LENGTH})"}
			[then]
				{VARIABLE relations.outlaws_nice "$(1*{ENEMY_STEP}*{SEASON_LENGTH})"}
				{WF_JITTER relations.outlaws_nice}
			[/then]
		[/if]
		[if]
			{VARIABLE_CONDITIONAL relations.outlaws_mean less_than "$(1*{ENEMY_STEP}*{SEASON_LENGTH})"}
			[then]
				{VARIABLE relations.outlaws_mean "$(1*{ENEMY_STEP}*{SEASON_LENGTH})"}
				{WF_JITTER relations.outlaws_mean}
			[/then]
		[/if]
		{VARIABLE quota.elves 0}
#enddef

#define SPRING_RELATIONS
		#{VARIABLE_OP quota.outlaws sub $wf_vars.year}

		# Even though I will "thin" them in event=start below, there are still
		# a fair number of outlaws on the map. No need to add more for a few turns
		[if]
			{VARIABLE_CONDITIONAL relations.outlaws_nice greater_than "$(ceil(-1*{ENEMY_STEP} * ({SEASON_LENGTH}/3)))"}
			[then]
				{VARIABLE relations.outlaws_nice "$(ceil(-1*{ENEMY_STEP} * ({SEASON_LENGTH}/3)))"}
				{WF_JITTER relations.outlaws_nice}
			[/then]
		[/if]
		[if]
			{VARIABLE_CONDITIONAL relations.outlaws_mean greater_than "$(ceil(-1*{ENEMY_STEP} * ({SEASON_LENGTH}/2)))"}
			[then]
				{VARIABLE relations.outlaws_mean "$(ceil(-1*{ENEMY_STEP} * ({SEASON_LENGTH}/2)))"}
				{WF_JITTER relations.outlaws_mean}
			[/then]
		[/if]

		# Orcs soon-ish, it will take a few turns for them to arrive
		# Need to let the remaining outlaws clear out
		# Also setting their gold to zero initially just to be on the safe side
		# (I've had a few problems with this before)
		[if]
			{VARIABLE_CONDITIONAL relations.orc_raids less_than "$(ceil( ({SEASON_LENGTH}/4) * {ENEMY_STEP} * -1 ))"}
			[then]
				{VARIABLE relations.orc_raids "$(ceil( ({SEASON_LENGTH}/4) * {ENEMY_STEP} * -1 ))"}
				{WF_JITTER relations.orc_raids}
			[/then]
		[/if]
		[if]
			{VARIABLE_CONDITIONAL relations.undead_raids less_than "$(ceil( ({SEASON_LENGTH}/4) * {ENEMY_STEP} * -1 ))"}
			[then]
				{VARIABLE relations.undead_raids "$(ceil( ({SEASON_LENGTH}/4) * {ENEMY_STEP} * -1 ))"}
				{WF_JITTER relations.undead_raids}
			[/then]
		[/if]
#enddef
