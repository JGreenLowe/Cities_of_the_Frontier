#textdomain wesnoth-Wild_Frontiers
# This file includes macros related to the appearance of various enemy groups

# The rates at which the probability of outlaw/orc occurrences rise
# Higher = more predictable
#define ENEMY_STEP
2#enddef

#define ENEMY_INCOME
0#enddef

# default aspect values /usr/share/games/wesnoth/1.14/data/ai/utils/default_config.cfg
# https://wiki.wesnoth.org/RCA_AI
# https://wiki.wesnoth.org/AiWML
# https://wiki.wesnoth.org/Modifying_AI_Components
# All scenarios have the same enemy sides, so I've defined them as macros
# for convenience. Each side macro also calls the events that
# place new enemies

#define OBJECT_LOYAL
	[modifications]
		[object]
			[effect]
				apply_to=loyal
			[/effect]
		[/object]
	[/modifications]
#enddef

#define ENEMY_GOLD_REWARD SIDE
	#[filter_second]
	#	side=1
	#[/filter_second]
	[store_gold]
		side={SIDE}
		variable=gold_store
	[/store_gold]
	[if]
		{VARIABLE_CONDITIONAL gold_store greater_than 0}
	[then]
		[if]
			{VARIABLE_CONDITIONAL second_unit.side numerical_equals 1}
		[then]
			[message]
				speaker=second_unit
				message=_"These scum must have ransacked a lot of villages to have this much gold."
			[/message]
			[message]
				speaker=second_unit
				message=_"Still, I do not think the rightful owners have much use for it anymore."
			[/message]
			{NARRATOR_SAYS _"You receive $gold_store gold pieces"}
			[sound]
				name="gold.ogg"
			[/sound]
		[/then]
		[/if]
		[gold]
			side=$second_unit.side
			amount=$gold_store
		[/gold]
	[/then]
	[/if]
	#reset to zero
	{VARIABLE_OP gold_store multiply -1}
	[gold]
		side={SIDE}
		amount=$gold_store
	[/gold]
	{CLEAR_VARIABLE gold_store}
#enddef

# ----- Animals ----------------------------------------------------------
#define ANIMALS_ARE_SIDE2 LEADER_VALUE
	[side]
	# Creates the animals as side 2. Leader value must be supplied -- animals
	# will be more aggressive during the winter. New animals spawn semi-randomly.
		side=2
		controller=ai
		team_name=wild_animals,elves,undead,calamity
		user_team_name=_"Wild animals"
		no_leader=yes
		#hidden=yes
		shroud=no
		fog=no
		gold=0
		income={ENEMY_INCOME}
		[ai]	# make the AI treat each unit as independently as possible
			#caution=0.25
			aggression=0.9
			attack_depth=1	# IGNORED, IS THERE AN EQUIVALENT?
			grouping=no
			leader_value={LEADER_VALUE}	# allows me to make animals attack your city only in the winter
			simple_targeting=yes
			village_value=0.5
			[goal]	# not sure if this works with simple targeting
				name=target
				value=10
				[criteria]
					{FILTER_FOR_CURSE "feral"}
				[/criteria]
			[/goal]
		[/ai]
		#{MICRO_AI_LURKERS} # HACK FOR 1.11.6, REMOVE IN FUTURE
	[/side]

	# Micro-AI tag has to be applied in an event tag
	[event]
		name=prestart
		[micro_ai]
			action=add
			side=2
			ai_type=lurkers
			[filter]
				type=Wolf
			[/filter]
			[filter_location]
				terrain=*^F*
			[/filter_location]
			stationary=yes
		[/micro_ai]
	[/event]


	[event]
	# A semi-random chance for a new animal to spawn on each turn. Animals spawn
	# at the end of their side turn to prevent an animal appearing out of nowhere
	# and attacking. Animals tend toward equilibrium -- if you've killed a bunch,
	# it's more likely that more will spawn.
		name=side 2 turn end
		first_time_only=no
		[store_unit]
			variable=animal_list
			[filter]
				side=2
			[/filter]
		[/store_unit]
		{RANDOM_VAR chance 1..100}
		{VARIABLE threshold "$($animal_list.length*75.0/$enemy.num_animals)"}
		[if]
			{VARIABLE_CONDITIONAL chance greater_than $threshold}
			[then]
				{WF_DEBUG "Spawning 3 new random animals $turn_number $chance > $threshold"}
				{REPEAT 3 {NEW_RANDOM_ANIMAL}}
			[/then]
		[/if]
		{CLEAR_VARIABLE chance}
		{CLEAR_VARIABLE threshold}
		{CLEAR_VARIABLE animal_list}
	[/event]
#enddef

#define NEW_RANDOM_ANIMAL
# Creates a new animal of (weighted) random type and places it at a
# random location on the map.
	# boars at all levels (copy from Borstep)
	# level0: vamp bat, giant rat, falcon
	# level1: blood bat, wolf, elder falcon, young ogre
	# level2: great wolf, ogre, dread bat, bear (need to make), gryphon
	# level3: direwolf, grizzly bear? (need to make)
	{RANDOM_VAR rnd_level 1..100}
	{DIFFICULTY_VAR multiplier 0.9 1.0 1.1}
	{VARIABLE_OP rnd_level multiply $multiplier|}

	[if]
		{VARIABLE_CONDITIONAL rnd_level less_than_equal_to 40}
		[then]	# generate a level 0 animal
			{RANDOM_VAR rnd_type "Vampire Bat,Giant Rat"}
		[/then]
	[/if]
	[if]
		[and]
			{VARIABLE_CONDITIONAL rnd_level greater_than 40}
			{VARIABLE_CONDITIONAL rnd_level less_than_equal_to 85}
		[/and]
		[then]	# generate a level 1 animal, prefer wolves
			{RANDOM_VAR rnd_type "Wolf,Wolf,Wolf"}
			# taking out blood bats because they suck
		[/then]
	[/if]
	[if]
		[and]
			{VARIABLE_CONDITIONAL rnd_level greater_than 85}
			{VARIABLE_CONDITIONAL rnd_level less_than_equal_to 95}
		[/and]
		[then]	# generate a level 2 animal, prefer wolves
			{RANDOM_VAR rnd_type "Great Wolf,Great Wolf,Great Wolf,Water Serpent,Water Serpent"}
			# Removed Gryphons and Dread Bats -- they are %^#@!&* annoying
		[/then]
	[/if]
	[if]
		{VARIABLE_CONDITIONAL rnd_level greater_than 95}
		[then]	# generate a level 3 animal, rare
			{RANDOM_VAR rnd_type "Direwolf,Direwolf,Giant Spider"}
		[/then]
	[/if]

	[if]
		{VARIABLE_CONDITIONAL rnd_type equals "Water Serpent"}
		[then]
			{VARIABLE allowed_terrains "W*,S*"}
		[/then]
		[else]
			{VARIABLE allowed_terrains "*^F*,H*,M*,S*"}
		[/else]
	[/if]
	[store_locations]
		variable=wild_places
		{X_AND_Y_ARE_ON_THE_MAP}
		terrain=$allowed_terrains
		[not]
			[filter]
			[/filter]
		[/not]
		[not]
			[filter_adjacent_location]
				[filter]
				[/filter]
			[/filter_adjacent_location]
		[/not]
	[/store_locations]
	{RANDOM_VAR rnd_i 0.."$($wild_places.length-1)"}

	[unit]
		side=2
		type=$rnd_type
		x=$wild_places[$rnd_i].x
		y=$wild_places[$rnd_i].y
		placement=map
		passable=yes
		random_traits=yes
		{OBJECT_LOYAL}
	[/unit]

	{CLEAR_VARIABLE rnd_level,multiplier,rnd_type,rnd_i,allowed_terrains,wild_places}
#enddef

# ----- Outlaws ----------------------------------------------------------
#define NICE_OUTLAWS_ARE_SIDE3 JUMP
#arg LIMIT
2#endarg
	[event]
		name=prestart
		{VARIABLE quota.nice {LIMIT}}
#ifdef EASY
		{VARIABLE_OP quota.nice sub 1}
#endif
#ifdef HARD
		{VARIABLE_OP quota.nice add 1}
#endif
	[/event]

	[side]
	# Creates outlaws as side 3, with a supplied JUMP (smaller means more
	# frequent appearances of these outlaws).
	# This side is "nice", in that they will not burn down your villages,
	# just your blacksmiths etc. and your encampments.
		side=3
		controller=ai
		team_name=nice_outlaws
		user_team_name=_"Outlaws"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#caution=0.25			# If caution is high, they never attack at all
			#leader_aggression=-0.5
			#leader_ignores_keep=yes	# Can't recruit, so no point
			#leader_value=3.0
			aggression=0.9
			grouping=defensive
			village_value=0.5
			[goal]				# not the animals or orcs
				name=target
				[criteria]
					side=2
				[/criteria]
				value=0.1
			[/goal]
			[goal]				# focus on the player
				name=target
				[criteria]
					side=1
				[/criteria]
				value=10
			[/goal]
			[goal]				# not the animals or orcs
				name=target
				[criteria]
					side=4,5,7,8,9	# I am 3 and allied with 6
				[/criteria]
				value=1
			[/goal]
			#[goal]				# Aim at the town -- villages and castles
			#	name=target_location
			#	[criteria]
			#		[and]
			#			[filter_owner]
			#				side=1
			#			[/filter_owner]
			#			terrain=*^V*
			#		[/and]
			#		[or]
			#			terrain=Ke^Yk
			#		[/or]
			#	[/criteria]
			#	value=3
			#[/goal]
			#[goal]				# Don't leave the "leader" out to dry
			#	name=protect_unit
			#	[criteria]
			#		role=outlaw_leader
			#		side=3
			#	[/criteria]
			#	protect_radius=5
			#	value=3
			#[/goal]
		[/ai]
		{FLAG_VARIANT6 "ragged"}
	[/side]

	#{WILL_BURN_BUILDINGS 3}
	#{WILL_BURN_FARMS 3 25}		# burn some farms, but not all

	[event]
		name=side 3 turn end
		first_time_only=no
		{VARIABLE_OP relations.outlaws_nice add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.outlaws_nice}
			{VARIABLE_CONDITIONAL quota.nice greater_than 0}
			[then]
				{WF_DEBUG "Spawning new *nice* outlaws $turn_number $random < $relations.outlaws_nice"}
				{NEW_OUTLAW_LEADER 3}
				{REPEAT $enemy.num_outlaws {NEW_RANDOM_OUTLAW 3}}
				{VARIABLE_OP relations.outlaws_nice sub "$({JUMP}*{ENEMY_STEP})"}
				{VARIABLE_OP quota.nice sub 1}
			[/then]
		[/if]
		{CLEAR_VARIABLE random}
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=3
			role=outlaw_leader
		[/filter]
		{ENEMY_GOLD_REWARD 3}
	[/event]
#enddef

#define MEAN_OUTLAWS_ARE_SIDE4 JUMP
#arg LIMIT
2#endarg
	[event]
		name=prestart
		{VARIABLE quota.mean {LIMIT}}
#ifdef EASY
		{VARIABLE_OP quota.mean sub 1}
#endif
#ifdef HARD
		{VARIABLE_OP quota.mean add 1}
#endif
	[/event]

	# Creates outlaws as side 4.
	# This side is "mean", in that they will burn down your villages as well as
	# your blacksmiths etc. and your encampments.
	[side]
		side=4
		controller=ai
		team_name=mean_outlaws
		user_team_name=_"Outlaws"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#caution=0.25
			#leader_aggression=-0.5
			#leader_ignores_keep=yes	# Can't recruit, so no point
			#leader_value=3.0
			#village_value=1
			aggression=0.9
			grouping=defensive
			[goal]				# not the animals or orcs
				name=target
				[criteria]
					side=2
				[/criteria]
				value=0.1
			[/goal]
			[goal]				# focus on the player
				name=target
				[criteria]
					side=1
				[/criteria]
				value=10
			[/goal]
			[goal]				# not the animals or orcs
				name=target
				[criteria]
					side=3,5,6,7,8,9	# I am 4
				[/criteria]
				value=1
			[/goal]
			[goal]				# Mean outlaws also aim at blacksmiths, etc. MWAHAHAHAHAHA
				name=target_location
				[criteria]
					[and]
						[filter_owner]
							side=1
						[/filter_owner]
						terrain=*^V*
					[/and]
					[or]
						terrain=*^Yf,*^Yfo,*^Yb,*^Ybo,*^Ys,*^Yso,*^Yu,*^Yuo,*^Ya,*^Yao,Ke^Yk,Ce
					[/or]
				[/criteria]
				value=10
			[/goal]
			#[goal]				# Don't leave the "leader" out to dry
			#	name=protect_unit
			#	[criteria]
			#		role=outlaw_leader
			#		side=4
			#	[/criteria]
			#	protect_radius=2
			#	value=3
			#[/goal]
		[/ai]
		{FLAG_VARIANT "undead"}	# helps to distinguish them as not nice, arguably
	[/side]

	{WILL_BURN_BUILDINGS 4}
	{WILL_BURN_FARMS 4 75}		# burn most farms

	[event]
		name=side 4 turn end
		first_time_only=no
		{VARIABLE_OP relations.outlaws_mean add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.outlaws_mean}
			{VARIABLE_CONDITIONAL quota.mean greater_than 0}
			[then]
				{WF_DEBUG "Spawning new *mean* outlaws $turn_number $random < $relations.outlaws_mean"}
				{NEW_OUTLAW_LEADER 4}
				{REPEAT $enemy.num_outlaws {NEW_RANDOM_OUTLAW 4}}
				{VARIABLE_OP relations.outlaws_mean sub "$({JUMP}*{ENEMY_STEP})"}
				{VARIABLE_OP quota.mean sub 1}
			[/then]
		[/if]
		{CLEAR_VARIABLE random,rnd_i,outlaw_places}
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=4
			role=outlaw_leader
		[/filter]
		{ENEMY_GOLD_REWARD 4}
	[/event]

	# ----- Outlaw sighting (first time) -----
	[event]
		name=sighted
		first_time_only=yes
		[filter]
			side=3,4
		[/filter]
		[filter_second]
			side=1
		[/filter_second]
		{DIALOGUE first_outlaw_sighting (
		[scroll_to]
			x,y=$x1,$y1
		[/scroll_to]
		[if]	# The hero sees the outlaws
			[have_unit]
				x,y=$x2,$y2
				canrecruit=yes
				side=1
			[/have_unit]
			[then]
				{HERO_SAYS _"Outlaws!"}
			[/then]
			[else] # Somebody else sees the outlaws
				[message]
					speaker=second_unit
					message=_"Milord, outlaws are advancing on our position!"
				[/message]
			[/else]
		[/if]
		{HERO_SAYS _"They won't be happy about King's men settling in their midst. To arms, men!"}
		{TUTORIAL sight_outlaws _"Early on, roaming bands of outlaws will be the biggest threat to your town. Depending on the strength of the outlaw band, you may want to recruit additional units at this point and move your existing units to counter the threat.

Some outlaws will occupy your villages, while others will sometimes burn them to the ground. Mean outlaws will burn down your encampments, blacksmiths, and other buildings including your keep. Losing your buildings represent a huge loss of investment, so make sure you defend them well."}
		{INCIDENTAL_MUSIC "battle.ogg"}
		)}
	[/event]
#enddef


#define NEW_OUTLAW_LEADER SIDE
	# Leader is a level-3 unit starting in the first winter
	[if]
		{VARIABLE_CONDITIONAL season less_than 2}
		[then]
			{RANDOM_VAR rnd_type ("Outlaw,Bandit,Trapper")}
		[/then]
		[else]
			# Skipping fugitive, as I want the outlaws to go on the offense
			{RANDOM_VAR rnd_type ("Highwayman,Ranger,Huntsman")}
		[/else]
	[/if]
	[store_locations]
		variable=outlaw_places
		{X_AND_Y_ARE_ON_THE_MAP}
		terrain=!,W*,*^Y*,*^V*,K*,C*
		[and]	# appears somewhere near the map edges, not near buildings
			[not]
				x="$({BORDER})"-"$({MAP_WIDTH}-{BORDER})"
				y="$({BORDER})"-"$({MAP_HEIGHT}-{BORDER})"
			[/not]
		[/and]
	[/store_locations]
	{RANDOM_VAR rnd_i 0.."$($outlaw_places.length-1)"}

	[unit]
		side={SIDE}
		type=$rnd_type
		x=$outlaw_places[$rnd_i].x
		y=$outlaw_places[$rnd_i].y
		canrecruit=no
		placement=map
		passable=yes
		animate=yes
		role=outlaw_leader
		random_traits=yes
		{OBJECT_LOYAL}
		{IS_HERO}
	[/unit]
	{CLEAR_VARIABLE rnd_type}
#enddef

#define NEW_RANDOM_OUTLAW SIDE
	# In the few seasons outlaws are weak (level 0-1), later they can have level 2 units as well
	[if]
		{VARIABLE_CONDITIONAL season less_than 3}
		[then]
			{RANDOM_VAR rnd_type "Woodsman,Poacher,Thief,Ruffian,Thug,Footpad"}
		[/then]
		[else]
			{RANDOM_VAR rnd_type "Woodsman,Poacher,Trapper,Thief,Rogue,Ruffian,Thug,Bandit,Footpad,Outlaw"}
		[/else]
	[/if]
	[unit]
		side={SIDE}
		type=$rnd_type
		canrecruit=no
		random_traits=yes
		{OBJECT_LOYAL}
		generate_name=yes
		x=$outlaw_places[$rnd_i].x
		y=$outlaw_places[$rnd_i].y
		placement=map
		passable=yes
		animate=yes
	[/unit]

	{CLEAR_VARIABLE rnd_type}
#enddef


# ----- ORCS (and trolls) ------------------------------------------------
#define ORCS_ARE_SIDE5
	# Creates orcs as side 5. Orc leaders from the east and north are given
	# those roles to identify them.
	# Orcs will happily will burn down basically everything, all the time.
	# No wolf riders right now as there are already wolves around, but I may change
	# my mind later
	[side]
		side=5
		controller=ai
		team_name=orcs
		user_team_name=_"Orcs"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0			# no initial gold -- given when a leader shows up
		income={ENEMY_INCOME}		# income set later, -2 to counteract default income
		[ai]
			#caution=0.01
			#leader_value=3.0
			#village_value=3
			aggression=0.9
			[goal]				# not the animals or orcs
				name=target
				[criteria]
					side=2
				[/criteria]
				value=0.1
			[/goal]
			[goal]				# focus on the player
				name=target
				[criteria]
					side=1
				[/criteria]
				value=10
			[/goal]
			[goal]				# focus on the player
				name=target
				[criteria]
					side=3,4,6,7,8,9	# I am 5
				[/criteria]
				value=1
			[/goal]
			[goal]		# Orcs aim at castles, blacksmiths, etc. MWAHAHAHAHAHA
				name=target_location
				[criteria]
					[and]
						[filter_owner]
							side=1
						[/filter_owner]
						terrain=*^V*
					[/and]
					[or]
						terrain=*^Yf,*^Yfo,*^Yb,*^Ybo,*^Ys,*^Yso,*^Yu,*^Yuo,*^Ya,*^Yao,Ke^Yk,Ce
					[/or]
				[/criteria]
				value=10
			[/goal]
			#[goal]		# Don't leave the leader out to dry
			#	name=protect_unit
			#	[criteria]
			#		side=5
			#		canrecruit=yes
			#	[/criteria]
			#	protect_radius=10
			#	value=3
			#[/goal]
		[/ai]
		{FLAG_VARIANT "long"}	# not that this ever gets used, since they burn stuff down
	[/side]

	[event]
		name=die
		first_time_only=no # Who wants to go orc-hunting?!
		[filter]
			side=5
			[and]
				role=east_orc_leader
				[or]
					role=north_orc_leader
				[/or]
			[/and]
		[/filter]

		{ENEMY_GOLD_REWARD 5}
	[/event]


	# All orc units don't have upkeep -- this makes sure that the
	# leaders can defend themselves when attacked by outlaws, animals, or you
	# by recruiting new units since they should always have positive gold.
	[event]
		name=recruit
		first_time_only=no
		[filter]
			side=5
		[/filter]
		[object]
			#filter is implicit
			[effect]
				apply_to=loyal
			[/effect]
		[/object]
	[/event]

	{WILL_BURN_BUILDINGS 5}
	{WILL_BURN_FARMS 5 100}

	[event]
		name=moveto
		first_time_only=no
		[filter]
			side=1,9
			[filter_location]
				terrain=Ko,Koa
			[/filter_location]
		[/filter]
		{MODIFY_2X2_SPACE Rb $x1 $y1}
		{FIRE_ANIMATION $x1 $y1}	# This places the "burning building" terrain at x,y
		{PLACE_IMAGE "scenery/rubble.png" $x1 $y1}
	[/event]

	# This event is fired for the appearance of new orc leaders
	# It could have been included in the new_raid macro(s), but for
	# consistency with necros, it's made a fire-able event
	[event]
		name=new_orc_raid
		first_time_only=no

		# Pick a direction
		{RANDOM_VAR rnd_dir 0,1}	# 0=east, 1=north, used in map_signs
		[switch]	# I know if/else would work, but I like switch statements better
			variable=rnd_dir
			[case]
				value=0
				{VARIABLE orc_role "east_orc_leader"}
			[/case]
			[case]
				value=1
				{VARIABLE orc_role "north_orc_leader"}
			[/case]
		[/switch]

		# Give gold bonus if there's already a leader, otherwise create a new leader
		[if]
			[have_unit]
				side=5
				canrecruit=yes
				role=$orc_role
			[/have_unit]
			[then]
				{WF_DEBUG "Tried to add a new $orc_role , but there's already one there -- Abandon keep."}
				{VARIABLE_OP quota.raids add 1}
				[modify_unit]
					[filter]
						side=5
						role=$orc_role
						canrecruit=yes
					[/filter]
					canrecruit=no
					{IS_HERO}
					[object]
						[effect]
							apply_to=loyal
						[/effect]
					[/object]
					goto_x=0
					goto_y=0
				[/modify_unit]
				[event]
					id=guide_orc_leader
					remove=yes
				[/event]
			[/then]
			[else]
				{COUNT_VILLAGES num_villages}
				{VARIABLE orc_gold "$(ceil($enemy.raid_mult * ($enemy.raid_base_gold+$enemy.raid_gold_mult*$num_villages)))"}
				[gold]
					side=5
					amount=$orc_gold
				[/gold]
				{WF_DEBUG "Giving orcs $orc_gold gold"}
				{CLEAR_VARIABLE orc_gold}
				{CLEAR_VARIABLE num_villages}

				{RANDOM_VAR rnd_type ("Orcish Slurbow,Orcish Warlord")}
				# This *should* always succeed as the signpost is on plains, although a
				# really devious player could divert a stream here or something. I should
				# fix this eventually, although it's rather low priority.
				[store_locations]
					variable=orc_places
					terrain=!,W*,*^Y*,*^V*,K*,C*
					{X_AND_Y_ARE_ON_THE_MAP}
					[and]	# appears near the signpost
						x=$map_signs[$rnd_dir].x
						y=$map_signs[$rnd_dir].y
						radius={BORDER}
					[/and]
				[/store_locations]
				{RANDOM_VAR rnd_o 0.."$($orc_places.length-1)"}

				# If not, find the nearest place to set up a keep
				{FIND_NEAREST_HEX orc_keep_spot $orc_places[$rnd_o].x $orc_places[$rnd_o].y (
					terrain={BUILDABLE_TERRAIN},Ko
						[filter_adjacent_location]
							terrain={BUILDABLE_TERRAIN},Co
							adjacent=sw,s,se
							count=3
						[/filter_adjacent_location]
						{NOT_MAP_SIGNS}
				)}
				{WF_DEBUG "$orc_keep_spot.x,$orc_keep_spot.y looks like a good place for an orc castle"}
				{WF_DEBUG "Placing an orc leader at $orc_places[$rnd_o].x $orc_places[$rnd_o].y"}
				# And place the leader himself
				[unit]
					side=5
					type=$rnd_type
					x=$orc_places[$rnd_o].x
					y=$orc_places[$rnd_o].y
					canrecruit=yes
					extra_recruit=Orcish Archer,Orcish Assassin,Orcish Grunt,Troll Whelp,Goblin Spearman
					role=$orc_role
					placement=map
					passable=yes
					animate=yes
					goto_x=$orc_keep_spot.x
					goto_y=$orc_keep_spot.y
				[/unit]
				{CLEAR_VARIABLE rnd_type}

				# Now supply his hench-orcs
				{REPEAT 3 {NEW_RANDOM_ORC}}

				[micro_ai]
					side=5
					ai_type=messenger_escort
					action=add
					[filter]
						side=5
						canrecruit=yes
						role=$orc_role
					[/filter]
					waypoint_x=$orc_keep_spot.x
					waypoint_y=$orc_keep_spot.y
				[/micro_ai]

				# This event makes sure the orc leader can't get distracted on his way to the keep
				[event]
					name=side 5 turn
					first_time_only=no
					delayed_variable_substitution=no
					id=guide_orc_leader
					[modify_unit]
						[filter]
							side=5
							canrecruit=yes
							role=$orc_role
						[/filter]
						goto_x=$orc_keep_spot.x
						goto_y=$orc_keep_spot.y
					[/modify_unit]
				[/event]
				# Build a castle when he gets there, or next turn if he's already there
				[if]
					[and]
						{VARIABLE_CONDITIONAL orc_places[$rnd_o].x equals $orc_keep_spot.x}
						{VARIABLE_CONDITIONAL orc_places[$rnd_o].y equals $orc_keep_spot.y}
					[/and]
					[then]
						[event]
							name=side 5 turn
							first_time_only=yes
							delayed_variable_substitution=no
							{BUILD_ORC_KEEP $orc_keep_spot.x $orc_keep_spot.y}
						[/event]
					[/then]
					[else]
						[event]
							name=moveto
							first_time_only=yes
							delayed_variable_substitution=no	# so I can clear variables
							[filter]
								side=5
								role=$orc_role
								canrecruit=yes
								x=$orc_keep_spot.x
								y=$orc_keep_spot.y
							[/filter]
							{BUILD_ORC_KEEP $orc_keep_spot.x $orc_keep_spot.y}
						[/event]
					[/else]
				[/if]
				{CLEAR_VARIABLE rnd_o}
				{CLEAR_VARIABLE orc_keep_spot}
				{CLEAR_VARIABLE orc_places}
			[/else]
		[/if]
		[sound]	# warn the player who is paying attention (and has the sound on)
			name="ambient/wardrums.ogg"
		[/sound]
		{CLEAR_VARIABLE rnd_dir,orc_role}

		# Suggest taking the fight to the orcs
		[event]
			name=die
			[filter]
				side=5
				[not]
					[and]
						role=east_orc_leader
						[or]
							role=north_orc_leader
						[/or]
					[/and]
				[/not]
			[/filter]
			[filter_second]
				side=1
			[/filter_second]
			{DIALOGUE first_orc_kill (
			{ADVISOR_SAYS _"Milord, once we have fended off these raiders, perhaps we should send some soldiers to seek out their chieftain."}
			{HERO_SAYS _"That seems like it could come at a high cost in men."}
			{ADVISOR_SAYS _"True, milord, but the chieftain is bound to be holding onto the bounty he has acquired in other raids."}
			{TUTORIAL suggest_fighting_orc_leaders1 _"If you seek out and kill one of the orc leaders, you will receive gold. Keep in mind that this needs to be balanced against the upkeep costs of the units you send on this mission, the losses you might suffer on your way, and of course your ability to maintain a strong defense against other enemies in the meantime."}
			{TUTORIAL suggest_fighting_orc_leaders2 _"Unless you have been a bit lucky, you may not have the strength to mount such a raid during your first year. A successful attack, however, can greatly increase your gold reserves. Keep it in mind for next year, particularly in the autumn when orcs do not get reinforcements."}
			)}
		[/event]

		# ----- Orc sighting (first time) -----
		[event]
			name=sighted
			#id=orc_sighting
			first_time_only=yes
			[filter]
				side=5
			[/filter]
			[filter_second]
				side=1
			[/filter_second]
		#{ON_SIGHTING orc_sighting 1 side=5 (
			{DIALOGUE first_orc_sighting (
				[if]
					[have_unit]
						x,y=$x1,$y1
						canrecruit=yes
					[/have_unit]
					[then]
						{HERO_SAYS _"Orcs, and it looks like they have come in force!"}
					[/then]
					[else]
						{ADVISOR_SAYS _"Orcs, milord, and it looks like they have come in force!"}
					[/else]
				[/if]
				{HERO_SAYS _"We knew from the first that this day was coming. It is time to demonstrate our courage and our valor in combat. For glory! For Wesnoth!"}
				{CYNIC_SAYS _"I am not so sure about glory, but someone must protect the townsfolk from these beasts."}
				{TUTORIAL orc_sighting _"Orcs attack in much larger groups than do the outlaws, and may severely test your defenses. Now is likely a good time to recruit a few more units.

If the orcs are still far from your town, you may want to have your Peasant Workers hastily build some fortifications in their path. Orc raids will always come from either the north or east, so in general these sides of your town should be the most heavily fortified."}
				{INCIDENTAL_MUSIC "northerners.ogg"}
			)}
		#)}
		[/event]
	[/event]
#enddef

#define BUILD_ORC_KEEP X Y
	{MODIFY_TERRAIN Ko {X} {Y}}
	# It's possible this might screw things up if you build a structure
	# after the orcs are spawned, but it's a low-probability problem
	[terrain]
		terrain=Co
		[filter_adjacent_location]
			x,y={X},{Y}
			adjacent=ne,n,nw
		[/filter_adjacent_location]
	[/terrain]
	# orc leader no longer needs to be guided to castle
	[modify_unit]
		[filter]
			side=5
			canrecruit=yes
			role=$orc_role
		[/filter]
		goto_x=0
		goto_y=0
	[/modify_unit]
	[micro_ai]
		side=5
		ai_type=messenger_escort
		action=delete
	[/micro_ai]
	[event]
		id=guide_orc_leader
		remove=yes
	[/event]
#enddef

#define NEW_RANDOM_ORC
	# Orc sidekicks are always level 2 -- it's the gold their side has that
	# varies from season to season
	{RANDOM_VAR rnd_type "Orcish Crossbowman,Orcish Slayer,Orcish Warrior,Troll,Troll Rocklobber"}
	[unit]
		side=5
		type=$rnd_type
		canrecruit=no
		x=$orc_places[$rnd_o].x
		y=$orc_places[$rnd_o].y
		placement=map
		passable=yes
		animate=yes
		random_traits=yes
		{OBJECT_LOYAL}
		overlays="misc/loyal-icon.png"
	[/unit]

	{CLEAR_VARIABLE rnd_type}
#enddef


# ----- Elves ------------------------------------------------------------
#define ELVES_ARE_SIDE6
	# Elves appear if you cut down too many forests
	[side]
		side=6
		controller=ai
		team_name=elves,nice_outlaws	# Elves like animals, tolerate outlaws
		user_team_name=_"Elves"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#caution=0.01			# no retreat
			#leader_value=5.0
			aggression=0.9
			grouping=defensive
			village_value=0.5
			[goal]				# Aim at hero, because he ordered the forest-chopping
				name=target
				[criteria]
					id=Hero
				[/criteria]
				value=10
			[/goal]
		[/ai]
		{FLAG_VARIANT "wood-elvish"}
	[/side]
	# Elves don't burn buildings, because they worry the fire would spread to the forest

	[event]
		name=side 6 turn end
		first_time_only=no
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.elves}
			[then]
				{WF_DEBUG "Spawning Elves $turn_number $random < $relations.elves"}
				{RANDOM_VAR rnd_type ("Elvish Ranger","Elvish Marksman","Elvish Captain", "Elvish Hero", "Elvish Rider","Elvish Druid", "Elvish Sorceress")}
				# Find a forest near the western signpost
				{FIND_NEAREST_HEX elf_start $map_signs[2].x $map_signs[2].y terrain=*^F*}
				{WF_DEBUG "Placing some elves near $elf_start.x,$elf_start.y"}
				[unit]
					side=6
					type=$rnd_type
					role=elf_leader
					x=$elf_start.x
					y=$elf_start.y
					canrecruit=no
					placement=map
					passable=yes
					animate=yes
					random_traits=yes
					{OBJECT_LOYAL}
					{IS_HERO}
				[/unit]
				{CLEAR_VARIABLE rnd_type}
				{REPEAT 6 {NEW_RANDOM_ELF}}
				{VARIABLE_OP relations.elves multiply $enemy.raid_mult}
				{VARIABLE_OP relations.elves round ceil}
				#{VARIABLE_OP relations.elves ipart $relations.elves}
				{WF_DEBUG "Spawning $relations.elves elves"}
				{REPEAT $relations.elves {NEW_RANDOM_ELF}}
				{VARIABLE relations.elves 0}	# reset relations
				[event]
					name=sighted
					first_time_only=yes
					[filter]
						side=6
					[/filter]
					[filter_second]
						side=1
					[/filter_second]
					[message]
						role=elf_leader
						message=_"Human! We have heard the cries of the trees, and we will not stand idle while you wantonly destroy the forests. You shall soon feel the wrath of the elves!"
					[/message]
					{HERO_SAYS _"We are well within lands given to humans by the Treaty, elf! You have no cause to wish us harm."}
					[message]
						role=elf_leader
						message=_"The Treaty does not give you the right to make war upon trunks and branches. Leave now or you shall find yourself full of arrows."
					[/message]
					{ADVISOR_SAYS _"This is likely a splinter group, milord, not any part of the elvish army. That will not make their blades any less sharp, however."}
					{INCIDENTAL_MUSIC "elvish-theme.ogg"}
				[/event]
			[/then]
		[/if]
		{CLEAR_VARIABLE elf_start,random}
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=6
			role=elf_leader
		[/filter]
		{ENEMY_GOLD_REWARD 6}
	[/event]
#enddef

#define NEW_RANDOM_ELF
	# Elves spawn at level 1, stronger has too much potential for randomized doom
	{RANDOM_VAR rnd_type "Elvish Fighter,Elvish Archer,Elvish Shaman,Elvish Scout"}
	[unit]
		side=6
		type=$rnd_type
		canrecruit=no
		x=$elf_start.x
		y=$elf_start.y
		placement=map
		passable=yes
		animate=yes
		random_traits=yes
		{OBJECT_LOYAL}
	[/unit]
	{CLEAR_VARIABLE rnd_type}
#enddef


# ----- Undead -----------------------------------------------------------
#define UNDEAD_ARE_SIDE7
	# Undead, including random/curse units, necromancers, and lich calamities, are all side 7
	[side]
		side=7
		controller=ai
		team_name=undead # Undead want souls, not creatures
		user_team_name=_"Undead"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#caution=0.01			# no retreat
			#leader_value=3.0
			aggression=0.9
			village_value=0.5
			[goal]
				name=target
				[criteria]
					{FILTER_FOR_CURSE "undead_generator"}
				[/criteria]
				value=10
			[/goal]
			#[goal]
			#	name=target_location
			#	[criteria]
			#		[and]
			#			[filter_owner]
			#				side=1
			#			[/filter_owner]
			#			terrain=*^V*
			#		[/and]
			#	[/criteria]
			#	value=1
			#[/goal]
		[/ai]
		{FLAG_VARIANT "undead"}
	[/side]
	# Undead are scared of fire -- won't burn anything

	[event]
		name=new_undead_raid
		first_time_only=no
		{RANDOM_VAR rnd_dir 2,3}	# west or south edge
		[store_locations]
			variable=undead_places
			{X_AND_Y_ARE_ON_THE_MAP}
			terrain=!,W*,*^Y*,*^V*,K*,C*
			[and]	# appears near the signpost
				x=$map_signs[$rnd_dir].x
				y=$map_signs[$rnd_dir].y
				radius={BORDER}
			[/and]
		[/store_locations]
		{RANDOM_VAR rnd_i 0.."$($undead_places.length-1)"}
		[if]
			{VARIABLE_CONDITIONAL season less_than 4}
			[then]
				{VARIABLE necro_type ("Dark Sorcerer")}
			[/then]
			[else]
				{VARIABLE necro_type ("Necromancer")}
			[/else]
		[/if]
		{WF_DEBUG "Spawning a $necro_type at $undead_places[$rnd_i].x, $undead_places[$rnd_i].y"}
		[unit]
			side=7
			type=$necro_type
			x=$undead_places[$rnd_i].x
			y=$undead_places[$rnd_i].y
			generate_name=yes
			random_traits=yes
			canrecruit=no
			placement=map
			passable=yes
			animate=yes
			role=undead_leader
			{OBJECT_LOYAL}
			{IS_HERO}
		[/unit]
		# Add a few "assistants"
		{REPEAT 3 (
			{RANDOM_VAR rnd_type "Shadow","Wraith","Necrophage","Deathblade","Revenant","Bone Shooter"}
			[unit]
				side=7
				type=$rnd_type
				canrecruit=no
				x,y=$undead_places[$rnd_i].x,$undead_places[$rnd_i].y
				placement=map
				passable=yes
				animate=yes
				random_traits=yes
				{OBJECT_LOYAL}
				overlays="misc/loyal-icon.png"
			[/unit] )}
		{CLEAR_VARIABLE rnd_type}
		# Now he "recruits" his army
		{COUNT_VILLAGES num_villages}
		{VARIABLE undead_gold "$(ceil($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages)))"}
		{VARIABLE_OP undead_gold multiply 2}
		{WF_DEBUG "Undead fake recruit gold set to $undead_gold"}
		[set_variables]
			name=undead_list
			mode=replace
			{VALUE2 type "Dark Adept" cost 16}
			{VALUE2 type "Ghost" cost 20}
			{VALUE2 type "Ghoul" cost 16}
			{VALUE2 type "Skeleton" cost 15}
			{VALUE2 type "Skeleton Archer" cost 14}
			{VALUE2 type "Walking Corpse" cost 8}	# walking corpses should appear slightly more often
			{VALUE2 type "Walking Corpse" cost 8}
			{VALUE2 type "Soulless" cost 13}
		[/set_variables]
		[while]
			{VARIABLE_CONDITIONAL undead_gold greater_than 0}	# will go *roughly* to zero
			[do]
				{RANDOM_VAR rnd_i2 0.."$($undead_list.length-1)"}
				[unit]
					side=7
					type=$undead_list[$rnd_i2].type
					x,y=$undead_places[$rnd_i].x,$undead_places[$rnd_i].y
					placement=map
					passable=yes
					generate_name=yes
					random_traits=yes
					{OBJECT_LOYAL}
					random_gender=yes
					animate=yes
				[/unit]
				{VARIABLE_OP undead_gold sub $undead_list[$rnd_i2].cost}
			[/do]
		[/while]
		{CLEAR_VARIABLE undead_places,rnd_i,rnd_i2,necro_type,num_villages,rnd_dir,undead_list,undead_gold}

		# Dialogue event put here to (almost, but not quite certainly) avoid
		# triggering on an undead-cursed relic
		[event]
			name=sighted
			#id=undead_sighting
			first_time_only=yes
			[filter]
				side=7
			[/filter]
			[filter_second]
				side=1
			[/filter_second]
		#{ON_SIGHTING undead_sighting 1 side=7 (
			{DIALOGUE first_undead_sighting (
				[if]
					[have_unit]	# the hero sights
						x,y=$x1,$y1
						id=Hero
					[/have_unit]
					[then]
						{HERO_SAYS _"Undead! What are they doing here?"}
					[/then]
					[else]
						{ADVISOR_SAYS _"Undead, milord!"}
						{HERO_SAYS _"What are they doing here?"}
					[/else]
				[/if]
				{ADVISOR_SAYS _"Any mage caught practicing necromancy is exiled from Wesnoth, milord. Some must wander the northlands, likely with their undead spawn."}
				{HERO_SAYS _"I have no wish to serve in some criminal's war host. Raise your blades, men, and send these unnatural creatures back to their graves!"}
				{CYNIC_SAYS {ASIDE _"Maces might be of more use, here."}}
				{TUTORIAL undead_sighting _"Groups of undead, lead by a necromancer, attack in groups typically larger than outlaws but a bit smaller than orcs. If you have built the appropriate buildings to recruit mages or heavy infantry, you should likely recruit a few of those units. If you only have spearmen, sticking to good defensive terrain and fighting only during the day become even more important than usual."}
				{INCIDENTAL_MUSIC "the_dangerous_symphony.ogg"}
			)}
		#)}
		[/event]
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=7
			role=undead_leader
		[/filter]
		{ENEMY_GOLD_REWARD 7}
	[/event]
#enddef

# ----- Calamity ---------------------------------------------------------
#define CALAMITY_IS_SIDE8
	# Calamity armies other than animals or undead are side 8
	[side]
		side=8
		controller=ai
		team_name=calamity
		user_team_name=_"Calamity"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			#caution=0.01			# no retreat
			#leader_value=3.0
			aggression=0.9
			village_value=0.5
			[goal]				# focus on the player
				name=target
				[criteria]
					side=1
				[/criteria]
				value=10
			[/goal]
		[/ai]
		{FLAG_VARIANT6 "ragged"}
	[/side]

	[event]
		name=recruit
		first_time_only=no
		[filter]
			side=8
		[/filter]
		[object]
			#filter is implicit
			[effect]
				apply_to=loyal
			[/effect]
		[/object]
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=8
			[and]
				role=lich
				[or]
					role=gryphon_king
				[/or]
				[or]
					role=evil_loyalist
				[/or]
				[or]
					role=saurian_leader
				[/or]
				[or]
					role=yeti_leader
				[/or]
				[or]
					role=drake_leader
				[/or]
				[or]
					role=dwarf_leader
				[/or]
			[/and]
		[/filter]
		{ENEMY_GOLD_REWARD 8}
	[/event]

	#{WILL_BURN_BUILDINGS 8}
	#{WILL_BURN_FARMS 8 75}

	[event]
		name=moveto
		first_time_only=no
		[filter]
			side=1,9
			[filter_location]
				terrain=Ker
			[/filter_location]
		[/filter]
		{MODIFY_TERRAIN Rb $x1 $y1 }
		[terrain]
			terrain=Re
			[filter_adjacent_location]
				adjacent=se,s,sw,nw
				x=$x1
				y=$y1
			[/filter_adjacent_location]
		[/terrain]
		{FIRE_ANIMATION $x1 $y1}	# This places the "burning building" terrain at x,y
		{PLACE_IMAGE "scenery/rubble.png" $x1 $y1}
	[/event]
#enddef


# ----- Friends ----------------------------------------------------------
#define FRIENDS_ARE_SIDE9
	# Friendly units, mostly merchants and possibly mercenaries
	[side]
		side=9
		controller=ai
		team_name=settlers,wild_animals
		user_team_name=_"Friends"
		no_leader=yes
		shroud=no
		fog=no
		share_maps=no
		gold=0
		income={ENEMY_INCOME}
		[ai]
			aggression=0.1
			caution=0.5
			grouping=defensive
			leader_value=0.0
			support_villages=no
			village_value=0
		[/ai]
		{FLAG_VARIANT "loyalist"}
	[/side]

	# Micro-AI tag has to be applied in an event tag
	[event]
		name=prestart
		[micro_ai]
			side=9
			ai_type=zone_guardian
			action=add

			[filter]
				#side=9
			[/filter]
			[filter_location]
				x="$({BORDER})"-"$({MAP_WIDTH}-{BORDER})"
				y="$({BORDER})"-"$({MAP_HEIGHT}-{BORDER})"
			[/filter_location]
			#station_x,station_y="$(floor({MAP_WIDTH}/2))","$(floor({MAP_HEIGHT}/2))"
		[/micro_ai]
	[/event]

	[event]
		name=side 9 turn end
		first_time_only=no

		{VARIABLE_OP relations.king add {ENEMY_STEP}}

		[if]
			[have_unit]
				side=9
				role=king_leader
			[/have_unit]
		[then]
			{VARIABLE relations.king "$(-1*{ENEMY_STEP}*{SEASON_LENGTH})"}	# reset relations
		[/then]
		[/if]

		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.king}
			[then]
				{WF_DEBUG "Spawning King knights $turn_number $random < $relations.king"}
				{RANDOM_VAR rnd_type (Javelineer,Lieutenant,Red Mage,White Mage,Lancer,Shock Trooper,Knight,Duelist,Longbowman,Swordsman,Pikeman,Dragoon,Horseman Commander,Infantry Lieutenant)}
				{FIND_NEAREST_HEX king_start $map_signs[3].x $map_signs[3].y (
					terrain=!,W*,*^Y*,*^V*,K*,C*
				) }
				{WF_DEBUG "Placing some king knights near $king_start.x,$king_start.y"}
				[unit]
					side=9
					type=$rnd_type
					role=king_leader
					x=$king_start.x
					y=$king_start.y
					canrecruit=no
					placement=map
					passable=yes
					animate=yes
					{OBJECT_LOYAL}
					{IS_HERO}
				[/unit]
				{CLEAR_VARIABLE rnd_type}
				{REPEAT 3 {NEW_RANDOM_KING}}
#ifndef HARD
				{NEW_RANDOM_KING}
#endif
				{VARIABLE relations.king "$(-1*{ENEMY_STEP}*{SEASON_LENGTH})"}	# reset relations
				[event]
					name=sighted
					first_time_only=yes
					[filter]
						side=9
					[/filter]
					[filter_second]
						side=1
					[/filter_second]
					[if]
					[have_unit]
						side=9
						role=king_leader
					[/have_unit]
					[then]
					[scroll_to]
						x,y=$x1,$y1
					[/scroll_to]
					[message]
						role=king_leader
						message=_"By the grace of the King, we were ordered to protect his Majesty's subjects and keep his peace."
					[/message]
					[/then]
					[/if]
				[/event]
			[/then]
		[/if]
		{CLEAR_VARIABLE king_start,random}
	[/event]

	[event]
		name=die
		first_time_only=no
		[filter]
			side=9
			role=king_leader
		[/filter]
		{ENEMY_GOLD_REWARD 9}
	[/event]
#enddef

#define NEW_RANDOM_KING
	{RANDOM_VAR rnd_type (Spearman,Cavalryman,Mage,Horseman,Fencer,Heavy Infantryman,Sergeant,Bowman,Junior Commander)}
	[unit]
		side=9
		type=$rnd_type
		canrecruit=no
		x=$king_start.x
		y=$king_start.y
		placement=map
		passable=yes
		animate=yes
		random_traits=yes
		{OBJECT_LOYAL}
	[/unit]
	{CLEAR_VARIABLE rnd_type}
#enddef

# ----- Raiding ----------------------------------------------------------
#define NEW_ORC_AND_UNDEAD_RAIDS JUMP
#arg LIMIT
2#endarg
	[event]
		name=prestart
		{VARIABLE quota.raids {LIMIT}}
#ifdef EASY
		{VARIABLE_OP quota.raids sub 1}
#endif
#ifdef HARD
		{VARIABLE_OP quota.raids add 1}
#endif
	[/event]

	[event]
		name=new turn
		first_time_only=no
		{VARIABLE_OP relations.raids add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.raids}
			{VARIABLE_CONDITIONAL quota.raids greater_than 0}
			[then]
				# relative quantities of orc/undead set frequencies
				{RANDOM_VAR enemy_choice ("orc","orc","orc","undead")}
				[switch]	# switch so I can add other options easily
					variable=enemy_choice
					[case]
						value="orc"
						{WF_DEBUG "Spawning switch orc raid $turn_number $random < $relations.raids"}
						{FIRE_EVENT new_orc_raid}
					[/case]
					[case]
						value="undead"
						{WF_DEBUG "Spawning switch undead raid $turn_number $random < $relations.raids"}
						{FIRE_EVENT new_undead_raid}
					[/case]
				[/switch]
				{VARIABLE_OP relations.raids sub "$({JUMP}*{ENEMY_STEP})"}
				{VARIABLE_OP quota.raids sub 1}
			[/then]
		[/if]
		{CLEAR_VARIABLE enemy_choice}
		{CLEAR_VARIABLE random}
	[/event]
#enddef

#define NEW_ORC_RAIDS JUMP
#arg LIMIT
2#endarg
	[event]
		name=prestart
		{VARIABLE quota.raids {LIMIT}}
#ifdef EASY
		{VARIABLE_OP quota.raids sub 1}
#endif
#ifdef HARD
		{VARIABLE_OP quota.raids add 1}
#endif
	[/event]

	[event]
		name=new turn
		first_time_only=no
		{VARIABLE_OP relations.raids add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.raids}
			{VARIABLE_CONDITIONAL quota.raids greater_than 0}
			[then]
				{WF_DEBUG "Spawning orc raid $turn_number $random < $relations.raids"}
				{FIRE_EVENT new_orc_raid}
				{VARIABLE_OP relations.raids sub "$({JUMP}*{ENEMY_STEP})"}
				{VARIABLE_OP quota.raids sub 1}
			[/then]
		[/if]
		{CLEAR_VARIABLE random}
	[/event]
#enddef

#define NEW_UNDEAD_RAIDS JUMP
#arg LIMIT
2#endarg
	[event]
		name=prestart
		{VARIABLE quota.raids {LIMIT}}
#ifdef EASY
		{VARIABLE_OP quota.raids sub 1}
#endif
#ifdef HARD
		{VARIABLE_OP quota.raids add 1}
#endif
	[/event]

	[event]
		name=new turn
		first_time_only=no
		{VARIABLE_OP relations.raids add {ENEMY_STEP}}
		{RANDOM_VAR random 1..100}
		[if]
			{VARIABLE_CONDITIONAL random less_than $relations.raids}
			{VARIABLE_CONDITIONAL quota.raids greater_than 0}
			[then]
				{WF_DEBUG "Spawning undead raid $turn_number $random < $relations.raids"}
				{FIRE_EVENT new_undead_raid}
				{VARIABLE_OP relations.raids sub "$({JUMP}*{ENEMY_STEP})"}
				{VARIABLE_OP quota.raids sub 1}
			[/then]
		[/if]
		{CLEAR_VARIABLE random}
	[/event]
#enddef

# ----- Burnination ------------------------------------------------------
#define WILL_BURN_BUILDINGS SIDE
	[event]
		name=moveto
		first_time_only=no
		[filter]
			side={SIDE}
			# Not sure how to switch on village terrain, so I'll handle
			# that event separately
			[filter_location]
				# Do not raise winter castle Cea
				terrain=*^Yf,*^Yfo,*^Yb,*^Ybo,*^Ys,*^Yso,*^Yu,*^Yuo,*^Ya,*^Yao,*^Yk,Ce
			[/filter_location]
		[/filter]
		[store_locations]	# This has base and overlay in it
			variable=burn_location_full
			x,y=$x1,$y1
		[/store_locations]
		# This is kind of an ugly hack, but I'm not sure how to make it cleaner
		[set_variables]
			name=burn_location
			mode=replace
			[split]
				list=$burn_location_full.terrain
				key=layer
				separator="^"
			[/split]
		[/set_variables]
		[switch]	# switch on base terrain
			variable=burn_location[0].layer
			[case]	# Wooden encampments
				value=Ce
				{CALL_FUNCTION "fort" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Wooden keep
				value=Ke,Kea
				{CALL_FUNCTION "fort" do,x,y="burn",$x1,$y1}
				{NARRATOR_SAYS _"As the flames lick through gaps in your keep walls, anxious villagers rush into the streets. The sight of the town center being reduced to ashes and the clang of swords sends them to their homes to grab food and supplies before rushing as far from the battle as possible.

Once in the wilderness, they become easy prey for the wolves..."}
				[endlevel]
					result=defeat
				[/endlevel]
			[/case]
		[/switch]
		[switch]	# switch on overlay terrain
			# I'd like to make this more building type-agnostic, but that's difficult
			variable=burn_location[1].layer
			[case]	# Armorer
				value=Ya,Yao
				{CALL_FUNCTION "armorer" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Blacksmith
				value=Yf,Yfo
				{CALL_FUNCTION "blacksmith" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Bowyer
				value=Yb,Ybo
				{CALL_FUNCTION "bowyer" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Library
				value=Yu,Yuo
				{CALL_FUNCTION "library" do,x,y="burn",$x1,$y1}
			[/case]
			[case]	# Stables
				value=Ys,Yso
				{CALL_FUNCTION "stables" do,x,y="burn",$x1,$y1}
			[/case]
		[/switch]
		{CLEAR_VARIABLE burn_location_full}
		{CLEAR_VARIABLE burn_location}
	[/event]
#enddef

#define WILL_BURN_FARMS SIDE PROBABILITY
	[event]
		name=moveto
		first_time_only=no
		[filter]
			side={SIDE}
			[filter_location]
				#Do not burn winter farm Vha
				terrain=*^Vh
				[not]
					# Will not burn if side has a leader and captures village
					[filter_owner]
						[allied_with]
							side={SIDE}
						[/allied_with]
					[/filter_owner]
				[/not]
			[/filter_location]
		[/filter]
		{RANDOM_VAR burn_chance 1..100}
		{WF_DEBUG "Burn farm side {SIDE} if $burn_chance <= {PROBABILITY}"}
		[if]
			{VARIABLE_CONDITIONAL burn_chance less_than_equal_to {PROBABILITY}}
			[then]
				{CALL_FUNCTION "farm" do,x,y="burn",$x1,$y1}
			[/then]
		[/if]
		{CLEAR_VARIABLE burn_chance}
	[/event]
#enddef
