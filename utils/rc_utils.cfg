#textdomain wesnoth-Wild_Frontiers

#define WF_FETCH_NEXT_CALAMITY
    {VARIABLE init_calamities ("lich","gryphons","loyalists","saurians","drakes","dwarves","skip")}
    {VARIABLE fetch_next_calamity_str $relations.calamities}
    [fire_event]
        name=wf_fetch_next_calamity
    [/fire_event]
    {VARIABLE relations.calamities $fetch_next_calamity_str}
    {CLEAR_VARIABLE fetch_next_calamity_str}
#enddef

#define WF_RESTATE_CALAMITY TYPE
    {VARIABLE relations.calamities "{TYPE},$relations.calamities"}
#enddef

#define WF_FETCH_NEXT_CALAMITY_EVENT
    [event]
        name=wf_fetch_next_calamity
        id=wf_fetch_next_calamity
        first_time_only=no

        [set_variables]
            name=fetch_next_calamity
            mode=replace
            [split]
                list=$fetch_next_calamity_str
                key=calamity_type
                separator=,
                remove_empty=yes
            [/split]
        [/set_variables]

        # check if calamity_type list has entries
        [foreach]
            array=fetch_next_calamity
            variable=this_list
            [do]
                [if]
                    {VARIABLE_CONDITIONAL this_list.calamity_type not_equals $null}
                    [then]
                        {VARIABLE list_has_entries yes}
                        [break]
                        [/break]
                    [/then]
                [/if]
            [/do]
        [/foreach]

        # if calamity_type list is empty, fill it.
        [if]
            {VARIABLE_CONDITIONAL list_has_entries not_equals yes}
            [then]
                {VARIABLE tmp_list ($init_calamities)}
                [set_variables]
                    name=fetch_next_calamity
                    mode=replace
                    [split]
                        list=$tmp_list
                        key=calamity_type
                        separator=,
                        remove_empty=yes
                    [/split]
                [/set_variables]
                {CLEAR_VARIABLE tmp_list}
            [/then]
        [/if]
        {CLEAR_VARIABLE list_has_entries}
        [if]
            {VARIABLE_CONDITIONAL relations.calamity_type equals "none"}
            [or]
                {VARIABLE_CONDITIONAL relations.calamity_type equals $null}
            [/or]
            [then]
                # randomly choose a calamity_type
                [set_variable]
                    name=tmp_list
                    [join]
                        variable=fetch_next_calamity
                        key=calamity_type
                        separator=,
                        remove_empty=yes
                    [/join]
                [/set_variable]
                {VARIABLE_OP relations.calamity_type rand $tmp_list}
                {CLEAR_VARIABLE tmp_list}
            [/then]
        [/if]
        {LOOKUP_INDEX fetch_next_calamity calamity_type $relations.calamity_type index}
        {CLEAR_VARIABLE fetch_next_calamity[$index].calamity_type}
        {CLEAR_VARIABLE index}

        [set_variable]
            name=fetch_next_calamity_str
            [join]
                variable=fetch_next_calamity
                key=calamity_type
                separator=,
                remove_empty=yes
            [/join]
        [/set_variable]

        {CLEAR_VARIABLE fetch_next_calamity}
        {CLEAR_VARIABLE init_calamities}
    [/event]

    [event]
        name=start
        first_time_only=yes

        [remove_event]
            id=wf_fetch_next_calamity
        [/remove_event]
    [/event]
#enddef
